prompt --application/deployment/install/install_eba_proj_status_triggers
begin
--   Manifest
--     INSTALL: INSTALL-EBA_PROJ_STATUS$ triggers
--   Manifest End
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9008156634332785
,p_default_application_id=>134
,p_default_id_offset=>172493832712964115
,p_default_owner=>'MISO'
);
wwv_flow_api.create_install_script(
 p_id=>wwv_flow_api.id(4307868300582085005)
,p_install_id=>wwv_flow_api.id(9012014618759672631)
,p_name=>'EBA_PROJ_STATUS$ triggers'
,p_sequence=>790
,p_script_type=>'INSTALL'
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'create or replace trigger au_eba_proj_status',
'    after update on eba_proj_status$',
'    for each row',
'declare',
'    pragma autonomous_transaction;',
'    ov varchar2(4000) := null;',
'    nv varchar2(4000) := null;',
'begin',
'    -- CAT_ID (foreign key)',
'    if nvl(:old.cat_id,-999) != nvl(:new.cat_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select category val from eba_proj_status_cats t where t.id = :old.cat_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select category val from eba_proj_status_cats t where t.id = :new.cat_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS'', :new.row_key, :new.id, ''CAT_ID'', ov, nv);',
'    end if;',
'    -- PARENT_PROJECT_ID (foreign key)',
'    if nvl(:old.parent_project_id,-999) != nvl(:new.parent_project_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select row_key val from eba_proj_status$ t where t.id = :old.parent_project_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select row_key val from eba_proj_status$ t where t.id = :new.parent_project_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS'', :new.row_key, :new.id, ''PARENT_PROJECT_ID'', ov, nv);',
'    end if;',
'    -- PROJECT (default)',
'    if nvl(:old.project, ''0'') != nvl(:new.project,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT'', substr(:old.project,0,4000), substr(:new.project,0,4000) ); ',
'    end if;',
'    -- PROJECT_CUSTOMER (default)',
'    if nvl(:old.project_customer, ''0'') != nvl(:new.project_customer,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_CUSTOMER'', substr(:old.project_customer,0,4000), substr(:new.project_customer,0,4000) ); ',
'    end if;',
'    -- PROJECT_STATUS (foreign key)',
'    if nvl(:old.project_status,-999) != nvl(:new.project_status,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select status_short_desc val from eba_proj_status_codes t where t.id = :old.project_status) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select status_short_desc val from eba_proj_status_codes t where t.id = :new.project_status) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_STATUS'', ov, nv);',
'    end if;',
'    -- TAGS (default)',
'    if nvl(:old.tags, ''0'') != nvl(:new.tags,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''TAGS'', substr(:old.tags,0,4000), substr(:new.tags,0,4000) ); ',
'    end if;',
'    -- NEXT_MILESTONE_NAME (default)',
'    if nvl(:old.next_milestone_name, ''0'') != nvl(:new.next_milestone_name,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''NEXT_MILESTONE_NAME'', substr(:old.next_milestone_name,0,4000), substr(:new.next_milestone_name,0,4000) ); ',
'    end if;',
'    -- NEXT_MILESTONE_DATE (date/timestamp)',
'    if (:old.next_milestone_date is null and :new.next_milestone_date is not null) or ',
'        (:old.next_milestone_date is not null and :new.next_milestone_date is null) or ',
'        (:old.next_milestone_date != :new.next_milestone_date) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''NEXT_MILESTONE_DATE'', to_char(:old.next_milestone_date, ''DD-MON-YYYY''), to_char(:new.next_milestone_date, ''DD-MON-YYYY'') );',
'    end if;',
'    -- GOAL (default)',
'    if nvl(:old.goal, ''0'') != nvl(:new.goal,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''GOAL'', substr(:old.goal,0,4000), substr(:new.goal,0,4000) ); ',
'    end if;',
'    -- WHAT_IS_SUCCESS (default)',
'    if nvl(:old.what_is_success, ''0'') != nvl(:new.what_is_success,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''WHAT_IS_SUCCESS'', substr(:old.what_is_success,0,4000), substr(:new.what_is_success,0,4000) ); ',
'    end if;',
'    -- URL (default)',
'    if nvl(:old.url, ''0'') != nvl(:new.url,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''URL'', substr(:old.url,0,4000), substr(:new.url,0,4000) ); ',
'    end if;',
'    -- INCLUDE_BY_DEFAULT_YN (default)',
'    if nvl(:old.include_by_default_yn, ''0'') != nvl(:new.include_by_default_yn,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''INCLUDE_BY_DEFAULT_YN'', substr(:old.include_by_default_yn,0,4000), substr(:new.include_by_default_yn,0,4000) ); ',
'    end if;',
'    -- DESCRIPTION (default)',
'    if nvl(:old.description, ''0'') != nvl(:new.description,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''DESCRIPTION'', substr(:old.description,0,4000), substr(:new.description,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_01 (default)',
'    if nvl(:old.project_flex_01, ''0'') != nvl(:new.project_flex_01,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_01'', substr(:old.project_flex_01,0,4000), substr(:new.project_flex_01,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_02 (default)',
'    if nvl(:old.project_flex_02, ''0'') != nvl(:new.project_flex_02,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_02'', substr(:old.project_flex_02,0,4000), substr(:new.project_flex_02,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_03 (default)',
'    if nvl(:old.project_flex_03, ''0'') != nvl(:new.project_flex_03,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_03'', substr(:old.project_flex_03,0,4000), substr(:new.project_flex_03,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_04 (default)',
'    if nvl(:old.project_flex_04, ''0'') != nvl(:new.project_flex_04,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_04'', substr(:old.project_flex_04,0,4000), substr(:new.project_flex_04,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_05 (default)',
'    if nvl(:old.project_flex_05, ''0'') != nvl(:new.project_flex_05,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_05'', substr(:old.project_flex_05,0,4000), substr(:new.project_flex_05,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_06 (default)',
'    if nvl(:old.project_flex_06, ''0'') != nvl(:new.project_flex_06,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_06'', substr(:old.project_flex_06,0,4000), substr(:new.project_flex_06,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_07 (default)',
'    if nvl(:old.project_flex_07, ''0'') != nvl(:new.project_flex_07,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_07'', substr(:old.project_flex_07,0,4000), substr(:new.project_flex_07,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_08 (default)',
'    if nvl(:old.project_flex_08, ''0'') != nvl(:new.project_flex_08,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_08'', substr(:old.project_flex_08,0,4000), substr(:new.project_flex_08,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_N01 (default)',
'    if nvl(:old.project_flex_n01, ''0'') != nvl(:new.project_flex_n01,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_N01'', substr(:old.project_flex_n01,0,4000), substr(:new.project_flex_n01,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_N02 (default)',
'    if nvl(:old.project_flex_n02, ''0'') != nvl(:new.project_flex_n02,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_N02'', substr(:old.project_flex_n02,0,4000), substr(:new.project_flex_n02,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_N03 (default)',
'    if nvl(:old.project_flex_n03, ''0'') != nvl(:new.project_flex_n03,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_N03'', substr(:old.project_flex_n03,0,4000), substr(:new.project_flex_n03,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_N04 (default)',
'    if nvl(:old.project_flex_n04, ''0'') != nvl(:new.project_flex_n04,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_N04'', substr(:old.project_flex_n04,0,4000), substr(:new.project_flex_n04,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_D01 (date/timestamp)',
'    if (:old.project_flex_d01 is null and :new.project_flex_d01 is not null) or ',
'        (:old.project_flex_d01 is not null and :new.project_flex_d01 is null) or ',
'        (:old.project_flex_d01 != :new.project_flex_d01) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D01'', to_char(:old.project_flex_d01, ''DD-MON-YYYY''), to_char(:new.project_flex_d01, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D02 (date/timestamp)',
'    if (:old.project_flex_d02 is null and :new.project_flex_d02 is not null) or ',
'        (:old.project_flex_d02 is not null and :new.project_flex_d02 is null) or ',
'        (:old.project_flex_d02 != :new.project_flex_d02) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D02'', to_char(:old.project_flex_d02, ''DD-MON-YYYY''), to_char(:new.project_flex_d02, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D03 (date/timestamp)',
'    if (:old.project_flex_d03 is null and :new.project_flex_d03 is not null) or ',
'        (:old.project_flex_d03 is not null and :new.project_flex_d03 is null) or ',
'        (:old.project_flex_d03 != :new.project_flex_d03) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D03'', to_char(:old.project_flex_d03, ''DD-MON-YYYY''), to_char(:new.project_flex_d03, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D04 (date/timestamp)',
'    if (:old.project_flex_d04 is null and :new.project_flex_d04 is not null) or ',
'        (:old.project_flex_d04 is not null and :new.project_flex_d04 is null) or ',
'        (:old.project_flex_d04 != :new.project_flex_d04) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D04'', to_char(:old.project_flex_d04, ''DD-MON-YYYY''), to_char(:new.project_flex_d04, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D05 (date/timestamp)',
'    if (:old.project_flex_d05 is null and :new.project_flex_d05 is not null) or ',
'        (:old.project_flex_d05 is not null and :new.project_flex_d05 is null) or ',
'        (:old.project_flex_d05 != :new.project_flex_d05) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D05'', to_char(:old.project_flex_d05, ''DD-MON-YYYY''), to_char(:new.project_flex_d05, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D06 (date/timestamp)',
'    if (:old.project_flex_d06 is null and :new.project_flex_d06 is not null) or ',
'        (:old.project_flex_d06 is not null and :new.project_flex_d06 is null) or ',
'        (:old.project_flex_d06 != :new.project_flex_d06) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D06'', to_char(:old.project_flex_d06, ''DD-MON-YYYY''), to_char(:new.project_flex_d06, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D07 (date/timestamp)',
'    if (:old.project_flex_d07 is null and :new.project_flex_d07 is not null) or ',
'        (:old.project_flex_d07 is not null and :new.project_flex_d07 is null) or ',
'        (:old.project_flex_d07 != :new.project_flex_d07) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D07'', to_char(:old.project_flex_d07, ''DD-MON-YYYY''), to_char(:new.project_flex_d07, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D08 (date/timestamp)',
'    if (:old.project_flex_d08 is null and :new.project_flex_d08 is not null) or ',
'        (:old.project_flex_d08 is not null and :new.project_flex_d08 is null) or ',
'        (:old.project_flex_d08 != :new.project_flex_d08) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D08'', to_char(:old.project_flex_d08, ''DD-MON-YYYY''), to_char(:new.project_flex_d08, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D09 (date/timestamp)',
'    if (:old.project_flex_d09 is null and :new.project_flex_d09 is not null) or ',
'        (:old.project_flex_d09 is not null and :new.project_flex_d09 is null) or ',
'        (:old.project_flex_d09 != :new.project_flex_d09) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D09'', to_char(:old.project_flex_d09, ''DD-MON-YYYY''), to_char(:new.project_flex_d09, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D10 (date/timestamp)',
'    if (:old.project_flex_d10 is null and :new.project_flex_d10 is not null) or ',
'        (:old.project_flex_d10 is not null and :new.project_flex_d10 is null) or ',
'        (:old.project_flex_d10 != :new.project_flex_d10) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D10'', to_char(:old.project_flex_d10, ''DD-MON-YYYY''), to_char(:new.project_flex_d10, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D11 (date/timestamp)',
'    if (:old.project_flex_d11 is null and :new.project_flex_d11 is not null) or ',
'        (:old.project_flex_d11 is not null and :new.project_flex_d11 is null) or ',
'        (:old.project_flex_d11 != :new.project_flex_d11) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D11'', to_char(:old.project_flex_d11, ''DD-MON-YYYY''), to_char(:new.project_flex_d11, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D12 (date/timestamp)',
'    if (:old.project_flex_d12 is null and :new.project_flex_d12 is not null) or ',
'        (:old.project_flex_d12 is not null and :new.project_flex_d12 is null) or ',
'        (:old.project_flex_d12 != :new.project_flex_d12) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D12'', to_char(:old.project_flex_d12, ''DD-MON-YYYY''), to_char(:new.project_flex_d12, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_CLOB (default)',
'    if nvl(:old.project_flex_clob, ''0'') != nvl(:new.project_flex_clob,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_CLOB'', substr(:old.project_flex_clob,0,4000), substr(:new.project_flex_clob,0,4000) ); ',
'    end if;',
'    -- IS_DELETED_YN (default)',
'    if nvl(:old.is_deleted_yn, ''0'') != nvl(:new.is_deleted_yn,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''IS_DELETED_YN'', substr(:old.is_deleted_yn,0,4000), substr(:new.is_deleted_yn,0,4000) ); ',
'    end if;',
'    -- ACL_STATUS_LEVEL (default)',
'    if nvl(:old.acl_status_level, ''0'') != nvl(:new.acl_status_level,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''ACL_STATUS_LEVEL'', substr(:old.acl_status_level,0,4000), substr(:new.acl_status_level,0,4000) ); ',
'    end if;',
'    -- SIZE_ID (foreign key)',
'    if nvl(:old.size_id,-999) != nvl(:new.size_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select project_size val from eba_proj_status_sizes t where t.id = :old.size_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select project_size val from eba_proj_status_sizes t where t.id = :new.size_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS'', :new.row_key, :new.id, ''SIZE_ID'', ov, nv);',
'    end if;',
'    -- RESTRICT_MS_AI_MANAGEMENT (default)',
'    if nvl(:old.restrict_ms_ai_management, ''0'') != nvl(:new.restrict_ms_ai_management,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''RESTRICT_MS_AI_MANAGEMENT'', substr(:old.restrict_ms_ai_management,0,4000), substr(:new.restrict_ms_ai_management,0,4000) ); ',
'    end if;',
'    -- TEMPLATE_ID (foreign key)',
'    if nvl(:old.template_id,-999) != nvl(:new.template_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select name val from eba_proj_templates t where t.id = :old.template_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select name val from eba_proj_templates t where t.id = :new.template_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS'', :new.row_key, :new.id, ''TEMPLATE_ID'', ov, nv);',
'    end if;',
'    -- CODE_NAME (default)',
'    if nvl(:old.code_name, ''0'') != nvl(:new.code_name,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''CODE_NAME'', substr(:old.code_name,0,4000), substr(:new.code_name,0,4000) ); ',
'    end if;',
'    -- HEADLINE (default)',
'    if nvl(:old.headline, ''0'') != nvl(:new.headline,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''HEADLINE'', :old.headline, :new.headline ); ',
'    end if;',
'    -- DEAL_TYPE_ID (foreign key)',
'    if nvl(:old.deal_type_id,-999) != nvl(:new.deal_type_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select deal_type val from eba_proj_deal_types t where t.id = :old.deal_type_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select deal_type val from eba_proj_deal_types t where t.id = :new.deal_type_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS'', :new.row_key, :new.id, ''DEAL_TYPE_ID'', ov, nv);',
'    end if;',
'    commit;',
'end au_eba_proj_status;',
'/',
'',
'',
'create or replace trigger bd_proj_status',
'    before delete on eba_proj_status$',
'    for each row',
'begin',
'    eba_proj_fw.tag_sync(',
'        p_new_tags      => null,',
'        p_old_tags      => :old.tags,',
'        p_content_type  => ''STATUS'',',
'        p_content_id    => :old.id );',
'end;',
'/',
'',
'',
'create or replace trigger bi_eba_proj_status',
'    before insert or update on eba_proj_status$',
'    for each row',
'begin',
'    if :new.tags is not null then',
'        :new.tags := eba_proj_fw.tags_cleaner(:new.tags);',
'    end if;',
'    if (inserting or updating) and nvl(dbms_lob.getlength(:new.logo_blob),0) > 51200 then',
'        raise_application_error(-20000, ''The size of the uploaded file was over 50KB. Please upload a smaller file.'');',
'    end if;',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(wwv_flow.g_user,user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(wwv_flow.g_user,user);',
'    end if;',
'    if :new.row_key is null then',
'        select eba_proj_fw.compress_int(eba_proj_seq.nextval) into :new.row_key from dual;',
'    end if;',
'    if :new.headline is null then',
'        :new.headline_last_updated := null;',
'    elsif :new.headline != nvl(:old.headline,''#X#X#X'') then',
'        :new.headline_last_updated := localtimestamp;',
'    end if;',
'    eba_proj_fw.tag_sync(',
'        p_new_tags      => :new.tags,',
'        p_old_tags      => :old.tags,',
'        p_content_type  => ''STATUS'',',
'        p_content_id    => :new.id );',
'end;',
'/'))
);
wwv_flow_api.component_end;
end;
/
