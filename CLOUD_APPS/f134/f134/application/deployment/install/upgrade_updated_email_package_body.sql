prompt --application/deployment/install/upgrade_updated_email_package_body
begin
--   Manifest
--     INSTALL: UPGRADE-updated email package body
--   Manifest End
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9008156634332785
,p_default_application_id=>134
,p_default_id_offset=>172493832712964115
,p_default_owner=>'MISO'
);
wwv_flow_api.create_install_script(
 p_id=>wwv_flow_api.id(6086799800318538153)
,p_install_id=>wwv_flow_api.id(9012014618759672631)
,p_name=>'updated email package body'
,p_sequence=>1160
,p_script_type=>'UPGRADE'
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'create or replace package body eba_proj_stat_email as',
'    g_project        varchar2(32767);',
'    g_links          varchar2(32767);',
'    g_files          varchar2(32767);',
'    g_milestones     varchar2(32767);',
'    g_action_items   varchar2(32767);',
'    c_pd_subject     constant varchar2(500) := eba_proj_fw.get_preference_value(''APPLICATION_TITLE'') || '': Past Due Milestones and Action Items'';',
'    c_uc_subject     constant varchar2(500) := eba_proj_fw.get_preference_value(''APPLICATION_TITLE'') || '': Upcoming Milestones and Action Items'';',
'    c_ps_subject     constant varchar2(500) := eba_proj_fw.get_preference_value(''APPLICATION_TITLE'') || '': #PROJECT_NAME# Project Details'';',
'    c_pst_subject    constant varchar2(500) := eba_proj_fw.get_preference_value(''APPLICATION_TITLE'') || '': #PROJECT_NAME# Project Status'';',
'    c_fb_subject     constant varchar2(500) := eba_proj_fw.get_preference_value(''APPLICATION_TITLE'') || '': Feedback Submission'';',
'    c_base_url       constant varchar2(500) := eba_proj_fw.get_preference_value(''HOST_URL'');',
'    c_job_sent_text  constant varchar2(500) := ''To change the delivery schedule or opt-out from receiving these emails, click the <strong>Email Preferences</strong> link on the <a href="#PREFERENCES_URL#">Preferences</a> page.'';',
'    c_max_text       constant integer := 300;',
'    c_sgm_tmpl       constant clob := ''',
'<!-- System Generated Email Text -->',
'<table width="100%" border="0" style="border-top: 1px solid #E0E0E0;">',
'<tr>',
'<td>',
'<table align="left" border="0" class="container" width="600">',
'<tr>',
'<td style="font-size: 12px; line-height: 1.3; text-align: left; padding: 10px 10px 0px 10px; vertical-align: middle;" valign="middle" align="left">',
'                                #FOOTER_TEXT#<br>',
'                                This is a system generated message. Do not reply to this message.<br>',
'                                Please contact your application administrator for further assistance.<br>',
'                                #OPT_OUT_TEXT#',
'</td>',
'</tr>',
'</table>',
'</td>',
'</tr>',
'</table>',
'<!-- // System Generated Job Email Text -->',
'''; -- System Generated Email Text',
'    c_ftr_tmpl       constant clob := ''',
'      #SYSTEM_GENERATED_EMAIL_TEXT#',
'</center>',
'</td>',
'</tr>',
'</table>',
'</body>',
'</html>',
'''; -- Email Footer',
'    c_pstop_tmpl     constant clob := ''<!DOCTYPE HTML>',
'<html>',
'<head>',
'<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">',
'<meta name="viewport" content="width=device-width">',
'<title>#APP_NAME#</title>',
'<style>',
'    body { margin: 0; padding: 0; min-width: 100%; -webkit-text-size-adjust: none; -ms-text-size-adjust: none; text-size-adjust: none; font-family: Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; color: #707070; background-color: #'
||'ffffff; mso-line-height-rule: exactly; -moz-osx-font-smoothing: grayscale; }',
'    table { border: 0; border-spacing: 0; border-collapse: collapse; mso-table-lspace: 0pt; mso-table-rspace: 0pt; }',
'    table td, table th { padding: 0; vertical-align: top; border-collapse: collapse; }',
'    p { margin: 0 0 16px 0; font-size: 12px; }',
'    table.container { margin-right: auto; margin-left: auto; width: 580px; }',
'    a { color: #2C7ABF; }',
'    body, th, td { line-height: 1.5; }',
'    .complete { color : #009900 !important; }',
'    .late { color : #dd0000 !important;  }',
'    .done { color : #000000 !important; }',
'    #mmTable td, #aiTable td, #msTable td, #issTable td { font-size: 12px; }',
'    @media only screen and (max-width: 580px) {',
'      .mobile-hide { display: none !important; }',
'      .stack { display: block !important; width: 100% !important; }',
'      table.container { width: 100% !important; }',
'      .header { height: auto !important; }',
'      .category-content td,',
'      .sub-category-title,',
'      .category-title { padding-right: 10px !important; padding-left: 10px !important; }',
'    }',
'</style>',
'</head>',
'<body bgcolor="#ffffff" style="font-family: Helvetica, Arial, sans-serif; background-color: #ffffff; color: #707070; margin: 0; padding: 0;">',
'<table class="body" border="0" width="100%" style="font-family: Helvetica, Arial, sans-serif">',
'<tr>',
'<td align="center" valign="top" style="background-color: #ffffff; color: #707070;">',
'#HEADER_TEXT#',
'<center>',
'<!-- Collapsed Header Wrapper -->',
'<table width="100%" border="0" bgcolor="#fd2a1b" style="background-color: #fd2a1b; color: #ffffff;">',
'<tr>',
'<td>',
'<table align="center" border="0" class="container" width="600">',
'<tr>',
'<td class="header" style="font-size: 14px; line-height: 1.3; text-align: left; padding: 20px 10px; vertical-align: middle; color: #ffffff;" valign="middle" align="left">',
'<font style="font-size: 16px; font-weight: 700; text-transform: uppercase;">#APP_NAME#</font>',
'</td>',
'</tr>',
'</table>',
'</td>',
'</tr>',
'</table>',
'<!-- // Collapsed Header Wrapper -->',
'<!-- Sub Header Wrapper -->',
'<table width="100%" border="0" bgcolor="#f8f8f8" style="background-color: #f4f4f4; color: #707070;">',
'<tr>',
'<td style="padding-top: 20px; padding-bottom: 20px;">',
'''; -- Project Details Email Top',
'    c_psphnd_tmpl    constant clob := ''',
'<table align="center" border="0" class="container" width="600">',
'<tr>',
'<td width="100%" class="stack" style="vertical-align: bottom; font-size: 14px; line-height: 1.5; text-align: left; padding: 0 10px; vertical-align: middle; color: #707070;" valign="middle" align="left">',
'<font style="font-size: 28px;"><a style="text-decoration: none; color: #333333;" href="#URL#">#NAME#</a></font><br>',
'<font style="font-size: 16px; font-weight: 400; color: #666666;">#DESCRIPTION#</font>',
'</td>',
'<td class="stack" style="padding: 10px 10px 0; vertical-align: middle;">',
'<!-- Primary Button -->',
'<table style="border-collapse: separate; overflow: hidden; border-radius: 3px; border: 1px solid #707070;">',
'<tr>',
'<td style="background-color: #707070; white-space: nowrap;">',
'<a href="#URL#" style="text-decoration: none; color: #ffffff;">',
'<span style="display: block; padding-left: 15px; padding-right: 15px; font-weight: 700; font-size: 13px; line-height: 35px;">',
'                              View Project',
'</span>',
'</a>',
'</td>',
'</tr>',
'</table>',
'<!-- // Primary Button -->',
'</td>',
'</tr>',
'</table>',
'</td>',
'</tr>',
'</table>',
'<!-- // Sub Header Wrapper -->',
'<br>',
'''; -- Project Details Project Header No Detail Template',
'    c_psphnd_ot_tmpl constant clob := ''',
'<!-- Content Wrapper -->',
'<table align="center" border="0" class="container" width="600">',
'<tr>',
'<td class="container-inner" style="text-align: left; padding-left: 10px; padding-right: 10px;" align="left">',
'<!-- Top Generic Table -->',
'<table border="0" width="100%" style="font-size: 12px;">',
'''; -- Project Details Project Header No Detail Optional Top Template',
'    c_psphd_tmpl     constant clob := ''',
'<table align="center" border="0" class="container" width="600">',
'<tr>',
'<td width="100%" class="stack" style="vertical-align: bottom; font-size: 14px; line-height: 1.5; text-align: left; padding: 0 10px; vertical-align: middle; color: #707070;" valign="middle" align="left">',
'<font style="font-size: 28px;"><a style="text-decoration: none; color: #333333;" href="#URL#">#NAME#</a></font><br>',
'<font style="font-size: 16px; font-weight: 400; color: #666666;">#DESCRIPTION#</font>',
'</td>',
'<td class="stack" style="padding: 10px 10px 0; vertical-align: middle;">',
'<!-- Primary Button -->',
'<table style="border-collapse: separate; overflow: hidden; border-radius: 3px; border: 1px solid #707070;">',
'<tr>',
'<td style="background-color: #707070; white-space: nowrap;">',
'<a href="#URL#" style="text-decoration: none; color: #ffffff;">',
'<span style="display: block; padding-left: 15px; padding-right: 15px; font-weight: 700; font-size: 13px; line-height: 35px;">',
'                              View Project',
'</span>',
'</a>',
'</td>',
'</tr>',
'</table>',
'<!-- // Primary Button -->',
'</td>',
'</tr>',
'</table>',
'</td>',
'</tr>',
'</table>',
'<!-- // Sub Header Wrapper -->',
'<br>',
'<!-- Content Wrapper -->',
'<table align="center" border="0" class="container" width="600">',
'<tr>',
'<td class="container-inner" style="text-align: left; padding-left: 10px; padding-right: 10px;" align="left">',
'<!-- Top Generic Table -->',
'<table border="0" width="100%" style="font-size: 12px;">',
'#KEY#',
'<tr>',
'<th class="stack" style="padding-top: 5px; padding-right: 10px; white-space: nowrap; color: #333333; text-align: right;">People:</th>',
'<td class="stack" style="padding-top: 5px; padding-bottom: 10px;">#PEOPLE#</td>',
'</tr>',
'<tr>',
'<th class="stack" style="padding-top: 5px; padding-right: 10px; white-space: nowrap; color: #333333; text-align: right;">#CATEGORY_LBL#:</th>',
'<td class="stack" style="padding-top: 5px; padding-bottom: 10px;">#CATEGORY#</td>',
'</tr>',
'<tr>',
'<th class="stack" style="padding-top: 5px; padding-right: 10px; white-space: nowrap; color: #333333; text-align: right;">Status:</th>',
'<td class="stack" style="padding-top: 5px; padding-bottom: 10px;">#STATUS#</td>',
'</tr>',
'<tr>',
'<th class="stack" style="padding-top: 5px; padding-right: 10px; white-space: nowrap; color: #333333; text-align: right;">Primary URL:</th>',
'<td class="stack" style="padding-top: 5px; padding-bottom: 10px;">#PRIMARY_URL#</td>',
'</tr>',
'<tr>',
'<th class="stack" style="padding-top: 5px; padding-right: 10px; white-space: nowrap; color: #333333; text-align: right;">Goal:</th>',
'<td class="stack" style="padding-top: 5px; padding-bottom: 10px;">#GOAL#</td>',
'</tr>',
'<tr>',
'<th class="stack" style="padding-top: 5px; padding-right: 10px; white-space: nowrap; color: #333333; text-align: right;">Last Updated:</th>',
'<td class="stack" style="padding-top: 5px; padding-bottom: 10px;">#LAST_UPDATED#</td>',
'</tr>',
'</table>',
'<!-- // Top Generic Table -->',
'<br>',
'''; -- Project Details Project Header Detail Template',
'    c_pstphd_tmpl     constant clob := ''',
'<table align="center" border="0" class="container" width="600">',
'<tr>',
'<td width="100%" class="stack" style="vertical-align: bottom; font-size: 14px; line-height: 1.5; text-align: left; padding: 0 10px; vertical-align: middle; color: #707070;" valign="middle" align="left">',
'<font style="font-size: 28px;"><a style="text-decoration: none; color: #333333;" href="#URL#">#NAME#</a></font><br>',
'<font style="font-size: 16px; font-weight: 400; color: #666666;">#DESCRIPTION#</font>',
'</td>',
'<td class="stack" style="padding: 10px 10px 0; vertical-align: middle;">',
'<!-- Primary Button -->',
'<table style="border-collapse: separate; overflow: hidden; border-radius: 3px; border: 1px solid #707070;">',
'<tr>',
'<td style="background-color: #707070; white-space: nowrap;">',
'<a href="#URL#" style="text-decoration: none; color: #ffffff;">',
'<span style="display: block; padding-left: 15px; padding-right: 15px; font-weight: 700; font-size: 13px; line-height: 35px;">',
'                              View Project',
'</span>',
'</a>',
'</td>',
'</tr>',
'</table>',
'<!-- // Primary Button -->',
'</td>',
'</tr>',
'</table>',
'</td>',
'</tr>',
'</table>',
'<!-- // Sub Header Wrapper -->',
'<br>',
'<!-- Content Wrapper -->',
'<table align="center" border="0" class="container" width="600">',
'<tr>',
'<td class="container-inner" style="text-align: left; padding-left: 10px; padding-right: 10px; font-size: 12px;" align="left">',
'<!-- Top Generic Table -->',
'<table border="0" width="100%" style="font-size: 12px;">',
'<tr>',
'<th class="stack" width="25%" style="padding-top: 2px; padding-right: 10px; white-space: nowrap; color: #333333; text-align: right;">Project Start Date:</th>',
'<td class="stack" style="padding-top: 2px; padding-bottom: 10px;">#PROJECT_START_DATE#</td>',
'</tr>',
'<tr>',
'<th class="stack" style="padding-top: 2px; padding-right: 10px; white-space: nowrap; color: #333333; text-align: right;">Target Completion Date:</th>',
'<td class="stack" style="padding-top: 2px; padding-bottom: 10px;">#TARGET_COMPLETE_DATE#</td>',
'</tr>',
'<tr>',
'<th class="stack" style="padding-top: 2px; padding-right: 10px; white-space: nowrap; color: #333333; text-align: right;">Status:</th>',
'<td class="stack" style="padding-top: 2px; padding-bottom: 10px;"><span style="padding-left: 5px; padding-right: 5px; padding-top: 3px; padding-bottom: 3px; line-height: 20px; font-size: 10px; background-color: #BG_COLOR#; color: #TEXT_COLOR#; border'
||'-radius: 3px; font-weight: bold;">#STATUS#</span></td>',
'</tr>',
'#PEOPLE#',
'#REGIONS#',
'</table>',
'<!-- // Top Generic Table -->',
'<br>',
'''; -- Project Status Project Header Detail Template',
'    c_tdtop_tmpl     constant clob := ''<!DOCTYPE HTML>',
'<html>',
'<head>',
'<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">',
'<meta name="viewport" content="width=device-width">',
'<title>#APP_NAME#</title>',
'<style>',
'    body { background-color: #ffffff; color: #707070; margin: 0; padding: 0; min-width: 100%; -webkit-text-size-adjust: none; -ms-text-size-adjust: none; text-size-adjust: none; font-family: Helvetica, Arial, sans-serif; mso-line-height-rule: exactly'
||'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }',
'    table { border: 0; border-spacing: 0; border-collapse: collapse; mso-table-lspace: 0pt; mso-table-rspace: 0pt; }',
'    table td { padding: 0; vertical-align: top; border-collapse: collapse; }',
'    p { margin: 0 0 16px 0; font-size: 12px; }',
'    table.container { margin-right: auto; margin-left: auto; width: 580px; }',
'    a { color: #2C7ABF; }',
'    body, th, td { line-height: 1.5; }',
'    .complete { color : #009900 !important; }',
'    .late { color : #dd0000 !important;  }',
'    .done { color : #000000 !important; }',
'    #mmTable td, #aiTable td, #msTable td, #issTable td { font-size: 12px; }',
'    @media only screen and (max-width: 580px) {',
'      .mobile-hide { display: none !important; }',
'      .stack { display: block !important; width: 100% !important; }',
'      table.container { width: 100% !important; }',
'      .header { height: auto !important; }',
'      .category-content td,',
'      .sub-category-title,',
'      .category-title { padding-left: 10px !important; padding-right: 10px !important; }',
'    }',
'</style>',
'</head>',
'<body bgcolor="#ffffff" style="font-family: Helvetica, Arial, sans-serif; background-color: #ffffff; color: #707070; margin: 0; padding: 0;">',
'<table class="body" border="0" width="100%" style="font-family: Helvetica, Arial, sans-serif">',
'<tr>',
'<td align="center" valign="top" style="background-color: #ffffff; color: #707070;">',
'#HEADER_TEXT#',
'<center>',
'<!-- Header Wrapper -->',
'<table width="100%" border="0" bgcolor="#fd2a1b" style="background-color: #fd2a1b; color: #ffffff;">',
'<tr>',
'<td>',
'<table align="center" border="0" class="container" width="600">',
'<tr>',
'<td class="header" style="font-size: 14px; line-height: 1.3; text-align: left; padding: 10px; height: 140px; vertical-align: middle; color: #ffffff;" valign="middle" align="left">',
'<font style="font-size: 28px;">#SUBJECT#</font>#RECIPIENT_EMAIL#',
'</td>',
'</tr>',
'</table>',
'</td>',
'</tr>',
'</table>',
'<!-- // Header Wrapper -->',
'<br>',
'<!-- Content Wrapper -->',
'<table align="center" border="0" class="container" width="600">',
'<tr>',
'<td class="container-inner" style="text-align: left; padding-left: 10px; padding-right: 10px;" align="left">',
'''; -- To Do Email Top',
'    c_tdproj_tmpl    constant clob := ''',
'<!-- Project Header -->',
'<table class="category-header" border="0" width="100%" style="background: #F0F0F0;">',
'<tr>',
'<td class="category-title" style="padding: 16px; color: #222222; line-height: 1; font-size: 20px; width: 90%;">',
'                    #PROJECT#',
'</td>',
'<td class="category-link" style="padding: 16px; text-align: center; color: #222222; line-height: 1; font-size: 20px; border-left: 1px solid #ffffff; white-space: nowrap;">',
'<a href="#PROJECT_LINK#" style="color: #2C7ABF; text-decoration: none !important;" target="_blank">&rarr;</a>',
'</td>',
'</tr>',
'</table>',
'<br>',
'<!-- // Project Header -->',
'''; -- ToDo Project Header',
'    c_2c_top_tmpl    constant clob := ''',
'<table border="0" width="100%">',
'<tr>',
'<td class="stack" width="49%" style="padding-top: 8px; padding-bottom: 8px;">',
'''; -- Two Column top template',
'    c_2c_mid_tmpl    constant clob := ''',
'</td>',
'<td class="mobile-hide" width="2%">&nbsp;</td>',
'<td class="stack" width="49%" style="padding-top: 8px; padding-bottom: 8px;">',
'''; -- Two Column middle template',
'    c_2c_btm_tmpl    constant clob := ''',
'</td>',
'</tr>',
'</table>',
'<br>',
'''; -- Two Column bottom template',
'    c_pspith_tmpl    constant clob := ''',
'<!-- Category Header -->',
'<table class="category-header" border="0" width="100%" style="background-color: #f8f8f8; border-top: 1px solid #E0E0E0;">',
'<tr>',
'<td class="category-title" style="padding: 16px; color: #222222; line-height: 1; font-size: 20px; width: 90%;">',
'                    #TYPE#',
'</td>',
'</tr>',
'</table>',
'<!-- // Category Header -->',
'''; -- Project Details Project Item Type Header',
'    c_pspitf_tmpl    constant clob := ''',
'</td>',
'</tr>',
'</table>',
'<!-- // Content Wrapper -->',
'<br>',
'''; -- Project Details Project Item Type Footer',
'    c_ps_sep_tmpl    constant clob := ''',
'<!-- Separator -->',
'<tr>',
'<td style="border-top: 1px solid #e0e0e0;"></td>',
'</tr>',
'<!-- // Separator -->',
'''; -- Project Details Separator',
'    c_psupi_sep_tmpl constant clob := ''',
'<!-- Separator -->',
'<tr>',
'<td colspan="2" style="border-top: 1px solid #e0e0e0;"></td>',
'</tr>',
'<!-- // Separator -->',
'''; -- Project Details Separator',
'    c_pspitch_tmpl   constant clob := ''<table width="100%">',
'''; -- Project Details Project Item Type Content Header',
'    c_pspitcf_tmpl   constant clob := ''</table>',
'<br>',
'''; -- Project Details Project Item Type Content Footer',
'    c_psfpitcb_tmpl  constant clob := ''',
'<tr>',
'<td width="100%" style="padding-top: 15px;">',
'<a href="#FILEURL#" style="font-size: 14px; color: #2C7ABF; text-decoration: none;">#FILENAME#</a>',
'<font style="font-size: 11px;"> (#FILESIZE#)</font> #IS_GOLD#',
'</td>',
'</tr>',
'<tr>',
'<td class="stack" style="padding-bottom: 15px; font-size: 12px;">',
'<strong>Created:</strong> #SINCE# by #UPLOADER#',
'                     #DESCRIPTION#',
'</td>',
'</tr>',
'''; -- Project Details File Project Item Type Content Body',
'    c_psipitcb_tmpl  constant clob := ''',
'<tr>',
'<td width="100%" style="padding-top: 15px;">',
'                    #ISSUENAME#',
'                    #STATUS#',
'</td>',
'</tr>',
'<tr>',
'<td class="stack" style="padding-bottom: 15px; font-size: 12px;">',
'<strong>Level:</strong> #LEVEL#<br>',
'<strong>Owner:</strong> #OWNER#<br>',
'<strong>Created:</strong> #SINCE# by #CREATOR#<br>',
'                     #DETAILS##RESOLUTION#',
'</td>',
'</tr>',
'''; -- Project Details Issue Project Item Type Content Body',
'    c_pstipitcb_tmpl constant clob := ''',
'<tr>',
'<td width="100%" style="padding-top: 15px;">',
'                    #ISSUENAME#',
'                    #STATUS#',
'</td>',
'</tr>',
'<tr>',
'<td class="stack" style="padding-bottom: 15px; font-size: 12px;">',
'<strong>Level:</strong> #LEVEL#<br>',
'<strong>Created By:</strong> #CREATOR#<br>',
'<strong>Owner:</strong> #OWNER#<br>',
'#DETAILS#',
'#RESOLUTION#',
'</td>',
'</tr>',
'''; -- Project Details Issue Project Item Type Content Body',
'    c_psrpitcb_tmpl  constant clob := ''',
'<tr>',
'<td class="mobile-hide" style="padding-right: 10px; padding-top: 15px;">',
'<!-- Initials -->',
'<table style="width: 37px; height: 35px; border-collapse: separate; border-radius: 50px; border: 1px solid #707070; background-color: #ffffff;">',
'<tr>',
'<td style="white-space: nowrap; vertical-align: middle; text-align: center; height: 35px; color: #707070; font-size: 15px; line-height: 1; font-weight: 300;">',
'                          #INITIALS#',
'</td>',
'</tr>',
'</table>',
'<!-- // Initials -->',
'</td>',
'<td width="100%" style="padding-top: 15px; padding-bottom: 15px; font-size: 13px;">',
'<font style="font-size: 12px; font-weight: 700; color: #333333;">#CREATOR#</font>',
'<font style="font-size: 12px"> &middot; #SINCE#</font><br>',
'<strong>Type:</strong> #RESOURCE_TYPE#',
'<br><br>',
'<strong>#RESOURCE_NAME#</strong><br>',
'                    #NOTES#',
'</td>',
'</tr>',
'''; -- Project Details Resource Project Item Type Content Body',
'    c_pslpitcb_tmpl  constant clob := ''',
'<tr>',
'<td width="100%" style="padding-top: 15px;">',
'<a href="#LINKURL#" style="font-size: 14px; color: #2C7ABF; text-decoration: none;">#LINK_TEXT#</a> #IS_GOLD#',
'</td>',
'</tr>',
'<tr>',
'<td class="stack" style="padding-bottom: 15px; font-size: 12px;">',
'<strong>Created:</strong> #SINCE# by #UPLOADER#',
'                     #DESCRIPTION#',
'</td>',
'</tr>',
'''; -- Project Details Link Project Item Type Content Body',
'    c_psupitcb_tmpl  constant clob := ''',
'<tr>',
'<td class="mobile-hide" style="padding-right: 10px; padding-top: 15px;">',
'<!-- Initials -->',
'<table style="width: 37px; height: 35px; border-collapse: separate; border-radius: 50px; border: 1px solid #707070; background-color: #ffffff;">',
'<tr>',
'<td style="white-space: nowrap; vertical-align: middle; text-align: center; height: 35px; color: #707070; font-size: 15px; line-height: 1; font-weight: 300;">',
'                          #INITIALS#',
'</td>',
'</tr>',
'</table>',
'<!-- // Initials -->',
'</td>',
'<td width="100%" style="padding-top: 15px; padding-bottom: 15px; font-size: 13px; max-width: 600px; overflow: auto;">',
'<font style="font-size: 12px; font-weight: 700; color: #333333;">#UPDATER#</font>',
'<font style="font-size: 12px"> &middot; #SINCE#</font><br>',
'<strong>Type:</strong> #UPDATE_TYPE#',
'<br><br>',
'                    #UPDATE_TEXT#',
'</td>',
'</tr>',
'''; -- Project Details Update Project Item Type Content Body',
'    c_psmspitcb_tmpl constant clob := ''',
'<tr>',
'<td class="mobile-hide" style="padding-right: 10px; padding-top: 15px;">',
'<!-- Mini Calendar -->',
'<table style="border-collapse: separate; border-radius: 3px; border: 1px solid #b0b0b0; border-top-width: 5px; background-color: #ffffff;">',
'<tr>',
'<td style="white-space: nowrap; text-align: center; width: 15px; color: #707070; padding: 4px 5px; font-size: 11px; line-height: 1;">',
'                          #DAYNUM#',
'</td>',
'</tr>',
'</table>',
'<!-- // Mini Calendar -->',
'</td>',
'<td width="100%" style="padding-top: 15px;">',
'<a href="#MS_URL#" style="font-size: 17px; color: #2C7ABF; text-decoration: none;">#MS_NAME#</a>',
'<!-- Status -->',
'                    #MS_STATUS#',
'<!-- // Status -->',
'<!-- Milestone Label -->',
'                    #MAJOR_MS#',
'<!-- // Milestone Label -->',
'</td>',
'</tr>',
'<tr>',
'<td class="mobile-hide">&nbsp;</td>',
'<td class="stack" style="padding-top: 5px; padding-bottom: 15px; font-size: 12px;">',
'<strong>Completion Date:</strong> #DUE_DATE# (#SINCE#)<br>',
'                    #MS_TEXT#',
'</td>',
'</tr>',
'#ASSOCIATED_AIS#',
'''; -- Project Details Milestones Project Item Type Content Body',
'    c_psaipitcb_tmpl constant clob := ''',
'<tr>',
'<td class="mobile-hide" style="padding-right: 10px; padding-top: 15px;">',
'<!-- Mini Calendar -->',
'<table style="border-collapse: separate; border-radius: 3px; border: 1px solid #b0b0b0; border-top-width: 5px; background-color: #ffffff;">',
'<tr>',
'<td style="white-space: nowrap; text-align: center; width: 15px; color: #707070; padding: 4px 5px; font-size: 11px; line-height: 1;">',
'                          #DAYNUM#',
'</td>',
'</tr>',
'</table>',
'<!-- // Mini Calendar -->',
'</td>',
'<td width="100%" style="padding-top: 15px;">',
'<font style="font-size: 17px; color: #333333;"><a href="#AI_URL#" style="font-size: 17px; color: #2C7ABF; text-decoration: none;">#AI_NAME#</a></font>',
'<!-- Label -->',
'                    #AI_STATUS#',
'<!-- // Label -->',
'</td>',
'</tr>',
'<tr>',
'<td class="mobile-hide">&nbsp;</td>',
'<td class="stack" style="padding-top: 5px; padding-bottom: 15px; font-size: 12px;">',
'<strong>Owner(s):</strong> #AI_OWNERS#<br>',
'<strong>Due Date:</strong> #DUE_DATE# (#SINCE#)',
'                     #DESCRIPTION#',
'                     #RESOLUTION#',
'</td>',
'</tr>',
'''; -- Project Details Action Item Project Item Type Content Body',
'    c_psmsaicb_tmpl  constant clob := ''',
'<tr>',
'<td colspan="2" class="stack" style="padding: 10px 0px 0px 100px; font-size: 12px;">',
'<font style="font-size: 17px; color: #333333;"><a href="#AI_URL#" style="font-size: 17px; color: #2C7ABF; text-decoration: none;">#AI_NAME#</a></font>',
'<!-- Label -->',
'                    #AI_STATUS#',
'<!-- // Label -->',
'</td>',
'</tr>',
'<tr>',
'<td colspan="2" class="stack" style="padding: 0px 0px 10px 100px; font-size: 12px;">',
'<strong>Owner(s):</strong> #AI_OWNERS#<br>',
'<strong>Due Date:</strong> #DUE_DATE# (#SINCE#)',
'                     #DESCRIPTION#',
'                     #RESOLUTION#',
'</td>',
'</tr>',
'''; -- Project Details Milestone Action Item Content Body',
'    c_pscppitcb_tmpl constant clob := ''',
'<tr>',
'<td width="100%" style="padding-top: 15px;">',
'<a href="#URL#" style="font-size: 14px; color: #2C7ABF; text-decoration: none;">#NAME#</a>',
'</td>',
'</tr>',
'<tr>',
'<td class="stack" style="padding-bottom: 15px; font-size: 12px;">',
'<strong>Status:</strong> #STATUS#<br>',
'<strong>People:</strong> #PEOPLE#<br>',
'<strong>Goal:</strong> #GOAL#',
'                     #DESCRIPTION#',
'</td>',
'</tr>',
'''; -- Project Details Child Project Project Item Type Content Body',
'    c_pssrpitcb_tmpl constant clob := ''',
'<tr>',
'<td width="100%" style="padding-top: 15px;">',
'<font style="font-size: 14px; color: #333333;">#SR_NAME#</font>',
'</td>',
'</tr>',
'<tr>',
'<td class="stack" style="padding-bottom: 15px; font-size: 12px;">',
'<strong>Submitted:</strong> #SUBMITTED_ON# by #SUBMITTED_BY#',
'</td>',
'</tr>',
'''; -- Project Details Status Report Project Item Type Content Body',
'    c_tdpith_tmpl    constant clob := ''',
'<!-- Type Header -->',
'<table class="sub-category-header" border="0" width="100%">',
'<tr>',
'<td class="sub-category-title" style="color: #222222; line-height: 1; font-size: 16px;">',
'                    #TYPE#',
'</td>',
'</tr>',
'</table>',
'<br>',
'<!-- // Type Header -->',
'''; -- ToDo Project Item Type Header',
'    c_tdpitch_tmpl   constant clob := ''',
'<!-- Type Content -->',
'<table class="category-content" border="0" width="100%">',
'''; -- ToDo Project Item Type Content Header',
'    c_tdpitcb_tmpl   constant clob := ''',
'<tr>',
'<td style="border-top: 1px solid #E0E0E0; padding: 10px; color: #303030; font-size: 12px;">',
'<strong>',
'<a href="#LINK#" style="color: #2C7ABF; text-decoration: none;" target="_blank">',
'                    #TITLE##IMPORTANT#',
'</a>',
'</strong>',
'<br>',
'<font style="color: #A0A0A0;">',
'                    Due: #DUE_DATE#',
'                    <br>',
'                    Owner(s): #OWNER#',
'</font>',
'</td>',
'</tr>',
'''; -- ToDo Project Item Type Content Body',
'    c_tdpitcf_tmpl   constant clob := ''',
'</table>',
'<!-- // Type Content -->',
'<br>',
'''; -- ToDo Project Item Type Content Footer',
'    c_hst_top_tmpl    constant clob := ''',
'<table class="" border="0" width="100%" style="margin-top: 4px;">',
'''; -- History list top',
'    c_hst_itm_tmpl    constant clob := ''',
'<tr>',
'<td style="color: #99cc66; padding: 6px 6px 6px 0; font-size: 12px;">&#10004;</td>',
'<td style="width: 100%; color: #333333; padding-top: 6px; padding-bottom: 6px; font-size: 12px; line-height: 1.4;">',
'#ACTION#<br>',
'<span style="color: #707070; font-size: 11px;">#WHEN#</span>',
'</td>',
'</tr>',
'''; -- History list item',
'    c_upc_itm_tmpl    constant clob := ''',
'<tr>',
'<td style="width: 100%; color: #333333; padding-top: 6px; padding-bottom: 6px; font-size: 12px; line-height: 1.4;">',
'#ACTION#<br>',
'<span style="color: #707070; font-size: 11px;">#WHEN#</span>',
'</td>',
'</tr>',
'''; -- History list item',
'    c_hst_btm_tmpl    constant clob := ''',
'</table>',
'''; -- History list Bottom',
'    c_sai_top_tmpl    constant clob := ''',
'<style>',
'    #aiTable th {padding:4px;background-color:#ccc;color:#000;}',
'    #aiTable td {padding:4px;background-color:#fff;}',
'</style>',
'<table border="1" width="100%" id="aiTable">',
'    <tr>',
'        <th width="60%">Action Item</th>',
'        <th width="15%">Owner(s)</th>',
'        <th width="15%">Target</th>',
'        <th width="10%">Status</th>',
'    </tr>',
'''; -- Status Verbose Action Items Top',
'    c_sai_row_tmpl    constant clob := ''',
'    <tr>',
'        <td>#ACTION_ITEM#</td>',
'        <td>#OWNER#</td>',
'        <td nowrap>#ORIGINAL##TARGET#</td>',
'        <td nowrap>#STATUS#</td>',
'    </tr>',
'''; -- Status Verbose Action Items Row',
'    c_svms_top_tmpl    constant clob := ''',
'<style>',
'    #mmTable th {padding:4px;background-color:#ccc;color:#000;}',
'    #mmTable td {padding:4px;background-color:#fff;}',
'</style>',
'<table border="1" width="100%" id="mmTable">',
'    <tr>',
'        <th width="60%">Milestone</th>',
'        <th width="15%">Owner</th>',
'        <th width="15%">Target</th>',
'        <th width="10%">Status</th>',
'    </tr>',
'''; -- Status Verbose Milestones Top',
'    c_svms_row_tmpl   constant clob := ''',
'    <tr>',
'        <td>#MILESTONE#</td>',
'        <td>#OWNER#</td>',
'        <td nowrap>#ORIGINAL##TARGET#</td>',
'        <td nowrap>#STATUS#</td>',
'    </tr>',
'''; -- Status Verbose Milestones Row',
'    c_sms_top_tmpl    constant clob := ''',
'<style>',
'    #msTable th {padding:4px;background-color:#ccc;color:#000;}',
'    #msTable td {padding:4px;background-color:#fff;}',
'</style>',
'<table border="1" width="100%" id="msTable">',
'    <tr>',
'        <th width="60%">Milestone</th>',
'        <th width="10%">Owner</th>',
'        <th width="10%">Target</th>',
'        <th width="10%">Actual</th>',
'        <th width="10%">Status</th>',
'    </tr>',
'''; -- Status Milestones Top',
'    c_sms_row_tmpl    constant clob := ''',
'    <tr>',
'        <td>#MILESTONE#</td>',
'        <td nowrap #CLASS#>#OWNER#</td>',
'        <td nowrap #CLASS#>#ORIGINAL##TARGET#</td>',
'        <td nowrap #CLASS#>#ACTUAL#</td>',
'        <td nowrap #CLASS#>#STATUS#</td>',
'    </tr>',
'''; -- Status Milestones Row',
'    c_sms_lgd_tmpl    constant clob := ''',
'    <tr>',
'        <td colspan="4" align="right">',
'            <strong>Legend:</strong>',
'            <span class="late">Red</span> = Past Due,',
'            <span class="complete">Green</span> = On Track,',
'            <span class="done">Black</span> = Complete',
'        </td>',
'    </tr>',
'''; -- Status Milestones Legend',
'    c_si_top_tmpl     constant clob := ''',
'<style>',
'    #issTable th {padding:4px;background-color:#ccc;color:#000;}',
'    #issTable td {padding:4px;background-color:#fff;}',
'</style>',
'<table border="1" width="100%" id="issTable">',
'    <tr>',
'        <th width="60%">Issue</th>',
'        <th width="15%">Status</th>',
'        <th width="15%">Owner</th>',
'        <th width="10%">Updated</th>',
'    </tr>',
'''; -- Status Issues Top',
'    c_si_row_tmpl     constant clob := ''',
'    <tr>',
'        <td>#ISSUE#</td>',
'        <td nowrap>#STATUS#</td>',
'        <td nowrap>#OWNER#</td>',
'        <td nowrap>#UPDATED#</td>',
'    </tr>',
'''; -- Status Issues Row',
'    c_pset_tmpl       constant clob := ''',
'<strong>About this email:</strong>',
'<br>',
'<strong>Completed Activities:</strong> Shows Action Items, Milestones, Links, Attachments, and Validations that have been closed, reached, and/or added within the last 7 days.  Excludes Action Items marked to not display in status update emails and M'
||'ajor Milestones.',
'<br>',
'<strong>Upcoming Activities:</strong> Shows all upcoming Action Items and Milestones targeted to be completed in the next 7 days.  Excludes Action Items marked to not display in'))
);
wwv_flow_api.component_end;
end;
/
begin
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9008156634332785
,p_default_application_id=>134
,p_default_id_offset=>172493832712964115
,p_default_owner=>'MISO'
);
wwv_flow_api.append_to_install_script(
 p_id=>wwv_flow_api.id(6086799800318538153)
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
' status update emails and Major Milestones.  Past due action items are NOT displayed in upcoming actives, they are displayed in Risks.',
'<br>',
'#MILESTONES#',
'<br>',
'<strong>Risks:</strong> summarizes past due Action Items and Milestones.',
'<br>',
'<strong>Updates:</strong> Shows all updates logged in the last 7 days with the most recent displayed first.',
'<br>',
'<strong>Issues:</strong> Shows all open issues with the most critical displayed first.',
'<p></p>',
'''; -- Project Status Explanatory Text',
'    --',
'    -- Private Procedures/Functions',
'    --',
'    function get_username_from_email(',
'        p_email in varchar2',
'    )',
'    return varchar2',
'    is',
'        l_username eba_proj_status_users.username%type;',
'    begin',
'        for c1 in',
'        (',
'            select username',
'              from eba_proj_status_users',
'             where lower(email_address) = lower(p_email)',
'        )',
'        loop',
'            l_username := c1.username;',
'        end loop;',
'        if l_username is null then',
'            for c1 in',
'            (',
'                select username',
'                  from eba_proj_status_users',
'                 where access_level_id > 2',
'                   and rownum = 1',
'            )',
'            loop',
'                l_username := c1.username;',
'            end loop;',
'        end if;',
'        return l_username;',
'    end get_username_from_email;',
'    procedure set_apex_workspace',
'    (',
'        p_app_id in number',
'    )',
'    is',
'    begin',
'        for i in ( select workspace from apex_applications where application_id = p_app_id)',
'        loop',
'            apex_util.set_workspace(i.workspace);',
'        end loop;',
'    end set_apex_workspace;',
'    procedure set_apex_session(',
'        p_app_id   in number,',
'        p_username in varchar2',
'    ) is',
'    begin',
'        if v(''APP_SESSION'') is not null then',
'            apex_custom_auth.set_user( p_username );',
'        else',
'            apex_session.create_session (',
'                p_app_id   => p_app_id,',
'                p_page_id  => null,',
'                p_username => p_username );',
'        end if;',
'    end set_apex_session;',
'    function get_from_address',
'    (',
'        p_project_id in number,',
'        p_role_id    in number,',
'        p_to_address in varchar2 default null',
'    ) return varchar2',
'    is',
'        l_from_address varchar2(255);',
'    begin',
'        if p_role_id = 0 then',
'            l_from_address := p_to_address;',
'        else',
'            begin',
'                select',
'                    min(nvl(email_address,username)) as email',
'                into l_from_address',
'                from eba_proj_user_ref rf,',
'                    eba_proj_roles r,',
'                    eba_proj_status_users u',
'                where rf.project_id = p_project_id',
'                and rf.user_id = u.id',
'                and rf.role_id = r.id',
'                and r.id = p_role_id;',
'            exception',
'                when no_data_found then',
'                    l_from_address := null;',
'            end;',
'        end if;',
'        if l_from_address is not null and instr(l_from_address,''@'') > 0 then',
'            return lower(l_from_address);',
'        else',
'            return null;',
'        end if;',
'    end;',
'    function get_header_text (p_email_type in varchar2 default null) return varchar2',
'    is',
'        l_header_text varchar2(4000) := null;',
'    begin',
'        l_header_text := eba_proj_fw.get_preference_value( p_preference_name => ''EMAIL_MSG_HEADER'' );',
'        if l_header_text = ''Preference does not exist'' or l_header_text is null then',
'            l_header_text := null;',
'        end if;',
'        l_header_text := l_header_text;',
'        return l_header_text;',
'    end get_header_text;',
'    function get_footer_text (p_email_type in varchar2 default null) return varchar2',
'    is',
'        l_footer_text varchar2(4000) := null;',
'        l_ms_type     varchar2(30)   := eba_proj_fw.get_preference_value(''STATUS_EML_MS_TYPE'');',
'        l_ms_end_txt  varchar2(300)  := ''The "Target" column displays the date the Milestone was forecast to be completed. Dates displayed in strike-through text indicate a due date that has been revised.  The "Actual" column represents the actual co'
||'mpletion date for a completed Milestone.'';',
'    begin',
'        l_footer_text := eba_proj_fw.get_preference_value( p_preference_name => ''EMAIL_MSG_FOOTER'' );',
'        if l_footer_text = ''Preference does not exist'' or l_footer_text is null then',
'            l_footer_text := null;',
'        else',
'            l_footer_text := l_footer_text || ''<p></p>'';',
'        end if;',
'        if l_ms_type = ''Preference does not exist'' then',
'            l_ms_type := ''all'';',
'        end if;',
'        l_ms_type := lower(l_ms_type);',
'        if p_email_type = ''STATUS'' then',
'            if l_ms_type = ''all'' then',
'                l_footer_text := l_footer_text || replace(c_pset_tmpl, ''#MILESTONES#'', ''<strong>Milestones:</strong> Shows all Milestones (major and minor). '' || l_ms_end_txt);',
'            else',
'                l_footer_text := l_footer_text || replace(c_pset_tmpl, ''#MILESTONES#'', ''<strong>Major Milestones:</strong> Shows all Milestones flagged as a major Milestone. '' || l_ms_end_txt);',
'            end if;',
'        else',
'            l_footer_text := l_footer_text;',
'        end if;',
'        return l_footer_text;',
'    end get_footer_text;',
'    function get_td_body_content',
'    (',
'        p_user_email in varchar2,',
'        p_app_id     in number,',
'        p_subject    in varchar2,',
'        p_email_type in varchar2 -- PAST_DUE or UPCOMING',
'    ) return clob',
'    is',
'        l_project         varchar2(255);',
'        l_type            varchar2(255);',
'        l_email_type      varchar2(255) := initcap( replace( p_email_type, ''_'', '' '') );',
'        l_body_html       clob;',
'    begin',
'        l_body_html := replace(',
'                           replace(',
'                               replace(',
'                                   replace(',
'                                       c_tdtop_tmpl,',
'                                       ''#APP_NAME#'',',
'                                       eba_proj_fw.get_preference_value(''APPLICATION_TITLE'')',
'                                   ),',
'                                   ''#RECIPIENT_EMAIL#'',',
'                                   ''<br>for <a style="color: #ffffff" href="mailto:'' ||',
'                                   lower(p_user_email) || ''">'' || lower(p_user_email) || ''</a>''',
'                               ),',
'                               ''#SUBJECT#'',',
'                               p_subject',
'                           ),',
'                           ''#HEADER_TEXT#'',',
'                           get_header_text()',
'                       );',
'        for c2 in',
'        (',
'            select',
'                v1.id,',
'                v1.title,',
'                v1.project,',
'                v1.type,',
'                v1.link,',
'                v1.project_link,',
'                v1.important,',
'                v1.due_date,',
'                v1.real_due_date,',
'                v1.item_owner,',
'                v1.status',
'            from',
'                (',
'                    select m.id,',
'                           m.milestone_name title,',
'                           l_email_type || '' Milestone(s)'' as type,',
'                           apex_util.prepare_url(c_base_url || ''f?p=''||p_app_id||'':107:0:::107:P107_ID,P107_PROJECT_ID,P200_ID:'' ||',
'                               m.id || '','' || m.project_id || '','' || m.project_id) link,',
'                           apex_util.prepare_url(c_base_url || ''f?p=''||p_app_id||'':200:0:::200:P200_ID:'' ||m.project_id) project_link,',
'                           p.project,',
'                           decode(nvl(is_major_yn,''N''),''Y'','' [<strong>MAJOR MILESTONE</strong>]'',null) important,',
'                           case',
'                               when instr(to_char(m.milestone_date,''DD-MON-YYYY HH.MI.SS.FF6 AM''),'' AM'') > 0 and',
'                               (',
'                                    instr(to_char(m.milestone_date,''DD-MON-YYYY HH.MI.SS.FF6 AM''),''12.'') > 0 or',
'                                    instr(to_char(m.milestone_date,''DD-MON-YYYY HH.MI.SS.FF6 AM''),''01.'') > 0 or',
'                                    instr(to_char(m.milestone_date,''DD-MON-YYYY HH.MI.SS.FF6 AM''),''02.'') > 0 or',
'                                    instr(to_char(m.milestone_date,''DD-MON-YYYY HH.MI.SS.FF6 AM''),''03.'') > 0 or',
'                                    instr(to_char(m.milestone_date,''DD-MON-YYYY HH.MI.SS.FF6 AM''),''04.'') > 0 or',
'                                    instr(to_char(m.milestone_date,''DD-MON-YYYY HH.MI.SS.FF6 AM''),''05.'') > 0 or',
'                                    instr(to_char(m.milestone_date,''DD-MON-YYYY HH.MI.SS.FF6 AM''),''06.'') > 0 or',
'                                    instr(to_char(m.milestone_date,''DD-MON-YYYY HH.MI.SS.FF6 AM''),''07.'') > 0',
'                               ) then',
'                                   m.milestone_date - 1',
'                           else',
'                               m.milestone_date',
'                           end as due_date,',
'                           m.milestone_date as real_due_date,',
'                           case when owner_role_id is null then',
'                               lower(m.milestone_owner)',
'                           else',
'                               nvl((select r.name||'': ''||listagg(lower(u.username),'', '')',
'                                       within group (order by lower(u.username)) owner',
'                                   from eba_proj_user_ref rf,',
'                                       eba_proj_status_users u,',
'                                       eba_proj_roles r',
'                                   where rf.role_id = m.owner_role_id',
'                                       and rf.project_id = m.project_id',
'                                       and u.id = rf.user_id',
'                                       and r.id = rf.role_id',
'                                   group by r.name',
'                               ), (select ''No ''||r.name||'' defined''',
'                                   from eba_proj_roles r',
'                                   where r.id = m.owner_role_id)',
'                               )',
'                           end as item_owner,',
'                           m.milestone_status as status',
'                      from eba_proj_status_ms$ m,',
'                           eba_proj_status$ p,',
'                           eba_proj_status_codes s',
'                     where p.id = m.project_id',
'                       and p.project_status = s.id (+)',
'                       and p.project_status not in (select id from eba_proj_status_codes where is_closed_status = ''Y'')',
'                       and p.is_deleted_yn = ''N''',
'                       and m.milestone_status = ''Open''',
'                       and m.is_deleted_yn = ''N''',
'                       and (( m.owner_role_id is null',
'                           and lower(m.milestone_owner) = lower(p_user_email))',
'                           or ( m.owner_role_id is not null',
'                               and exists (select null',
'                                           from eba_proj_user_ref rf,',
'                                               eba_proj_status_users u',
'                                           where rf.role_id = m.owner_role_id',
'                                               and rf.project_id = m.project_id',
'                                               and u.id = rf.user_id',
'                                               and (lower(u.username) = lower(p_user_email)',
'                                                   or lower(u.email_address) = lower(p_user_email)))',
'                               )',
'                           )',
'                       and (',
'                                (',
'                                    m.milestone_date < sysdate',
'                                    and',
'                                    p_email_type = ''PAST_DUE''',
'                                )',
'                                or',
'                                (',
'                                    m.milestone_date between sysdate and sysdate + 7',
'                                    and',
'                                    p_email_type = ''UPCOMING''',
'                                )',
'                           )',
'                    union all',
'                    select a.id,',
'                           a.action title,',
'                           l_email_type || '' Action Item(s)'' as type,',
'                           apex_util.prepare_url(c_base_url || ''f?p=''||p_app_id||'':78:0:::78:P78_ACTION_ITEM_ID,P200_ID:''',
'                                ||a.id||'',''||a.project_id) link,',
'                           apex_util.prepare_url(c_base_url || ''f?p=''||p_app_id||'':200:0:::200:P200_ID:''',
'                                ||a.project_id) project_link,',
'                           p.project,',
'                           decode(nvl(a.is_deliverable_yn,''N''),''Y'','' [<strong>IS DELIVERABLE</strong>]'',null) important,',
'                           case',
'                               when instr(to_char(a.due_date,''DD-MON-YYYY HH.MI.SS.FF6 AM''),'' AM'') > 0 and',
'                               (',
'                                    instr(to_char(a.due_date,''DD-MON-YYYY HH.MI.SS.FF6 AM''),''12.'') > 0 or',
'                                    instr(to_char(a.due_date,''DD-MON-YYYY HH.MI.SS.FF6 AM''),''01.'') > 0 or',
'                                    instr(to_char(a.due_date,''DD-MON-YYYY HH.MI.SS.FF6 AM''),''02.'') > 0 or',
'                                    instr(to_char(a.due_date,''DD-MON-YYYY HH.MI.SS.FF6 AM''),''03.'') > 0 or',
'                                    instr(to_char(a.due_date,''DD-MON-YYYY HH.MI.SS.FF6 AM''),''04.'') > 0 or',
'                                    instr(to_char(a.due_date,''DD-MON-YYYY HH.MI.SS.FF6 AM''),''05.'') > 0 or',
'                                    instr(to_char(a.due_date,''DD-MON-YYYY HH.MI.SS.FF6 AM''),''06.'') > 0 or',
'                                    instr(to_char(a.due_date,''DD-MON-YYYY HH.MI.SS.FF6 AM''),''07.'') > 0',
'                               ) then',
'                                   a.due_date - 1',
'                           else',
'                               a.due_date',
'                           end as due_date,',
'                           a.due_date as real_due_date,',
'                           case when a.owner_role_id is null then',
'                               a.action_owner_01',
'                                   ||decode(a.action_owner_02,null,null,'', ''||a.action_owner_02)',
'                                   ||decode(a.action_owner_03,null,null,'', ''||a.action_owner_03)',
'                                   ||decode(a.action_owner_04,null,null,'', ''||a.action_owner_04)',
'                           else',
'                               nvl((select r.name||'': ''||listagg(lower(u.username),'', '')',
'                                       within group (order by lower(u.username)) owner',
'                                   from eba_proj_user_ref rf,',
'                                       eba_proj_status_users u,',
'                                       eba_proj_roles r',
'                                   where rf.role_id = a.owner_role_id',
'                                       and rf.project_id = a.project_id',
'                                       and u.id = rf.user_id',
'                                       and r.id = rf.role_id',
'                                   group by r.name',
'                               ), (select ''No ''||r.name||'' defined''',
'                                   from eba_proj_roles r',
'                                   where r.id = a.owner_role_id)',
'                               )',
'                           end as item_owner,',
'                           a.action_status as status',
'                      from eba_proj_status_ais$ a,',
'                           eba_proj_status$ p,',
'                           eba_proj_status_codes s',
'                     where p.id = a.project_id',
'                       and p.project_status = s.id (+)',
'                       and p.project_status not in (select id from eba_proj_status_codes where is_closed_status = ''Y'')',
'                       and p.is_deleted_yn = ''N''',
'                       and a.action_status = ''Open''',
'                       and a.is_deleted_yn = ''N''',
'                       and ( (a.owner_role_id is null',
'                               and (  lower(a.action_owner_01) = lower(p_user_email)',
'                                   or lower(a.action_owner_02) = lower(p_user_email)',
'                                   or lower(a.action_owner_03) = lower(p_user_email)',
'                                   or lower(a.action_owner_04) = lower(p_user_email) ))',
'                           or (a.owner_role_id is not null',
'                               and exists (select null',
'                                           from eba_proj_user_ref rf,',
'                                               eba_proj_status_users u',
'                                           where rf.role_id = a.owner_role_id',
'                                               and rf.project_id = a.project_id',
'                                               and u.id = rf.user_id',
'                                               and (lower(u.username) = lower(p_user_email)',
'                                                   or lower(u.email_address) = lower(p_user_email))',
'                                        )',
'                               )',
'                           )',
'                       and (',
'                                (',
'                                    a.due_date < sysdate',
'                                    and',
'                                    p_email_type = ''PAST_DUE''',
'                                )',
'                                or',
'                                (',
'                                    a.due_date between sysdate and sysdate + 7',
'                                    and',
'                                    p_email_type = ''UPCOMING''',
'                                )',
'                           )',
'                ) v1',
'            order by',
'                v1.due_date asc, upper(v1.project), upper(v1.title)',
'        )',
'        loop',
'            if l_project is null or l_project != c2.project then',
'                if l_project is not null then',
'                    l_body_html := l_body_html || ''</table>'';',
'                end if;',
'                -- New Row for new project',
'                l_project   := c2.project;',
'                l_type      := c2.type;',
'                l_body_html := l_body_html || replace( replace( c_tdproj_tmpl, ''#PROJECT#'', l_project ), ''#PROJECT_LINK#'', c2.project_link );',
'                l_body_html := l_body_html || replace( c_tdpith_tmpl, ''#TYPE#'', l_type );',
'                l_body_html := l_body_html || c_tdpitch_tmpl;',
'                l_body_html := l_body_html || replace( replace( replace( replace( replace( c_tdpitcb_tmpl, ''#LINK#'', c2.link ), ''#TITLE#'', apex_escape.html(c2.title) ), ''#IMPORTANT#'', c2.important ), ''#DUE_DATE#'', to_char(c2.due_date,''fmDD-MON-YYYY'')'
||' || '' ('' || apex_util.get_since(c2.real_due_date) || '')'' ), ''#OWNER#'', apex_escape.html(c2.item_owner) );',
'            else',
'                -- Still showing rows for same project',
'                l_type := c2.type;',
'                if l_type != c2.type then',
'                    -- New Row for new type',
'                    l_body_html := l_body_html || c_tdpitcf_tmpl;',
'                    l_body_html := l_body_html || replace( c_tdpith_tmpl, ''#TYPE#'', l_type );',
'                    l_body_html := l_body_html || c_tdpitch_tmpl;',
'                    l_body_html := l_body_html || replace( replace( replace( replace( replace( c_tdpitcb_tmpl, ''#LINK#'', c2.link ), ''#TITLE#'', apex_escape.html(c2.title) ), ''#IMPORTANT#'', c2.important ), ''#DUE_DATE#'', to_char(c2.due_date,''fmDD-MON-YY'
||'YY'') || '' ('' || apex_util.get_since(c2.real_due_date) || '')'' ), ''#OWNER#'', apex_escape.html(c2.item_owner) );',
'                else',
'                    -- Still showing rows for same type',
'                    l_body_html := l_body_html || replace( replace( replace( replace( replace( c_tdpitcb_tmpl, ''#LINK#'', c2.link ), ''#TITLE#'', apex_escape.html(c2.title) ), ''#IMPORTANT#'', c2.important ), ''#DUE_DATE#'', to_char(c2.due_date,''fmDD-MON-YY'
||'YY'') || '' ('' || apex_util.get_since(c2.real_due_date) || '')'' ), ''#OWNER#'', apex_escape.html(c2.item_owner) );',
'                end if;',
'            end if;',
'        end loop;',
'        l_body_html := l_body_html || c_tdpitcf_tmpl;',
'        l_body_html := l_body_html || c_pspitf_tmpl;',
'        l_body_html := l_body_html || replace(c_ftr_tmpl, ''#SYSTEM_GENERATED_EMAIL_TEXT#'', replace( replace(c_sgm_tmpl, ''#OPT_OUT_TEXT#'', replace(c_job_sent_text, ''#PREFERENCES_URL#'', apex_util.prepare_url(c_base_url || ''f?p=''||p_app_id||'':USER_PREFS'
||':''))), ''#FOOTER_TEXT#'', get_footer_text()));',
'        return l_body_html;',
'    end get_td_body_content;',
'    function replace_with_clob',
'    (',
'        p_source  in clob,',
'        p_search  in varchar2,',
'        p_replace in clob',
'    ) return clob is',
'      l_pos pls_integer;',
'    begin',
'      l_pos := instr(p_source, p_search);',
'      if l_pos > 0 then',
'        return substr(p_source, 1, l_pos - 1)',
'            || p_replace',
'            || substr(p_source, l_pos + length(p_search));',
'      end if;',
'      return p_source;',
'    end replace_with_clob;',
'    function get_initials',
'    (',
'        p_email in varchar2',
'    ) return varchar2',
'    is',
'        l_retval varchar2(2);',
'        l_name   varchar2(200);',
'        l_i1     varchar2(1);',
'        l_i2     varchar2(1);',
'    begin',
'        l_i1   := initcap( substr( p_email, 1, 1 ) );',
'        l_name := substr( p_email, 1, instr( p_email, ''@'' ) - 1 );',
'        l_i2   := initcap( substr(l_name, instr( l_name, ''.'', -1 ) + 1, 1) );',
'        l_retval := l_i1 || l_i2;',
'        return l_retval;',
'    end get_initials;',
'    function get_child_project_count',
'    (',
'        p_id in number',
'    ) return number',
'    is',
'        r number;',
'    begin',
'        select count(*)',
'         into r',
'         from eba_proj_status s',
'        where parent_project_id = p_id;',
'        return r;',
'    end get_child_project_count;',
'    function get_files_count',
'    (',
'        p_id         in number,',
'        p_is_gold    in varchar2 default null,',
'        p_days_since in number   default 90',
'    ) return number',
'    is',
'        r number;',
'    begin',
'        select count(*)',
'         into r',
'         from eba_proj_status_files f',
'        where project_id = p_id',
'          and created >= (sysdate - p_days_since)',
'          and (',
'                  p_is_gold is null',
'                  or',
'                  (',
'                      p_is_gold is not null',
'                      and',
'                      p_is_gold = nvl(f.gold_yn,''N'')',
'                  )',
'              );',
'        return r;',
'    end get_files_count;',
'    function get_issues_count',
'    (',
'        p_id         in number,',
'        p_days_since in number   default 90',
'    ) return number',
'    is',
'        r number;',
'    begin',
'        select count(*)',
'          into r',
'          from eba_proj_status_issues',
'         where project_id = p_id',
'           and created >= (sysdate - p_days_since);',
'        return r;',
'    end get_issues_count;',
'    function get_open_issues_count',
'    (',
'        p_id         in number',
'    ) return number',
'    is',
'        r number;',
'    begin',
'        select count(*)',
'          into r',
'          from eba_proj_status_issues',
'         where project_id = p_id',
'           and is_open = ''Y'';',
'        return r;',
'    end get_open_issues_count;',
'    function get_links_count',
'    (',
'        p_id         in number,',
'        p_is_gold    in varchar2 default null,',
'        p_days_since in number   default 90',
'    ) return number',
'    is',
'        r number;',
'    begin',
'        select count(*)',
'          into r',
'          from eba_proj_status_links l',
'         where l.project_id = p_id',
'           and l.created >= (sysdate - p_days_since)',
'           and (',
'                  p_is_gold is null',
'                  or',
'                  (',
'                      p_is_gold is not null',
'                      and',
'                      p_is_gold = nvl(l.gold_yn,''N'')',
'                  )',
'               );',
'        return r;',
'    end get_links_count;',
'    function get_milestones_count',
'    (',
'        p_id         in number,',
'        p_days_since in number   default 90,',
'        p_milestones in varchar2 default ''all''',
'    ) return number',
'    is',
'        r number;',
'    begin',
'        if lower(p_milestones) = ''none'' then',
'            return 0;',
'        end if;',
'        select count(*)',
'         into r',
'         from eba_proj_status_ms',
'        where project_id = p_id',
'          and created >= (sysdate - p_days_since)',
'          and (',
'                    (',
'                        p_milestones = ''major''',
'                        and',
'                        is_major_yn = ''Y''',
'                    )',
'                    or',
'                    (',
'                        p_milestones = ''all''',
'                        and',
'                        is_major_yn is not null',
'                    )',
'                 );',
'        return r;',
'    end get_milestones_count;',
'    function get_status_ms_count',
'    (',
'        p_id         in number,',
'        p_milestones in varchar2 default ''all''',
'    ) return number',
'    is',
'        r number;',
'    begin',
'        if lower(p_milestones) = ''none'' then',
'            return 0;',
'        end if;',
'        select count(*)',
'         into r',
'         from eba_proj_status_ms',
'        where project_id = p_id',
'          and (',
'                    (',
'                        p_milestones = ''major''',
'                        and',
'                        is_major_yn = ''Y''',
'                    )',
'                    or',
'                    (',
'                        p_milestones = ''all''',
'                        and',
'                        is_major_yn is not null',
'                    )',
'                 );',
'        return r;',
'    end get_status_ms_count;',
'    function get_action_items_count',
'    (',
'        p_id           in number,',
'        p_milestone_id in number default null,',
'        p_days_since   in number default 90',
'    ) return number',
'    is',
'        r number;',
'    begin',
'        select count(*)',
'         into r',
'         from eba_proj_status_ais',
'        where project_id = p_id',
'          and created >= (sysdate - p_days_since)',
'          and (',
'                  (',
'                       p_milestone_id is null',
'                       and',
'                       milestone_id is null',
'                  )',
'                  or',
'                  (',
'                       p_milestone_id is not null',
'                       and',
'                       milestone_id = p_milestone_id',
'                  )',
'              );',
'        return r;',
'    end get_action_items_count;',
'    function get_assoc_ai_count',
'    (',
'        p_id           in number,',
'        p_milestone_id in number,',
'        p_status       in varchar2 default null',
'    ) return number',
'    is',
'        r number;',
'    begin',
'        select count(*)',
'         into r',
'         from eba_proj_status_ais',
'        where project_id = p_id',
'          and milestone_id = p_milestone_id',
'          and (',
'                   (',
'                       p_status is null',
'                       and',
'                       action_status != ''Not Applicable''',
'                   )',
'                   or',
'                   (',
'                       p_status is not null',
'                       and',
'                       p_status = action_status',
'                   )',
'              );',
'        return r;',
'    end get_assoc_ai_count;',
'    function get_status_reports_count',
'    (',
'        p_id         in number,',
'        p_days_since in number default 90',
'    ) return number',
'    is',
'        r number;',
'    begin',
'        select count(*)',
'         into r',
'         from eba_proj_status_rpts u',
'        where (u.project_id = p_id or u.project_id in (select id from eba_proj_status s where s.parent_project_id = p_id))',
'          and u.update_date >= (sysdate - p_days_since);',
'        return r;',
'    end get_status_reports_count;',
'    function get_updates_count',
'    (',
'        p_id         in number,',
'        p_days_since in number default 90',
'    ) return number',
'    is',
'        r number;',
'    begin',
'        select count(*)',
'         into r',
'         from eba_proj_status s,',
'              eba_proj_status_updates u,',
'              eba_proj_status_update_types t',
'        where s.id = p_id and',
'              s.id = u.project_id and',
'              t.id = u.update_type and',
'              u.created >= (sysdate - p_days_since);',
'        return r;',
'    end get_updates_count;',
'    function get_resources_count',
'    (',
'        p_id         in number,',
'        p_days_since in number default 90',
'    ) return number',
'    is',
'        r number;',
'    begin',
'        select count(*)',
'         into r',
'         from eba_proj_status s,',
'              eba_proj_resources u,',
'              eba_proj_resource_types t',
'        where s.id = p_id and',
'              s.id = u.project_id and',
'              t.id = u.resource_type_id and',
'              u.created >= (sysdate - p_days_since);',
'        return r;',
'    end get_resources_count;',
'    function get_closed_past_week_count',
'    (',
'        p_project_id in number,',
'        p_app_id     in number',
'    ) return number',
'    is',
'        l_ms_cnt  pls_integer;',
'        l_ai_cnt  pls_integer;',
'        l_iss_cnt pls_integer;',
'        l_lnk_cnt pls_integer;',
'        l_att_cnt pls_integer;',
'        l_vld_cnt pls_integer;',
'    begin',
'       -- Get Completed Milestone Count',
'       select count(*)',
'         into l_ms_cnt',
'         from eba_proj_status_ms',
'        where project_id = p_project_id',
'          and completed_date >= (current_timestamp - 7);',
'        -- Get Completed Action Item Count',
'        select count(*)',
'         into l_ai_cnt',
'         from eba_proj_status_ais',
'        where project_id = p_project_id',
'          and completed_date >= (current_timestamp - 7)',
'          and inc_in_status_eml_yn = ''Y'';',
'        -- Get Completed Issue Count',
'        select count(*)',
'         into l_iss_cnt',
'         from eba_proj_status_issues',
'        where project_id = p_project_id',
'          and resolved_on >= (current_timestamp - 7);',
'        -- Get Newly Added Links',
'        select count(*)',
'         into l_lnk_cnt',
'         from eba_proj_status_links',
'        where project_id = p_project_id',
'          and created >= (current_timestamp - 7);',
'        -- Get Newly Added Attachments',
'        select count(*)',
'         into l_att_cnt',
'         from eba_proj_status_files',
'        wher'))
);
null;
wwv_flow_api.component_end;
end;
/
begin
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9008156634332785
,p_default_application_id=>134
,p_default_id_offset=>172493832712964115
,p_default_owner=>'MISO'
);
wwv_flow_api.append_to_install_script(
 p_id=>wwv_flow_api.id(6086799800318538153)
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'e project_id = p_project_id',
'          and created >= (current_timestamp - 7);',
'        -- Get Newly Added Validations',
'        select count(*)',
'         into l_vld_cnt',
'         from eba_proj_status_verifications',
'        where project_id = p_project_id',
'          and created >= (current_timestamp - 7);',
'        return ( l_ms_cnt + l_ai_cnt + l_iss_cnt + l_lnk_cnt + l_att_cnt + l_vld_cnt );',
'    end get_closed_past_week_count;',
'    function get_upcoming_count',
'    (',
'        p_project_id in number',
'    ) return number',
'    is',
'        l_ai_cnt number;',
'        l_ms_cnt number;',
'    begin',
'       select count(*)',
'         into l_ai_cnt',
'         from eba_proj_status_ais a',
'        where a.project_id = p_project_id',
'          and a.action_status = ''Open''',
'          and a.is_deleted_yn = ''N''',
'          and a.inc_in_status_eml_yn = ''Y''',
'          and a.due_date between sysdate and sysdate + 7;',
'       select count(*)',
'         into l_ms_cnt',
'         from eba_proj_status_ms m',
'        where m.project_id = p_project_id',
'          and m.milestone_status = ''Open''',
'          and m.is_deleted_yn = ''N''',
'          and m.milestone_date between sysdate and sysdate + 7;',
'          -- removing this constraint fixes bug 27804737 Allan 13-JUL-2018',
'          --and m.is_major_yn = ''N'';',
'        return (l_ai_cnt + l_ms_cnt);',
'    end get_upcoming_count;',
'    function get_overdue_ai_count',
'    (',
'        p_project_id in number',
'    ) return number',
'    is',
'        r number;',
'    begin',
'       select count(*)',
'         into r',
'         from eba_proj_status_ais a',
'        where a.project_id = p_project_id',
'          and a.action_status = ''Open''',
'          and a.is_deleted_yn = ''N''',
'          and trunc(a.due_date) < trunc(sysdate);',
'        return r;',
'    end get_overdue_ai_count;',
'    function get_overdue_ms_count',
'    (',
'        p_project_id in number',
'    ) return number',
'    is',
'        r number;',
'    begin',
'       select count(*)',
'         into r',
'         from eba_proj_status_ms m',
'        where m.project_id = p_project_id',
'          and m.milestone_status = ''Open''',
'          and m.is_deleted_yn = ''N''',
'          and trunc(m.milestone_date) < trunc(sysdate);',
'        return r;',
'    end get_overdue_ms_count;',
'    function get_build_option_status',
'    (',
'        p_app_id  in number,',
'        p_bo_name in varchar2',
'    ) return varchar2',
'    is',
'        l_retval varchar2(10) := ''EXCLUDE'';',
'    begin',
'        for c1 in',
'        (',
'            select upper(build_option_status) as bo_value',
'              from apex_application_build_options',
'             where upper(build_option_name) = upper(p_bo_name)',
'               and application_id = p_app_id',
'        )',
'        loop',
'            l_retval := c1.bo_value;',
'        end loop;',
'        return l_retval;',
'    end get_build_option_status;',
'    function get_child_projects',
'    (',
'        p_id       in number,',
'        p_app_id   in number,',
'        p_session  in number,',
'        p_total    in number,',
'        p_max_rows in number default 50',
'    ) return clob',
'    is',
'        m            varchar2(32767) := null;',
'        c            integer := 0;',
'        v            varchar2(4000) := null;',
'    begin',
'        for c1 in',
'        (',
'            select id,',
'                   project,',
'                   nvl(eba_proj_fw.get_project_rowkey(p_project_id => s.id), s.row_key) row_key,',
'                   (select listagg(lower(u.username) || '' ('' || initcap(r.name) || '')'','', '') within group',
'                           (order by nvl(rf.acl_status_level,r.default_acl_status_level) desc, lower(u.username))',
'                      from eba_proj_user_ref rf,',
'                           eba_proj_status_users u,',
'                           eba_proj_roles r',
'                     where rf.project_id = s.id',
'                       and rf.user_id = u.id',
'                       and rf.role_id = r.id',
'                       and eba_proj_fw.is_edit_authorized( u.username, rf.project_id ) = ''Y'') as owner,',
'                   nvl((select status_short_desc from eba_proj_status_codes c where c.id = s.project_status), ''unknown'') project_status,',
'                   goal,',
'                   description',
'              from eba_proj_status s',
'             where parent_project_id = p_id',
'        )',
'        loop',
'            c := c + 1;',
'            if c = 1 then',
'                m := m || c_pspitch_tmpl;',
'            end if;',
'            m := m ||',
'                    replace(',
'                        replace(',
'                            replace(',
'                                replace(',
'                                    replace(',
'                                            replace(',
'                                                c_pscppitcb_tmpl,',
'                                                ''#NAME#'',',
'                                                apex_escape.html(c1.row_key) || '': '' || apex_escape.html(c1.project)',
'                                            ),',
'                                        ''#STATUS#'',',
'                                        apex_escape.html(c1.project_status)',
'                                    ),',
'                                    ''#PEOPLE#'',',
'                                    nvl(apex_escape.html(c1.owner), ''N/A'')',
'                                ),',
'                                ''#GOAL#'',',
'                                nvl(apex_escape.html(substr(c1.goal, 1, c_max_text)), ''N/A'') ||',
'                                case when length(c1.goal) > c_max_text then',
'                                    ''...''',
'                                end',
'                            ),',
'                            ''#URL#'',',
'                            apex_util.prepare_url(c_base_url || ''f?p='' || p_app_id || '':200:'' || p_session || '':::200:P200_ID:'' || c1.id)',
'                        ),',
'                        ''#DESCRIPTION#'',',
'                        apex_escape.html(substr(c1.description, 1, c_max_text)) ||',
'                        case when length(c1.description) > c_max_text then',
'                            ''...''',
'                        end',
'                    );',
'            if c < p_total then',
'                m := m || c_ps_sep_tmpl;',
'            end if;',
'            if c = nvl(p_max_rows, 50) then',
'                exit;',
'            end if;',
'        end loop;',
'        if c > 0 then',
'            m := m || c_pspitcf_tmpl;',
'        end if;',
'        return m;',
'    end get_child_projects;',
'    function get_files (',
'        p_id         in number,',
'        p_app_id     in number,',
'        p_session    in number,',
'        p_total      in number,',
'        p_max_rows   in number  default 20,',
'        p_days_since in number  default 90',
'    ) return varchar2',
'    is',
'        m            varchar2(32767) := null;',
'        c            integer := 0;',
'        v            varchar2(4000) := null;',
'        l_max_rows   number;',
'        l_gold_count number := get_files_count(p_id => p_id, p_is_gold => ''Y'');',
'    begin',
'        if l_gold_count >= p_max_rows then',
'            l_max_rows := l_gold_count;',
'        else',
'            l_max_rows := p_max_rows;',
'        end if;',
'        for c1 in (',
'            select id,',
'                   filename,',
'                   file_mimetype,',
'                   file_charset,',
'                   dbms_lob.getlength(file_blob) f_len,',
'                   file_comments,',
'                   created,',
'                   created_by,',
'                   gold_yn',
'              from eba_proj_status_files',
'             where project_id = p_id',
'               and created >= (sysdate - p_days_since)',
'             order by gold_yn desc, created desc',
'        )',
'        loop',
'            c := c + 1;',
'            if c = 1 then',
'                m := m || c_pspitch_tmpl;',
'            end if;',
'            m := m ||',
'                    replace(',
'                        replace(',
'                            replace(',
'                                replace(',
'                                    replace(',
'                                            replace(',
'                                                c_psfpitcb_tmpl,',
'                                                ''#FILENAME#'',',
'                                                apex_escape.html(c1.filename)',
'                                            ),',
'                                        ''#FILESIZE#'',',
'                                        apex_util.filesize_mask(c1.f_len)',
'                                    ),',
'                                    ''#SINCE#'',',
'                                    apex_util.get_since(c1.created)',
'                                ),',
'                                ''#UPLOADER#'',',
'                                c1.created_by',
'                            ),',
'                            ''#FILEURL#'',',
'                            apex_util.prepare_url(c_base_url || ''f?p='' || p_app_id || '':106:'' || p_session ||',
'                            '':::106:P106_ID,P106_PROJECT_ID:'' || c1.id || '','' || p_id)',
'                        ),',
'                    ''#IS_GOLD#'',',
'                    case nvl(c1.gold_yn,''N'')',
'                        when ''Y'' then',
'                            ''<span style="padding-left: 5px; padding-right: 5px; padding-top: 3px; padding-bottom: 3px; line-height: 20px; font-size: 10px; background-color: #fddd23; color: #5f1604; border-radius: 3px;">Gold</span>''',
'                        else',
'                            null',
'                    end',
'                    );',
'            if c1.file_comments is not null then',
'                m := replace(m, ''#DESCRIPTION#'', apex_escape.html(substr(c1.file_comments, 1, c_max_text)) ||',
'                            case when length(c1.file_comments) > c_max_text then',
'                                ''...''',
'                            end);',
'            else',
'                m := replace(m, ''#DESCRIPTION#'', null);',
'            end if;',
'            if c < p_total then',
'                m := m || c_ps_sep_tmpl;',
'            end if;',
'            if c = l_max_rows then',
'                exit;',
'            end if;',
'        end loop;',
'        if c > 0 then',
'            m := m || c_pspitcf_tmpl;',
'        end if;',
'        return m;',
'    end get_files;',
'    function get_issues',
'    (',
'        p_id         in number,',
'        p_app_id     in number,',
'        p_session    in number,',
'        p_total      in number,',
'        p_max_rows   in number default 20,',
'        p_days_since in number default 90',
'    ) return varchar2',
'    is',
'        m varchar2(32767) := null;',
'        c integer := 0;',
'        v varchar2(4000) := null;',
'    begin',
'        for c1 in',
'        (',
'            select',
'                i.id,',
'                i.project_id,',
'                i.issue,',
'                case when i.owner_role_id is null then',
'                    i.issue_owner',
'                else',
'                    nvl((select r.name||'': ''||listagg(lower(u.username),'', '')',
'                            within group (order by lower(u.username)) owner',
'                        from eba_proj_user_ref rf,',
'                            eba_proj_status_users u,',
'                            eba_proj_roles r',
'                        where rf.role_id = i.owner_role_id',
'                            and rf.project_id = i.project_id',
'                            and u.id = rf.user_id',
'                            and r.id = rf.role_id',
'                        group by r.name',
'                    ), (select ''No ''||r.name||'' defined''',
'                        from eba_proj_roles r',
'                        where r.id = i.owner_role_id)',
'                    )',
'                end as issue_owner,',
'                i.issue_level,',
'                decode(i.is_open,''Y'',''Open'',''N'',''Closed'',i.is_open) status,',
'                nvl(i.link_name_01, i.link_01) link_text,',
'                i.link_01 target,',
'                lower(i.created_by) created_by,',
'                i.created,',
'                i.issue_detail,',
'                i.resolution',
'            from',
'                eba_proj_status_issues i',
'            where',
'                i.project_id = p_id',
'            and',
'                i.created >= (sysdate - p_days_since)',
'            order by',
'                upper(i.issue), i.created desc',
'        )',
'        loop',
'            c := c + 1;',
'            if c = 1 then',
'                m := m || c_pspitch_tmpl;',
'            end if;',
'            m := m ||',
'                    replace(',
'                        replace(',
'                            replace(',
'                                replace(',
'                                    replace(',
'                                        replace(',
'                                            replace(',
'                                                    replace(',
'                                                        c_psipitcb_tmpl,',
'                                                        ''#ISSUENAME#'',',
'                                                        case',
'                                                            when c1.target is not null then',
'                                                                ''<font style="font-size: 17px; color: #333333;">'' || apex_escape.html(c1.issue) || ''</font> [<a href="'' || apex_util.prepare_url(c1.target) || ''" title="'' || apex_escape.html(c1.link_tex'
||'t) || ''" style="font-size: 14px; color: #2C7ABF; text-decoration: none;">'' || apex_escape.html(c1.link_text) || ''</a>]''',
'                                                            else',
'                                                                ''<font style="font-size: 17px; color: #333333;">'' || apex_escape.html(c1.issue) || ''</font>''',
'                                                        end',
'                                                    ),',
'                                                ''#STATUS#'',',
'                                                case',
'                                                    when nvl(c1.status, ''Open'') = ''Open'' then',
'                                                        ''&nbsp;<span style="padding-left: 5px; padding-right: 5px; padding-top: 3px; padding-bottom: 3px; line-height: 20px; font-size: 10px; background-color: #fdd5cc; color: #5f1604; border-radius: 3p'
||'x;">'' || c1.status || ''</span>''',
'                                                    else',
'                                                        ''&nbsp;<span style="padding-left: 5px; padding-right: 5px; padding-top: 3px; padding-bottom: 3px; line-height: 20px; font-size: 10px; background-color: #f0f0f0; color: #333333; border-radius: 3p'
||'x;">'' || c1.status || ''</span>''',
'                                                end',
'                                            ),',
'                                            ''#LEVEL#'',',
'                                            case',
'                                                when nvl(c1.issue_level, 4) = 4 then -- black',
'                                                    ''<strong style="color: #000000;">Tracking</strong>''',
'                                                when c1.issue_level = 3 then -- dark yellow',
'                                                    ''<strong style="color: #cc6600;">Elevated</strong>''',
'                                                when c1.issue_level = 2 then -- orange',
'                                                    ''<strong style="color: #ff3300;">Important</strong>''',
'                                                else -- red',
'                                                    ''<strong style="color: #ff0000;">Critical</strong>''',
'                                            end',
'                                        ),',
'                                        ''#SINCE#'',',
'                                        apex_util.get_since(c1.created)',
'                                    ),',
'                                    ''#CREATOR#'',',
'                                    case',
'                                        when instr(c1.created_by,''@'') > 0 then',
'                                            ''<a href="mailto:'' || apex_escape.html(c1.created_by) || ''">'' || apex_escape.html(c1.created_by) || ''</a>''',
'                                    else',
'                                        apex_escape.html(c1.created_by)',
'                                    end',
'                                ),',
'                                ''#DETAILS#'',',
'                                case',
'                                    when c1.issue_detail is not null then',
'                                        apex_escape.html(substr(c1.issue_detail, 1, c_max_text)) ||',
'                                        case when length(c1.issue_detail) > c_max_text then',
'                                            ''...''',
'                                        end',
'                                    else',
'                                        apex_escape.html(c1.issue_detail)',
'                                end',
'                            ),',
'                            ''#OWNER#'',',
'                            case',
'                                when instr(c1.issue_owner,'':'') > 0 and instr(c1.issue_owner,''@'') > 0 then',
'                                    substr(c1.issue_owner, 1, instr(c1.issue_owner,'':'') + 1) ||',
'                                    ''<a href="mailto:'' || apex_escape.html(trim(substr(c1.issue_owner, instr(c1.issue_owner,'':'') + 1))) || ''">'' || apex_escape.html(trim(substr(c1.issue_owner, instr(c1.issue_owner,'':'') + 1))) || ''</a>''',
'                                when instr(c1.issue_owner,'':'') = 0 and instr(c1.issue_owner,''@'') > 0 then',
'                                    ''<a href="mailto:'' || apex_escape.html(c1.issue_owner) || ''">'' || apex_escape.html(c1.issue_owner) || ''</a>''',
'                            else',
'                                apex_escape.html(c1.issue_owner)',
'                            end',
'                        ),',
'                    ''#RESOLUTION#'',',
'                    ''<br><strong>Resolution:</strong> '' || apex_escape.html(c1.resolution)',
'                    );',
'            if c < p_total then',
'                m := m || c_ps_sep_tmpl;',
'            end if;',
'            if c = p_max_rows then',
'                exit;',
'            end if;',
'        end loop;',
'        if c > 0 then',
'            m := m || c_pspitcf_tmpl;',
'        end if;',
'        return m;',
'    end get_issues;',
'    function get_status_open_issues',
'    (',
'        p_id         in number,',
'        p_app_id     in number,',
'        p_session    in number,',
'        p_total      in number,',
'        p_max_rows   in number default 20',
'    ) return clob',
'    is',
'        m     clob;',
'        c     integer := 0;',
'        l_txt clob;',
'        v     varchar2(4000) := null;',
'    begin',
'        m := null;',
'        for c1 in',
'        (',
'            select',
'                i.id,',
'                i.project_id,',
'                i.issue,',
'                case when i.owner_role_id is null then',
'                    i.issue_owner',
'                else',
'                    nvl((select r.name||'': ''||listagg(lower(u.username),'', '')',
'                            within group (order by lower(u.username)) owner',
'                        from eba_proj_user_ref rf,',
'                            eba_proj_status_users u,',
'                            eba_proj_roles r',
'                        where rf.role_id = i.owner_role_id',
'                            and rf.project_id = i.project_id',
'                            and u.id = rf.user_id',
'                            and r.id = rf.role_id',
'                        group by r.name',
'                    ), (select ''No ''||r.name||'' defined''',
'                        from eba_proj_roles r',
'                        where r.id = i.owner_role_id)',
'                    )',
'                end as issue_owner,',
'                nvl(i.issue_level, 4) as issue_level,',
'                decode(i.is_open,''Y'',''Open'',''N'',''Closed'',i.is_open) status,',
'                nvl(i.link_name_01, i.link_01) link_text,',
'                i.link_01 target,',
'                lower(i.created_by) created_by,',
'                i.updated,',
'                i.issue_detail,',
'                i.resolution',
'            from',
'                eba_proj_status_issues i',
'            where',
'                i.project_id = p_id',
'            and',
'                i.is_open = ''Y''',
'            order by',
'                nvl(i.issue_level, 4) asc, i.updated desc, upper(i.issue)',
'        )',
'        loop',
'            c := c + 1;',
'            --',
'            -- add issues table - header row',
'            --',
'            l_txt := null;',
'            if c = 1 then',
'                l_txt := l_txt || ''<br>'' || c_si_top_tmpl;',
'            end if;',
'            l_txt := l_txt ||',
'                     replace(',
'                         replace(',
'                             replace(',
'                                 replace(',
'                                     c_si_row_tmpl,',
'                                     ''#ISSUE#'',',
'                                     case',
'                                         when c1.target is not null then',
'                                             ''<a href="'' || apex_util.prepare_url(c_base_url || ''f?p='' || p_app_id || '':92:'' || nvl(p_session,0) || '':::92,RIR:LAST_VIEW,P92_ID,IR_ISSUE:200,'' || p_id || '','' || ''\'' || apex_escape.html(c1.issue) || ''\'')'
||' || ''">'' || apex_escape.html(c1.issue) || ''</a> [<a href="'' || apex_util.prepare_url(c1.target) || ''" title="'' || apex_escape.html(c1.link_text) || ''" style="font-size: 14px; color: #2C7ABF; text-decoration: none;">'' || apex_escape.html(c1.link_text)'
||' || ''</a>]''',
'                                         else',
'                                             ''<a href="'' || apex_util.prepare_url(c_base_url || ''f?p='' || p_app_id || '':92:'' || nvl(p_session,0) || '':::92,RIR:LAST_VIEW,P92_ID,IR_ISSUE:200,'' || p_id || '','' || ''\'' || apex_escape.html(c1.issue) || ''\'')'
||' || ''">'' || apex_escape.html(c1.issue) || ''</a>''',
'                                     end',
'                                 ),',
'                                 ''#STATUS#'',',
'                                 case',
'                                     when c1.issue_level = 4 then -- black',
'                                         ''Tracking''',
'                                     when c1.issue_level = 3 then -- dark yellow',
'                                         ''Important''',
'                                     when c1.issue_level = 2 then -- orange',
'                                         ''Elevated''',
'                                     else -- red',
'                                         ''<span style="color: #ff0000;">Critical</span>''',
'                                 end',
'                             ),',
'                             ''#OWNER#'',',
'                             case',
'                                 when instr(c1.issue_owner,'':'') > 0 and instr(c1.issue_owner,''@'') > 0 then',
'                                     substr(c1.issue_owner, 1, instr(c1.issue_owner,'':'') + 1) ||',
'                                     ''<a href="mailto:'' || apex_escape.html(trim(substr(c1.issue_owner, instr(c1.issue_owner,'':'') + 1))) || ''">'' || eba_proj_fw.get_name_from_email_address(trim(substr(c1.issue_owner, instr(c1.issue_owner,'':'') + 1))) |'
||'| ''</a>''',
'                                 when instr(c1.issue_owner,'':'') = 0 and instr(c1.issue_owner,''@'') > 0 then',
'                                     ''<a href="mailto:'' || apex_escape.html(c1.issue_owner) || ''">'' || eba_proj_fw.get_name_from_email_address(c1.issue_owner) || ''</a>''',
'                             else',
'                                 apex_escape.html(c1.issue_owner)',
'                             end',
'                         ),',
'                         ''#UPDATED#'',',
'                         to_char(c1.updated, ''fmDD-MON-YYYY'')',
'                     );',
'            m := m || l_txt;',
'            l_txt := null;',
'        end loop;',
'        if c > 0 then',
'            m := m || c_hst_btm_tmpl || ''<br>'';',
'        end if;',
'        m := m || l_txt;',
'        return m;',
'    end get_status_open_issues;',
'    function get_links',
'    (',
'        p_id         in number,',
'        p_app_id     in number,',
'        p_session    in number,',
'        p_total      in number,',
'        p_max_rows   in number  default 20,',
'        p_days_since in number  default 90',
'    ) return varchar2',
'    is',
'        m            varchar2(32767) := null;',
'        c            integer := 0;',
'        v            varchar2(4000) := null;',
'        l_max_rows   number;',
'        l_gold_count number := get_links_count(p_id => p_id, p_is_gold => ''Y'');',
'    begin',
'        if l_gold_count >= p_max_rows then',
'            l_max_rows := l_gold_count;',
'        else',
'            l_max_rows := p_max_rows;',
'        end if;',
'        for c1 in',
'        (',
'            select l.link_target,',
'                   l.link_text,',
'                   l.updated,',
'                   l.updated_by,',
'                   l.link_comments,',
'                   l.gold_yn',
'              from eba_proj_status_links l',
'             where l.project_id = p_id',
'               and l.created >= (sysdate - p_days_since)',
'             order by l.gold_yn desc, l.updated desc',
'        )',
'        loop',
'            c := c + 1;',
'            if c = 1 then',
'                m := m || c_pspitch_tmpl;',
'            end if;',
'            m := m ||',
'                    replace(',
'                        replace(',
'                            replace(',
'                                replace(',
'                                        replace(',
'                                            c_pslpitcb_tmpl,',
'                                            ''#LINK_TEXT#'',',
'                                            apex_escape.html(nvl(c1.link_text, c1.link_target))',
'                                        ),',
'                                    ''#SINCE#'',',
'                                    apex_util.get_since(c1.updated)',
'                                ),',
'                                ''#UPLOADER#'',',
'                                apex_escape.html(c1.updated_by)',
'                            ),',
'                            ''#LINKURL#'',',
'                            apex_escape.html(c1.link_target)',
'                        ),',
'                    ''#IS_GOLD#'',',
'                    case nvl(c1.gold_yn,''N'')',
'                        when ''Y'' then',
'                            ''<span style="padding-left: 5px; padding-right: 5px; padding-top: 3px; padding-bottom: 3px; line-height: 20px; font-size: 10px; background-color: #fddd23; color: #5f1604; border-radius: 3px;">Gold</span>''',
'                        else',
'                            null',
'                    end',
'                    );',
'            if c1.link_comments is not null then',
'                m := replace(m,',
'                            ''#DESCRIPTION#'',',
'                            apex_escape.html(substr(c1.link_comments, 1, c_max_text)) ||',
'                            case when length(c1.link_comments) > c_max_text then',
'                                ''...''',
'                            end',
'                     );',
'            else',
'                m := replace(m, ''#DESCRIPTION#'', null);',
'            end if;',
'            if c < p_total then',
'                m := m || c_ps_sep_tmpl;',
'            end if;',
'            if c = l_max_rows then',
'                exit;',
'            end if;',
'        end loop;',
'        if c > 0 then',
'            m := m || c_pspitcf_tmpl;',
'        end if;',
'        return m;',
'    end get_links;',
'    function get_status_reports',
'    (',
'        p_id         in number,',
'        p_app_id     in number,',
'        p_session    in number,',
'        p_total      in number,',
'        p_max_rows   in number  default 20,',
'        p_days_since in number  default 90',
'    ) return clob',
'    is',
'        m clob := null;',
'        c integer := 0;',
'        v varchar2(4000) := null;',
'    begin',
'        for c1 in',
'        (',
'            select u.id,',
'                   u.update_owner,',
'                   u.status_title,',
'                   u.update_date',
'              from eba_proj_status_rpts u',
'             where (u.project_id = p_id or u.project_id in (select id from eba_proj_status s where s.parent_project_id = p_id))',
'               and u.update_date > (sysdate - p_days_since)',
'             order by u.update_date, u.status_title',
'        )',
'        loop',
'            c := c + 1;',
'            if c = 1 then',
'                m := m || c_pspitch_tmpl;',
'            end if;',
'            m := m ||',
'                    replace(',
'                        replace(',
'                                replace(',
'                                    c_pssrpitcb_tmpl,',
'                                    ''#SR_NAME#'',',
'                                    apex_escape.html(c1.status_title)',
'                                ),',
'                            ''#SUBMITTED_ON#'',',
'                            to_char(c1.update_date, ''Day, Month fmDD, YYYY'')',
'                        ),',
'                        ''#SUBMITTED_BY#'',',
'                        apex_escape.html(c1.update_owner)',
'                    );',
'            if c < p_total then',
'                m := m || c_ps_sep_tmpl;',
'            end if;',
'            if c = nvl(p_max_rows, 20) then',
'                exit;',
'            end if;',
'        end loop;',
'        if c > 0 then',
'            m := m || c_pspitcf_tmpl;',
'        end if;',
'        return m;',
'    end get_status_reports;',
'    function get_updates',
'    (',
'        p_id           in number,',
'        p_app_id       in number,',
'        p_session      in number,',
'        p_total        in number,',
'        p_max_rows     in number  default 20,',
'        p_days_since   in number  default 90',
'    ) return clob',
'    is',
'        m            clob;',
'        c            integer := 0;',
'        l_txt        varchar2(32767);',
'    begin',
'        m := null;',
'        g_progress := ''1'';',
'        for c1 in',
'        (',
'            select s.id,',
'               s.project,',
'               u.status_update,',
'               u.update_owner,',
'               u.update_date,',
'               u.id update_id,',
'               t.status_update_type update_type',
'            from eba_proj_status s,',
'               eba_proj_status_updates u,',
'               eba_proj_status_update_types t',
'            where s.id = p_id and',
'               s.id = u.project_id and',
'               t.id = u.update_type and',
'               u.created >= (sysdate - p_days_since)',
'            order by u.update_date desc',
'        )',
'        loop',
'            g_progress := ''2 c=''|| c ||'' m length=''|| dbms_lob.getlength(m);',
'            c := c + 1;',
'          --',
'          -- add update header',
'          --',
'            l_txt := nul'))
);
null;
wwv_flow_api.component_end;
end;
/
begin
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9008156634332785
,p_default_application_id=>134
,p_default_id_offset=>172493832712964115
,p_default_owner=>'MISO'
);
wwv_flow_api.append_to_install_script(
 p_id=>wwv_flow_api.id(6086799800318538153)
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'l;',
'            if c = 1 then',
'                l_txt := l_txt || c_pspitch_tmpl;',
'            end if;',
'            g_progress := ''3'';',
'            l_txt := l_txt ||',
'                replace(',
'                    replace(',
'                        replace(',
'                            replace(',
'                                replace(',
'                                    c_psupitcb_tmpl,',
'                                    ''#INITIALS#'',',
'                                    get_initials(p_email => c1.update_owner)',
'                                ),',
'                                ''#UPDATER#'',',
'                                apex_escape.html(c1.update_owner)',
'                            ),',
'                            ''#SINCE#'',',
'                            apex_util.get_since(c1.update_date)',
'                        ),',
'                        ''#UPDATE_TEXT#'',',
'                        substr(',
'                            eba_proj_fw.conv_txt_html(',
'                                eba_proj_fw.conv_urls_links(',
'                                    apex_escape.html(',
'                                        dbms_lob.substr(',
'                                            c1.status_update,',
'                                            5001,',
'                                            1',
'                                        )',
'                                    )',
'                                )',
'                            ),',
'                            1,',
'                            5000',
'                        )',
'                    ),',
'                    ''#UPDATE_TYPE#'',',
'                    nvl(c1.update_type, ''Status'')',
'                );',
'            g_progress := ''4'';',
'            if c = nvl(p_max_rows, 20) then',
'                m := m || l_txt;',
'                exit;',
'            end if;',
'            if c < p_total then',
'                m := m || l_txt || c_psupi_sep_tmpl;',
'            else',
'                m := m || l_txt;',
'            end if;',
'            l_txt := null;',
'        end loop;',
'        g_progress := ''5'';',
'        if c > 0 then',
'            m := m || c_pspitcf_tmpl;',
'        end if;',
'        g_progress := ''6'';',
'        return m;',
'    end get_updates;',
'    function get_resources',
'    (',
'        p_id           in number,',
'        p_app_id       in number,',
'        p_session      in number,',
'        p_total        in number,',
'        p_max_rows     in number  default 20,',
'        p_days_since   in number  default 90',
'    ) return clob',
'    is',
'        m            clob;',
'        c            integer := 0;',
'        l_txt        varchar2(32767);',
'    begin',
'        m := null;',
'        g_progress := ''1'';',
'        for c1 in',
'        (',
'            select s.id,',
'                   r.resource_name,',
'                   r.notes,',
'                   r.created,',
'                   lower(r.created_by) as created_by,',
'                   t.resource_type',
'              from eba_proj_status s,',
'                   eba_proj_resources r,',
'                   eba_proj_resource_types t',
'             where s.id = p_id and',
'                   s.id = r.project_id and',
'                   t.id = r.resource_type_id and',
'                   r.created >= (sysdate - p_days_since)',
'             order by r.resource_name, r.created desc',
'        )',
'        loop',
'            g_progress := ''2 c=''|| c ||'' m length=''|| dbms_lob.getlength(m);',
'            c := c + 1;',
'          --',
'          -- add update header',
'          --',
'            l_txt := null;',
'            if c = 1 then',
'                l_txt := l_txt || c_pspitch_tmpl;',
'            end if;',
'            g_progress := ''3'';',
'            l_txt := l_txt ||',
'                replace(',
'                    replace(',
'                        replace(',
'                            replace(',
'                                replace(',
'                                    replace(',
'                                        c_psrpitcb_tmpl,',
'                                        ''#INITIALS#'',',
'                                        get_initials(p_email => c1.created_by)',
'                                    ),',
'                                    ''#CREATOR#'',',
'                                    apex_escape.html(c1.created_by)',
'                                ),',
'                                ''#SINCE#'',',
'                                apex_util.get_since(c1.created)',
'                            ),',
'                            ''#RESOURCE_NAME#'',',
'                            apex_escape.html(c1.resource_name)',
'                        ),',
'                        ''#RESOURCE_TYPE#'',',
'                        apex_escape.html(c1.resource_type)',
'                    ),',
'                    ''#NOTES#'',',
'                    case',
'                        when c1.notes is not null then',
'                            apex_escape.html(substr(c1.notes, 1, c_max_text)) ||',
'                            case when length(c1.notes) > c_max_text then',
'                                ''...''',
'                            end',
'                        else',
'                            c1.notes',
'                    end',
'                );',
'            g_progress := ''4'';',
'            if c = nvl(p_max_rows, 20) then',
'                m := m || l_txt;',
'                exit;',
'            end if;',
'            if c < p_total then',
'                m := m || l_txt || c_psupi_sep_tmpl;',
'            else',
'                m := m || l_txt;',
'            end if;',
'            l_txt := null;',
'        end loop;',
'        g_progress := ''5'';',
'        if c > 0 then',
'            m := m || c_pspitcf_tmpl;',
'        end if;',
'        g_progress := ''6'';',
'        return m;',
'    end get_resources;',
'    function get_action_items',
'    (',
'        p_id           in number,',
'        p_app_id       in number,',
'        p_session      in number,',
'        p_total        in number,',
'        p_max_rows     in number default 20,',
'        p_days_since   in number default 90',
'    ) return clob',
'    is',
'        m               clob;',
'        c               integer := 0;',
'        l_txt           varchar2(32767);',
'    begin',
'        m := null;',
'        for c1 in',
'        (',
'            select a.id,',
'                  case when a.owner_role_id is null then',
'                      a.action_owner_01',
'                          ||decode(a.action_owner_02,null,null,'', ''||a.action_owner_02)',
'                          ||decode(a.action_owner_03,null,null,'', ''||a.action_owner_03)',
'                          ||decode(a.action_owner_04,null,null,'', ''||a.action_owner_04)',
'                  else',
'                      nvl((select r.name||'': ''||listagg(lower(u.username),'', '')',
'                            within group (order by lower(u.username)) owner',
'                        from eba_proj_user_ref rf,',
'                            eba_proj_status_users u,',
'                            eba_proj_roles r',
'                        where rf.role_id = a.owner_role_id',
'                            and rf.project_id = a.project_id',
'                            and u.id = rf.user_id',
'                            and r.id = rf.role_id',
'                        group by r.name',
'                      ), (select ''No ''||r.name||'' defined''',
'                        from eba_proj_roles r',
'                        where r.id = a.owner_role_id)',
'                      )',
'                  end as owners,',
'                  a.action,',
'                  a.action_status,',
'                  a.due_date,',
'                  a.resolution',
'             from eba_proj_status_ais a',
'            where project_id = p_id',
'              and milestone_id is null',
'              and created >= (sysdate - p_days_since)',
'            order by due_date, action',
'        )',
'        loop',
'            c := c + 1;',
'            l_txt := null;',
'            if c = 1 then',
'                l_txt := l_txt || c_pspitch_tmpl;',
'            end if;',
'            l_txt := l_txt ||',
'                        replace(',
'                            replace(',
'                                replace(',
'                                    replace(',
'                                        replace(',
'                                            replace(',
'                                                replace(',
'                                                    replace(',
'                                                        replace(',
'                                                            c_psaipitcb_tmpl,',
'                                                            ''#DAYNUM#'',',
'                                                            to_char(c1.due_date, ''MON'') || ''<br>'' || to_char(c1.due_date, ''DD'')',
'                                                        ),',
'                                                        ''#AI_NAME#'',',
'                                                        apex_escape.html(c1.action)',
'                                                    ),',
'                                                    ''#SINCE#'',',
'                                                    apex_util.get_since(c1.due_date)',
'                                                ),',
'                                                ''#AI_STATUS#'',',
'                                                case when lower(c1.action_status) = ''open'' then',
'                                                    ''&nbsp;<span style="padding-left: 5px; padding-right: 5px; padding-top: 3px; padding-bottom: 3px; line-height: 20px; font-size: 10px; background-color: #fdd5cc; color: #5f1604; border-radius: 3px;">'
||''' || apex_escape.html(c1.action_status) || ''</span>''',
'                                                else',
'                                                    ''&nbsp;<span style="padding-left: 5px; padding-right: 5px; padding-top: 3px; padding-bottom: 3px; line-height: 20px; font-size: 10px; background-color: #f0f0f0; color: #333333; border-radius: 3px;">'
||''' || apex_escape.html(c1.action_status) || ''</span>''',
'                                                end',
'                                            ),',
'                                            ''#AI_OWNERS#'',',
'                                            apex_escape.html(c1.owners)',
'                                        ),',
'                                        ''#DUE_DATE#'',',
'                                        to_char(c1.due_date, ''Day, Month fmDD, YYYY'')',
'                                    ),',
'                                    ''#DESCRIPTION#'',',
'                                    null',
'                                ),',
'                                ''#AI_URL#'',',
'                                apex_util.prepare_url(c_base_url || ''f?p='' || p_app_id || '':78:'' || p_session ||',
'                                '':::78:LAST_VIEW,P78_ACTION_ITEM_ID,P78_PROJECT_ID,P200_ID:200,'' || c1.id ||',
'                                '','' || p_id || '','' || p_id)',
'                            ),',
'                            ''#RESOLUTION#'',',
'                            case when get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Milestones'') = ''INCLUDE'' and c1.resolution is not null then',
'                                    ''<br><strong>Resolution:</strong> '' || apex_escape.html(c1.resolution)',
'                                 else',
'                                    null',
'                            end',
'                        );',
'            if c < p_total then',
'                m := m || l_txt || c_psupi_sep_tmpl;',
'            else',
'                m := m || l_txt;',
'            end if;',
'            l_txt := null;',
'        end loop;',
'        if c > 0 then',
'            l_txt := l_txt || c_pspitcf_tmpl;',
'        end if;',
'        m := m || l_txt;',
'        return m;',
'    end get_action_items;',
'    function get_ms_action_items',
'    (',
'        p_id           in number,',
'        p_app_id       in number,',
'        p_session      in number,',
'        p_total        in number,',
'        p_milestone_id in number,',
'        p_max_rows     in number default 20,',
'        p_days_since   in number default 90',
'    ) return clob',
'    is',
'        m               clob;',
'        c               integer := 0;',
'        l_txt           varchar2(32767);',
'    begin',
'        m := null;',
'        g_progress := ''1'';',
'        for c1 in',
'        (',
'            select a.id,',
'                  case when a.owner_role_id is null then',
'                      a.action_owner_01',
'                          ||decode(a.action_owner_02,null,null,'', ''||a.action_owner_02)',
'                          ||decode(a.action_owner_03,null,null,'', ''||a.action_owner_03)',
'                          ||decode(a.action_owner_04,null,null,'', ''||a.action_owner_04)',
'                  else',
'                      nvl((select r.name||'': ''||listagg(lower(u.username),'', '')',
'                            within group (order by lower(u.username)) owner',
'                        from eba_proj_user_ref rf,',
'                            eba_proj_status_users u,',
'                            eba_proj_roles r',
'                        where rf.role_id = a.owner_role_id',
'                            and rf.project_id = a.project_id',
'                            and u.id = rf.user_id',
'                            and r.id = rf.role_id',
'                        group by r.name',
'                      ), (select ''No ''||r.name||'' defined''',
'                        from eba_proj_roles r',
'                        where r.id = a.owner_role_id)',
'                      )',
'                  end as owners,',
'                  a.action,',
'                  a.action_status,',
'                  a.due_date,',
'                  a.resolution',
'             from eba_proj_status_ais a',
'            where project_id = p_id',
'              and milestone_id = p_milestone_id',
'              and created >= (sysdate - p_days_since)',
'            order by due_date, action',
'        )',
'        loop',
'            c := c + 1;',
'            l_txt := null;',
'            if c = 1 then',
'                l_txt := l_txt || c_pspitch_tmpl;',
'            end if;',
'            l_txt := l_txt ||',
'                        replace(',
'                            replace(',
'                                replace(',
'                                    replace(',
'                                        replace(',
'                                            replace(',
'                                                replace(',
'                                                    replace(',
'                                                        c_psmsaicb_tmpl,',
'                                                        ''#AI_NAME#'',',
'                                                        apex_escape.html(c1.action)',
'                                                    ),',
'                                                    ''#SINCE#'',',
'                                                    apex_util.get_since(c1.due_date)',
'                                                ),',
'                                                ''#AI_STATUS#'',',
'                                                case when lower(c1.action_status) = ''open'' then',
'                                                    ''&nbsp;<span style="padding-left: 5px; padding-right: 5px; padding-top: 3px; padding-bottom: 3px; line-height: 20px; font-size: 10px; background-color: #fdd5cc; color: #5f1604; border-radius: 3px;">'
||''' || apex_escape.html(c1.action_status) || ''</span>''',
'                                                else',
'                                                    ''&nbsp;<span style="padding-left: 5px; padding-right: 5px; padding-top: 3px; padding-bottom: 3px; line-height: 20px; font-size: 10px; background-color: #f0f0f0; color: #333333; border-radius: 3px;">'
||''' || apex_escape.html(c1.action_status) || ''</span>''',
'                                                end',
'                                            ),',
'                                            ''#AI_OWNERS#'',',
'                                            apex_escape.html(c1.owners)',
'                                        ),',
'                                        ''#DUE_DATE#'',',
'                                        to_char(c1.due_date, ''Day, Month fmDD, YYYY'')',
'                                    ),',
'                                    ''#DESCRIPTION#'',',
'                                    null',
'                                ),',
'                                ''#AI_URL#'',',
'                                apex_util.prepare_url(c_base_url || ''f?p='' || p_app_id || '':78:'' || p_session ||',
'                                '':::78:LAST_VIEW,P78_ACTION_ITEM_ID,P78_PROJECT_ID,P200_ID:200,'' || c1.id ||',
'                                '','' || p_id || '','' || p_id)',
'                            ),',
'                            ''#RESOLUTION#'',',
'                            case when get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Milestones'') = ''INCLUDE'' and c1.resolution is not null then',
'                                    ''<br><strong>Resolution:</strong> '' || apex_escape.html(c1.resolution)',
'                                 else',
'                                    null',
'                            end',
'                        );',
'            m := m || l_txt;',
'            l_txt := null;',
'        end loop;',
'        m := m || l_txt;',
'        return m;',
'    end get_ms_action_items;',
'    function get_status_milestones',
'    (',
'        p_id            in number,',
'        p_app_id        in number,',
'        p_session       in number,',
'        p_total         in number,',
'        p_max_rows      in number   default 30,',
'        p_milestones    in varchar2 default ''all'',',
'        p_due_date_mode in varchar2 default ''TERSE''',
'    ) return clob',
'    is',
'        m               clob;',
'        c               integer := 0;',
'        l_txt           clob;',
'        l_taai_cnt      number  := 0; -- Total Associated Action Items count',
'        l_caai_cnt      number  := 0; -- Closed Associated Action Items count',
'        l_cmplt_pct     varchar2(300);',
'        l_cmplt_pct_num number;',
'        l_owner         varchar2(200);',
'    begin',
'        m := null;',
'        if get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Milestones'') != ''INCLUDE'' then',
'            return m;',
'        end if;',
'        for c1 in',
'        (',
'          select id,',
'                 milestone_name,',
'                 milestone_description,',
'                 milestone_date,',
'                 milestone_status,',
'                 milestone_owner,',
'                 owner_role_id,',
'                 original_due_date,',
'                 completed_date,',
'                 is_major_yn,',
'                 created,',
'                 created_by,',
'                 updated,',
'                 updated_by',
'            from eba_proj_status_ms',
'           where project_id = p_id',
'             and milestone_status = ''Open'' -- fix for bug 27440002 Allan 19-JUL-2018',
'             and (',
'                    (',
'                        p_milestones = ''major''',
'                        and',
'                        is_major_yn = ''Y''',
'                    )',
'                    or',
'                    (',
'                        p_milestones = ''all''',
'                        and',
'                        is_major_yn is not null',
'                    )',
'                 )',
'           order by milestone_date',
'        )',
'        loop',
'            c := c + 1;',
'            /*',
'            -- Remarking this code out because completion percentages are no longer required',
'            -- Get count of associated action items',
'            l_taai_cnt := get_assoc_ai_count( p_id, c1.id );',
'            l_caai_cnt := get_assoc_ai_count( p_id, c1.id, ''Closed'' );',
'            -- If count is > 0 get percentage',
'            if l_taai_cnt > 0 then',
'                l_cmplt_pct_num := round((l_caai_cnt/l_taai_cnt) * 100);',
'            else',
'                if c1.milestone_status != ''Completed'' then',
'                    l_cmplt_pct_num := 0;',
'                end if;',
'            end if;',
'            l_cmplt_pct := l_cmplt_pct_num || ''%'';',
'            */',
'            --',
'            -- Determine Milestone Owner',
'            --',
'            if c1.milestone_owner is not null then',
'                l_owner := c1.milestone_owner;',
'            elsif c1.milestone_owner is null and c1.owner_role_id is not null then',
'                select name into l_owner from EBA_PROJ_ROLES where id = c1.owner_role_id;',
'            else',
'                l_owner := ''Unassigned'';',
'            end if;',
'            --',
'            -- add update header',
'            --',
'            l_txt := null;',
'            if c = 1 then',
'                l_txt := l_txt || ''<br>'' || c_sms_top_tmpl;',
'            end if;',
'            l_txt := l_txt || replace(',
'                                  replace(',
'                                      replace(',
'                                          replace(',
'                                              replace(',
'                                                  replace(',
'                                                      replace(',
'                                                          c_sms_row_tmpl,',
'                                                          ''#ORIGINAL#'',',
'                                                          case',
'                                                              when p_due_date_mode = ''TERSE'' then',
'                                                                  null',
'                                                              when p_due_date_mode != ''TERSE'' and c1.original_due_date is not null and c1.milestone_date > c1.original_due_date then',
'                                                                  ''<span style="text-decoration:line-through;">'' || to_char(c1.original_due_date, ''fmDD-MON-YYYY'') || ''</span> ''',
'                                                              when p_due_date_mode != ''TERSE'' and ((c1.milestone_date <= nvl(c1.original_due_date, c1.milestone_date)) or (to_char(c1.milestone_date,''fmDD-MON-YYYY'') = to_char(nvl(c1.original_due_date, '
||'c1.milestone_date),''fmDD-MON-YYYY'')))  then',
'                                                                  null',
'                                                              else',
'                                                                  to_char(nvl(c1.original_due_date, c1.milestone_date), ''fmDD-MON-YYYY'')',
'                                                          end',
'                                                      ),',
'                                                      ''#MILESTONE#'',',
'                                                      ''<a href="'' || apex_util.prepare_url(c_base_url || ''f?p='' || p_app_id || '':107:'' || nvl(p_session,0) || '':::107:LAST_VIEW,P107_ID,P107_PROJECT_ID,P200_ID:10,'' || c1.id || '','' || p_id || '','' || p_i'
||'d) || ''">'' || apex_escape.html(c1.milestone_name) || ''</a>''',
'                                                  ),',
'                                                  ''#TARGET#'',',
'                                                  to_char(c1.milestone_date, ''fmDD-MON-YYYY'')',
'                                              ),',
'                                              ''#STATUS#'',',
'                                              case',
'                                                  when c1.milestone_status = ''Completed'' then',
'                                                      ''Completed''',
'                                                  when c1.milestone_date <= current_timestamp then',
'                                                      ''Past Due''',
'                                                  when c1.milestone_date > current_timestamp then',
'                                                      ''On Track''',
'                                              end',
'                                          ),',
'                                          ''#ACTUAL#'',',
'                                          case',
'                                              when c1.milestone_status != ''Completed'' then',
'                                                  null',
'                                              else',
'                                                  to_char(c1.completed_date, ''fmDD-MON-YYYY'')',
'                                          end',
'                                      ),',
'                                      ''#CLASS#'',',
'                                      case',
'                                          when c1.milestone_status = ''Completed'' then',
'                                              ''class="done"''',
'                                          when c1.milestone_date <= current_timestamp then',
'                                              ''class="late"''',
'                                          when c1.milestone_date > current_timestamp then',
'                                              ''class="complete"''',
'                                      end',
'                                  ),',
'                                  ''#OWNER#'',',
'                                  l_owner',
'                              );',
'            m := m || l_txt;',
'            l_txt := null;',
'        end loop;',
'        if c > 0 then',
'            m := m || c_hst_btm_tmpl || ''<br>'';',
'        end if;',
'        m := m || l_txt;',
'        return m;',
'    end get_status_milestones;',
'    function get_verbose_past_due_ais',
'    (',
'        p_id         in number,',
'        p_app_id     in number,',
'        p_session    in number,',
'        p_total      in number,',
'        p_max_rows   in number   default 300',
'    ) return clob',
'    is',
'        m               clob;',
'        c               integer := 0;',
'        l_txt           varchar2(32767);',
'    begin',
'        m := null;',
'        for c1 in',
'        (',
'          select a.id,',
'                 a.action,',
'                 a.due_date,',
'                 a.action_status,',
'                 a.original_due_date,',
'                 case when a.owner_role_id is null then',
'                     lower(a.action_owner_01',
'                         ||decode(a.action_owner_02,null,null,'', ''||a.action_owner_02)',
'                         ||decode(a.action_owner_03,null,null,'', ''||a.action_owner_03)',
'                         ||decode(a.action_owner_04,null,null,'', ''||a.action_owner_04))',
'                 else',
'                     nvl((select r.name||'': ''||listagg(lower(u.username),'', '')',
'                             within group (order by lower(u.username)) owner',
'                         from eba_proj_user_ref rf,',
'                             eba_proj_status_users u,',
'                             eba_proj_roles r',
'                         where rf.role_id = a.owner_role_id',
'                             and rf.project_id = a.project_id',
'                             and u.id = rf.user_id',
'                             and r.id = rf.role_id',
'                         group by r.name',
'                     ), (select ''No ''||r.name||'' defined''',
'                         from eba_proj_roles r',
'                         where r.id = a.owner_role_id)',
'                     )',
'                 end as owner,',
'                 a.created,',
'                 a.created_by,',
'                 a.updated,',
'                 a.updated_by',
'            from eba_proj_status_ais a',
'           where a.project_id = p_id',
'             and trunc(a.due_date) < trunc(current_timestamp)',
'             and a.action_status = ''Open''',
'             and a.is_deleted_yn = ''N''',
'           order by a.due_date',
'        )',
'        loop',
'            c := c + 1;',
'            --',
'            -- add update header',
'            --',
'            l_txt := null;',
'            if c = 1 then',
'                l_txt := l_txt || ''<br>'' || c_sai_top_tmpl;',
'            end if;',
'            l_txt := l_txt || replace(',
'                                  replace(',
'                                      replace(',
'                                          replace(',
'                                              replace(',
'                                                  c_sai_row_tmpl,',
'                                                  ''#ORIGINAL#'',',
'                                                  case',
'                                                      when c1.due_date <> c1.original_due_date then',
'                                                          ''<span style="text-decoration:line-through;">'' || to_char(c1.original_due_date, ''fmDD-MON-YYYY'') || ''</span>''',
'                                                      else',
'                                                          to_char(nvl(c1.original_due_date, c1.due_date), ''fmDD-MON-YYYY'')',
'                                                  end',
'                                              ),',
'                                              ''#ACTION_ITEM#'',',
'                                              case',
'                                                  when length(c1.action) > 50 then',
'                                                      ''<a href="'' || apex_util.prepare_url(c_base_url || ''f?p=''||p_app_id||'':78:'' || nvl(p_session, 0) || '':::78:P78_ACTION_ITEM_ID,P200_ID:''',
'                                                        || c1.id || '','' || p_id) || ''">'' || apex_escape.html(substr(c1.action, 1, 50) || ''...'') || ''</a>''',
'                                              else',
'                                                  ''<a href="'' || apex_util.prepare_url(c_base_url || ''f?p=''||p_app_id||'':78:'' || nvl(p_session, 0) || '':::78:P78_ACTION_ITEM_ID,P200_ID:''',
'                                                    || c1.id || '','' || p_id) || ''">'' || apex_escape.html(c1.action) || ''</a>''',
'                                              end',
'                                          ),',
'                                          ''#TARGET#'',',
'                                          case',
'                                              when c1.due_date <> nvl(c1.original_due_date, c1.due_date) then',
'                                                  '' '' || to_char(c1.due_date, ''fmDD-MON-YYYY'')',
'                                          else',
'                                              null',
'                                          end',
'                                      ),',
'                                      ''#STATUS#'',',
'                                      ''<span class="late">Past Due</span>''',
'                                      ),',
'                                  ''#OWNER#'',',
'                                  case',
'                                      when instr(c1.owner,'':'') > 0 and instr(c1.owner,''@'') > 0 then',
'                                          substr(c1.owner, 1, instr(c1.owner,'':'') + 1) ||',
'                   '))
);
null;
wwv_flow_api.component_end;
end;
/
begin
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9008156634332785
,p_default_application_id=>134
,p_default_id_offset=>172493832712964115
,p_default_owner=>'MISO'
);
wwv_flow_api.append_to_install_script(
 p_id=>wwv_flow_api.id(6086799800318538153)
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'                       ''<a href="mailto:'' || apex_escape.html(trim(substr(c1.owner, instr(c1.owner,'':'') + 1))) || ''">'' || eba_proj_fw.get_name_from_email_address(trim(substr(c1.owner, instr(c1.owner,'':'') + 1))) || ''</a>''',
'                                      when instr(c1.owner,'':'') = 0 and instr(c1.owner,''@'') > 0 then',
'                                          ''<a href="mailto:'' || apex_escape.html(c1.owner) || ''">'' || eba_proj_fw.get_name_from_email_address(c1.owner) || ''</a>''',
'                                  else',
'                                      apex_escape.html(c1.owner)',
'                                  end',
'                              );',
'            m := m || l_txt;',
'            l_txt := null;',
'        end loop;',
'        if c > 0 then',
'            m := m || c_hst_btm_tmpl || ''<br>'';',
'        end if;',
'        m := m || l_txt;',
'        return m;',
'    end get_verbose_past_due_ais;',
'    function get_verbose_past_due_ms',
'    (',
'        p_id         in number,',
'        p_app_id     in number,',
'        p_session    in number,',
'        p_total      in number,',
'        p_max_rows   in number   default 300',
'    ) return clob',
'    is',
'        m               clob;',
'        c               integer := 0;',
'        l_txt           varchar2(32767);',
'    begin',
'        m := null;',
'        for c1 in',
'        (',
'          select m.id,',
'                 m.milestone_name,',
'                 m.milestone_date,',
'                 m.milestone_status,',
'                 m.original_due_date,',
'                 case when m.owner_role_id is null then',
'                     lower(m.milestone_owner)',
'                 else',
'                     nvl((select r.name||'': ''||listagg(lower(u.username),'', '')',
'                             within group (order by lower(u.username)) owner',
'                         from eba_proj_user_ref rf,',
'                             eba_proj_status_users u,',
'                             eba_proj_roles r',
'                         where rf.role_id = m.owner_role_id',
'                             and rf.project_id = m.project_id',
'                             and u.id = rf.user_id',
'                             and r.id = rf.role_id',
'                         group by r.name',
'                     ), (select ''No ''||r.name||'' defined''',
'                         from eba_proj_roles r',
'                         where r.id = m.owner_role_id)',
'                     )',
'                 end as owner,',
'                 m.created,',
'                 m.created_by,',
'                 m.updated,',
'                 m.updated_by',
'            from eba_proj_status_ms m',
'           where m.project_id = p_id',
'             and trunc(m.milestone_date) < trunc(current_timestamp)',
'             and m.milestone_status = ''Open''',
'             and m.is_deleted_yn = ''N''',
'           order by m.milestone_date',
'        )',
'        loop',
'            c := c + 1;',
'            --',
'            -- add update header',
'            --',
'            l_txt := null;',
'            if c = 1 then',
'                l_txt := l_txt || ''<br>'' || c_svms_top_tmpl;',
'            end if;',
'            l_txt := l_txt || replace(',
'                                  replace(',
'                                      replace(',
'                                          replace(',
'                                              replace(',
'                                                  c_svms_row_tmpl,',
'                                                  ''#ORIGINAL#'',',
'                                                  case',
'                                                      when c1.original_due_date is not null and c1.milestone_date <> c1.original_due_date then',
'                                                          ''<span style="text-decoration:line-through;">'' || to_char(c1.original_due_date, ''fmDD-MON-YYYY'') || ''</span>''',
'                                                      else',
'                                                          to_char(nvl(c1.original_due_date, c1.milestone_date), ''fmDD-MON-YYYY'')',
'                                                  end',
'                                              ),',
'                                              ''#MILESTONE#'',',
'                                              case',
'                                                  when length(c1.milestone_name) > 50 then',
'                                                      ''<a href="'' || apex_util.prepare_url(c_base_url || ''f?p='' || p_app_id || '':107:'' || nvl(p_session,0) || '':::107:LAST_VIEW,P107_ID,P107_PROJECT_ID,P200_ID:10,'' || c1.id || '','' || p_id || '','' || p_i'
||'d) || ''">'' || apex_escape.html(substr(c1.milestone_name, 1, 50) || ''...'') || ''</a>''',
'                                              else',
'                                                  ''<a href="'' || apex_util.prepare_url(c_base_url || ''f?p='' || p_app_id || '':107:'' || nvl(p_session,0) || '':::107:LAST_VIEW,P107_ID,P107_PROJECT_ID,P200_ID:10,'' || c1.id || '','' || p_id || '','' || p_id) |'
||'| ''">'' || apex_escape.html(c1.milestone_name) || ''</a>''',
'                                              end',
'                                          ),',
'                                          ''#TARGET#'',',
'                                          case',
'                                              when c1.milestone_date <> nvl(c1.original_due_date, c1.milestone_date) then',
'                                                  '' '' || to_char(c1.milestone_date, ''fmDD-MON-YYYY'')',
'                                              else',
'                                                  null',
'                                          end',
'                                      ),',
'                                      ''#STATUS#'',',
'                                      ''<span class="late">Past Due</span>''',
'                                      ),',
'                                  ''#OWNER#'',',
'                                  case',
'                                      when instr(c1.owner,'':'') > 0 and instr(c1.owner,''@'') > 0 then',
'                                          substr(c1.owner, 1, instr(c1.owner,'':'') + 1) ||',
'                                          ''<a href="mailto:'' || apex_escape.html(trim(substr(c1.owner, instr(c1.owner,'':'') + 1))) || ''">'' || eba_proj_fw.get_name_from_email_address(trim(substr(c1.owner, instr(c1.owner,'':'') + 1))) || ''</a>''',
'                                      when instr(c1.owner,'':'') = 0 and instr(c1.owner,''@'') > 0 then',
'                                          ''<a href="mailto:'' || apex_escape.html(c1.owner) || ''">'' || eba_proj_fw.get_name_from_email_address(c1.owner) || ''</a>''',
'                                  else',
'                                      apex_escape.html(c1.owner)',
'                                  end',
'                              );',
'            m := m || l_txt;',
'            l_txt := null;',
'        end loop;',
'        if c > 0 then',
'            m := m || c_hst_btm_tmpl || ''<br>'';',
'        end if;',
'        m := m || l_txt;',
'        return m;',
'    end get_verbose_past_due_ms;',
'    function get_milestones',
'    (',
'        p_id         in number,',
'        p_app_id     in number,',
'        p_session    in number,',
'        p_total      in number,',
'        p_max_rows   in number   default 20,',
'        p_days_since in number   default 90,',
'        p_milestones in varchar2 default ''all''',
'    ) return clob',
'    is',
'        m               clob;',
'        c               integer := 0;',
'        l_txt           clob;',
'        l_show_view_all boolean := false;',
'        l_assoc_ais     clob;',
'        l_ai_cnt        number  := 0;',
'    begin',
'        m := null;',
'        g_progress := ''1'';',
'        for c1 in',
'        (',
'          select id,',
'                 milestone_name,',
'                 milestone_description,',
'                 milestone_date,',
'                 milestone_status,',
'                 is_major_yn,',
'                 created,',
'                 created_by,',
'                 updated,',
'                 updated_by',
'            from eba_proj_status_ms',
'           where project_id = p_id',
'             and created >= (sysdate - p_days_since)',
'             and (',
'                    (',
'                        p_milestones = ''major''',
'                        and',
'                        is_major_yn = ''Y''',
'                    )',
'                    or',
'                    (',
'                        p_milestones = ''all''',
'                        and',
'                        is_major_yn is not null',
'                    )',
'                 )',
'           order by milestone_date, created',
'        )',
'        loop',
'            c := c + 1;',
'            -- Get count of associated action items',
'            l_ai_cnt := get_action_items_count( p_id, c1.id );',
'            -- If count is > 0 build clob',
'            if l_ai_cnt > 0 then',
'                l_assoc_ais := get_ms_action_items(',
'                                   p_id           => p_id,',
'                                   p_app_id       => p_app_id,',
'                                   p_session      => p_session,',
'                                   p_total        => l_ai_cnt,',
'                                   p_milestone_id => c1.id',
'                               );',
'            else',
'                l_assoc_ais := null;',
'            end if;',
'            if c = 9 then',
'                l_show_view_all := true;',
'                exit;',
'            end if;',
'            --',
'            -- add update header',
'            --',
'            l_txt := null;',
'            if c = 1 then',
'                l_txt := l_txt || c_pspitch_tmpl;',
'            end if;',
'            l_txt := l_txt ||',
'                        replace_with_clob(',
'                            replace(',
'                                replace(',
'                                    replace(',
'                                        replace(',
'                                            replace(',
'                                                replace(',
'                                                    replace(',
'                                                        replace(',
'                                                            c_psmspitcb_tmpl,',
'                                                            ''#DAYNUM#'',',
'                                                            to_char(c1.milestone_date, ''MON'') || ''<br>'' || to_char(c1.milestone_date, ''DD'')',
'                                                        ),',
'                                                        ''#MS_NAME#'',',
'                                                        apex_escape.html(c1.milestone_name)',
'                                                    ),',
'                                                    ''#SINCE#'',',
'                                                    apex_util.get_since(c1.milestone_date)',
'                                                ),',
'                                                ''#MS_STATUS#'',',
'                                                case when lower(c1.milestone_status) = ''open'' then',
'                                                    ''&nbsp;<span style="padding-left: 5px; padding-right: 5px; padding-top: 3px; padding-bottom: 3px; line-height: 20px; font-size: 10px; background-color: #fdd5cc; color: #5f1604; border-radius: 3px;">'
||''' || apex_escape.html(c1.milestone_status) || ''</span>''',
'                                                else',
'                                                    ''&nbsp;<span style="padding-left: 5px; padding-right: 5px; padding-top: 3px; padding-bottom: 3px; line-height: 20px; font-size: 10px; background-color: #f0f0f0; color: #333333; border-radius: 3px;">'
||''' || apex_escape.html(c1.milestone_status) || ''</span>''',
'                                                end',
'                                            ),',
'                                            ''#MAJOR_MS#'',',
'                                            case when nvl(c1.is_major_yn, ''N'') = ''Y'' then',
'                                                ''&nbsp;<span style="padding-left: 5px; padding-right: 5px; padding-top: 3px; padding-bottom: 3px; line-height: 20px; font-size: 10px; background-color: #e0e0e0; color: #333333; border-radius: 3px;">Majo'
||'r Milestone</span>''',
'                                            else',
'                                                null',
'                                            end',
'                                        ),',
'                                        ''#DUE_DATE#'',',
'                                        to_char(c1.milestone_date, ''Day, Month fmDD, YYYY'')',
'                                    ),',
'                                    ''#MS_TEXT#'',',
'                                    apex_escape.html(c1.milestone_description)',
'                                ),',
'                                ''#MS_URL#'',',
'                                apex_util.prepare_url(c_base_url || ''f?p='' || p_app_id || '':107:'' || p_session ||',
'                                '':::107:LAST_VIEW,P107_ID,P107_PROJECT_ID,P200_ID:10,'' || c1.id ||',
'                                '','' || p_id || '','' || p_id)',
'                            ),',
'                        ''#ASSOCIATED_AIS#'',',
'                        l_assoc_ais',
'                        );',
'            if c < p_total then',
'                m := m || l_txt || c_psupi_sep_tmpl;',
'            else',
'                m := m || l_txt;',
'            end if;',
'            l_txt := null;',
'        end loop;',
'        if c > 0 then',
'            m := m || c_pspitcf_tmpl;',
'        end if;',
'        if l_show_view_all then',
'            l_txt := l_txt ||''<p><a href="''|| apex_util.prepare_url(c_base_url || ''f?p='' || p_app_id || '':34:'' || p_session ||',
'            '':::34:P200_ID,P34_ID:'' || p_id || '','' || p_id) || ''">View Project Milestones</a></p>'';',
'        end if;',
'        m := m || l_txt;',
'        return m;',
'    end get_milestones;',
'    function get_one_action_item',
'    (',
'        p_ai_id    in number,',
'        p_app_id   in number,',
'        p_session  in number',
'    ) return clob',
'    is',
'        m      clob;',
'        l_txt  varchar2(32767);',
'    begin',
'        m := null;',
'        g_progress := ''1'';',
'        for c1 in',
'        (',
'            select p.id project_id,',
'                   p.description as project_description,',
'                   p.project,',
'                   ai.id,',
'                   case when ai.owner_role_id is null then',
'                        ai.action_owner_01',
'                            ||decode(ai.action_owner_02,null,null,'', ''||ai.action_owner_02)',
'                            ||decode(ai.action_owner_03,null,null,'', ''||ai.action_owner_03)',
'                            ||decode(ai.action_owner_04,null,null,'', ''||ai.action_owner_04)',
'                    else',
'                        nvl((select r.name||'': ''||listagg(lower(u.username),'', '')',
'                                within group (order by lower(u.username)) owner',
'                            from eba_proj_user_ref rf,',
'                                eba_proj_status_users u,',
'                                eba_proj_roles r',
'                            where rf.role_id = ai.owner_role_id',
'                                and rf.project_id = ai.project_id',
'                                and u.id = rf.user_id',
'                                and r.id = rf.role_id',
'                            group by r.name',
'                        ), (select ''No ''||r.name||'' defined''',
'                            from eba_proj_roles r',
'                            where r.id = ai.owner_role_id)',
'                        )',
'                    end as owners,',
'                   ai.action,',
'                   ai.action_description,',
'                   ai.due_date,',
'                   ai.action_status,',
'                   ait.ai_type,',
'                   ai.resolution',
'            from eba_proj_status p,',
'                 eba_proj_status_ais ai,',
'                 eba_proj_status_ais_types ait',
'            where ai.id = p_ai_id',
'              and ai.type_id = ait.id (+)',
'              and ai.project_id = p.id',
'        )',
'        loop',
'            l_txt := l_txt ||',
'                        replace(',
'                            replace(',
'                                replace(',
'                                    c_psphnd_tmpl,',
'                                    ''#URL#'',',
'                                    apex_util.prepare_url(c_base_url || ''f?p='' || p_app_id || '':200:0:::200:P200_ID:'' || c1.project_id)',
'                                ),',
'                                ''#NAME#'',',
'                                apex_escape.html(c1.project)',
'                            ),',
'                            ''#DESCRIPTION#'',',
'                            apex_escape.html(substr(c1.project_description, 1, c_max_text)) ||',
'                            case when length(c1.project_description) > c_max_text then',
'                                ''...''',
'                            end',
'                        );',
'            l_txt := l_txt  || c_psphnd_ot_tmpl || replace(c_pspith_tmpl, ''#TYPE#'', ''Action Item'');',
'            l_txt := l_txt || c_pspitch_tmpl;',
'            l_txt := l_txt ||',
'                        replace(',
'                            replace(',
'                                replace(',
'                                    replace(',
'                                        replace(',
'                                            replace(',
'                                                replace(',
'                                                    replace(',
'                                                        replace(',
'                                                            c_psaipitcb_tmpl,',
'                                                            ''#DAYNUM#'',',
'                                                            to_char(c1.due_date, ''MON'') || ''<br>'' || to_char(c1.due_date, ''DD'')',
'                                                        ),',
'                                                        ''#AI_NAME#'',',
'                                                        apex_escape.html(c1.action)',
'                                                    ),',
'                                                    ''#AI_URL#'',',
'                                                    apex_util.prepare_url(c_base_url || ''f?p='' || p_app_id || '':78:'' || p_session || '':::78:LAST_VIEW,P78_ACTION_ITEM_ID,P78_PROJECT_ID,P200_ID,'' || c1.id || '','' || c1.project_id || '','' || c1.project_id'
||')',
'                                                ),',
'                                                ''#SINCE#'',',
'                                                apex_util.get_since(c1.due_date)',
'                                            ),',
'                                            ''#AI_STATUS#'',',
'                                            case when lower(c1.action_status) = ''open'' then',
'                                                ''&nbsp;<span style="padding-left: 5px; padding-right: 5px; padding-top: 3px; padding-bottom: 3px; line-height: 20px; font-size: 10px; background-color: #fdd5cc; color: #5f1604; border-radius: 3px;">'' ||'
||' apex_escape.html(c1.action_status) || ''</span>''',
'                                            else',
'                                                ''&nbsp;<span style="padding-left: 5px; padding-right: 5px; padding-top: 3px; padding-bottom: 3px; line-height: 20px; font-size: 10px; background-color: #f0f0f0; color: #333333; border-radius: 3px;">'' ||'
||' apex_escape.html(c1.action_status) || ''</span>''',
'                                            end',
'                                        ),',
'                                        ''#AI_OWNERS#'',',
'                                        apex_escape.html(c1.owners)',
'                                    ),',
'                                    ''#DUE_DATE#'',',
'                                    to_char(c1.due_date, ''Day, Month fmDD, YYYY'')',
'                                ),',
'                                ''#DESCRIPTION#'',',
'                                apex_escape.html(substr(c1.action_description, 1, c_max_text)) ||',
'                                case when length(c1.action_description) > c_max_text then',
'                                    ''...''',
'                                end',
'                            ),',
'                        ''#RESOLUTION#'',',
'                        case when c1.resolution is null then null else ''<br><strong>Resolution:</strong> '' || apex_escape.html(c1.resolution) end',
'                        );',
'        end loop;',
'        l_txt := l_txt || c_pspitcf_tmpl;',
'        m := m || l_txt || c_pspitf_tmpl;',
'        return m;',
'    end get_one_action_item;',
'    function get_one_status_report',
'    (',
'        p_sr_id           in number,',
'        p_app_id          in number,',
'        p_session         in number,',
'        p_app_user        in varchar2,',
'        p_app_date_format in varchar2,',
'        p_proj_owners     in varchar2,',
'        p_proj_status     in varchar2,',
'        p_proj_desc       in varchar2,',
'        p_proj_goal       in varchar2,',
'        p_milestones      in varchar2,',
'        p_action_items    in varchar2,',
'        p_issues          in varchar2,',
'        p_resources       in varchar2',
'    ) return clob',
'    is',
'        m        clob;',
'        l_txt    clob;',
'        l_ai_cnt number;',
'        l_ms_cnt number;',
'        l_i_cnt  number;',
'        l_r_cnt  number;',
'    begin',
'        m := null;',
'        g_progress := ''1'';',
'        set_apex_session( p_app_id => p_app_id, p_username => p_app_user );',
'        for c1 in',
'        (',
'            select p.id as project_id,',
'                   p.project,',
'                   p.description,',
'                   p.goal,',
'                   u.id,',
'                   u.status_title,',
'                   u.update_date,',
'                   lower(u.created_by) as created_by,',
'                   eba_proj_fw.format_status_report(',
'                        p_string        => u.status_update,',
'                        p_shorten_url   => ''N'',',
'                        p_app_id        => p_app_id,',
'                        p_session       => p_session,',
'                        p_project_id    => p.id,',
'                        p_show_all      => ''Y'',',
'                        p_max_length    => 3000,',
'                        p_status_rpt_id => u.id',
'                    ) status_update,',
'                   (select listagg(lower(u.username) || '' ('' || initcap(r.name) || '')'','', '') within group',
'                        (order by nvl(rf.acl_status_level,r.default_acl_status_level) desc, lower(u.username))',
'                    from eba_proj_user_ref rf,',
'                        eba_proj_status_users u,',
'                        eba_proj_roles r',
'                    where rf.project_id = p.id',
'                        and rf.user_id = u.id',
'                        and rf.role_id = r.id',
'                        and eba_proj_fw.is_edit_authorized( u.username, rf.project_id ) = ''Y'') as owners,',
'                   s.status_short_desc',
'            from eba_proj_status_rpts u,',
'                 eba_proj_status p,',
'                 eba_proj_status_codes s',
'            where u.project_id = p.id',
'              and u.id = p_sr_id',
'              and p.project_status = s.id (+)',
'              and (',
'                      u.update_owner = lower(p_app_user)',
'                      or',
'                      (',
'                          u.viewable_by = ''Submitter and Project Members''',
'                          and',
'                          lower(p_app_user) in (',
'                              select lower(u.username)',
'                                from eba_proj_user_ref rf,',
'                                     eba_proj_status_users u,',
'                                     eba_proj_roles r',
'                               where rf.project_id = p.id',
'                                 and rf.user_id = u.id',
'                                 and rf.role_id = r.id',
'                                 and eba_proj_fw.is_edit_authorized( u.username, rf.project_id ) = ''Y'')',
'                      )',
'                      or',
'                      u.viewable_by = ''All''',
'                  )',
'        )',
'        loop',
'            l_txt := l_txt ||',
'                        replace(',
'                            replace(',
'                                replace(',
'                                    c_psphnd_tmpl,',
'                                    ''#URL#'',',
'                                    apex_util.prepare_url(c_base_url || ''f?p='' || p_app_id || '':200:'' || p_session || '':::200:P200_ID:'' || c1.project_id)',
'                                ),',
'                                ''#NAME#'',',
'                                apex_escape.html(c1.project)',
'                            ),',
'                            ''#DESCRIPTION#'',',
'                            null',
'                        );',
'            if p_proj_owners = ''Y'' or p_proj_status = ''Y'' or p_proj_desc = ''Y'' or p_proj_goal = ''Y'' then',
'                l_txt := l_txt || c_psphnd_ot_tmpl;',
'                if p_proj_owners = ''Y'' then',
'                    l_txt := l_txt || ''',
'<tr>',
'<th class="stack" style="padding-top: 5px; padding-right: 10px; white-space: nowrap; color: #333333;">People:</th>',
'<td class="stack" style="padding-top: 5px; padding-bottom: 10px;">'' || apex_escape.html(c1.owners) || ''</td>',
'</tr>'';',
'                end if;',
'                if p_proj_status = ''Y'' then',
'                    l_txt := l_txt || ''',
'<tr>',
'<th class="stack" style="padding-top: 5px; padding-right: 10px; white-space: nowrap; color: #333333;">Status:</th>',
'<td class="stack" style="padding-top: 5px; padding-bottom: 10px;">'' || apex_escape.html(c1.status_title) || ''</td>',
'</tr>'';',
'                end if;',
'                if p_proj_desc = ''Y'' then',
'                    l_txt := l_txt || ''',
'<tr>',
'<th class="stack" style="padding-top: 5px; padding-right: 10px; white-space: nowrap; color: #333333;">Description:</th>',
'<td class="stack" style="padding-top: 5px; padding-bottom: 10px;">'' ||',
'                                              apex_escape.html(substr(c1.description, 1, c_max_text)) ||',
'                                              case when length(c1.description) > c_max_text then',
'                                                  ''...''',
'                                              end ||',
'                                              ''</td>',
'</tr>'';',
'                end if;',
'                if p_proj_goal = ''Y'' then',
'                    l_txt := l_txt || ''',
'<tr>',
'<th class="stack" style="padding-top: 5px; padding-right: 10px; white-space: nowrap; color: #333333;">Goal:</th>',
'<td class="stack" style="padding-top: 5px; padding-bottom: 10px;">'' ||',
'                                              apex_escape.html(substr(c1.goal, 1, c_max_text)) ||',
'                                              case when length(c1.goal) > c_max_text then',
'                                                  ''...''',
'                                              end ||',
'                                              ''</td>',
'</tr>'';',
'                end if;',
'                l_txt := l_txt || c_pspitcf_tmpl;',
'            end if;',
'            l_txt := l_txt || c_psphnd_ot_tmpl;',
'            l_txt := l_txt || replace(c_pspith_tmpl, ''#TYPE#'', ''Status Report'');',
'            l_txt := l_txt || c_pspitch_tmpl;',
'            l_txt := l_txt ||',
'                        replace(',
'                            replace(',
'                                    replace(',
'                                        c_pssrpitcb_tmpl,',
'                                        ''#SR_NAME#'',',
'                                        c1.status_update',
'                                    ),',
'                                ''#SUBMITTED_ON#'',',
'                                to_char(c1.update_date, ''Day, Month fmDD, YYYY'')',
'                            ),',
'                            ''#SUBMITTED_BY#'',',
'                            apex_escape.html(c1.created_by)',
'                        );',
'            l_txt := l_txt || c_pspitcf_tmpl;',
'            l_txt := l_txt || c_pspitf_tmpl;',
'            l_ms_cnt := get_milestones_count(p_id => c1.project_id, p_milestones => p_milestones);',
'            if p_milestones in (''all'',''major'') and l_ms_cnt > 0 and',
'               get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Milestones'') = ''INCLUDE'' then',
'                l_txt := l_txt || replace(c_pspith_tmpl, ''#TYPE#'', ''Milestones'');',
'                l_txt := l_txt || get_milestones(',
'                                      p_id         => c1.project_id,',
'                                      p_app_id     => p_app_id,',
'                                      p_session    => p_session,',
'                                      p_total      => l_ms_cnt,',
'                                      p_milestones => p_milestones',
'                                  );',
'            end if;',
'            l_ai_cnt := get_action_items_count(p_id => c1.project_id);',
'            if p_action_items = ''Y'' and l_ai_cnt > 0 and',
'               get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Action Items'') = ''INCLUDE'' then',
'                l_txt := l_txt || replace(c_pspith_tmpl, ''#TYPE#'', ''Action Items (Stand Alone)'');',
'                l_txt := l_txt || get_action_items(',
'                                      p_id      => c1.project_id,',
'                                      p_app_id  => p_app_id,',
'                                      p_session => p_session,',
'                                      p_total   => l_ai_cnt',
'                                  );',
'            end if;',
'            l_i_cnt := get_issues_count(p_id => c1.project_id);',
'            if p_issues = ''Y'' and l_i_cnt > 0 and',
'               get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Issues'') = ''INCLUDE'' then',
'                l_txt := l_txt || replace(c_pspith_tmpl, ''#TYPE#'', ''Issues'');',
'                l_txt := l_txt || get_issues(',
'                                      p_id      => c1.project_id,',
'                                      p_app_id  => p_app_id,',
'                                      p_session => p_session,',
'                                      p_total      => l_i_cnt',
'                                  );',
'            end if;',
'            l_r_cnt := get_resources_count(p_id => c1.project_id);',
'            if p_resources = ''Y'' and l_r_cnt > 0 and',
'               get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Resources'') = ''INCLUDE'' then',
'                l_txt := l_txt || replace(c_pspith_tmpl, ''#TYPE#'', ''Resources'');',
'                l_txt := l_txt || get_resourc'))
);
null;
wwv_flow_api.component_end;
end;
/
begin
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9008156634332785
,p_default_application_id=>134
,p_default_id_offset=>172493832712964115
,p_default_owner=>'MISO'
);
wwv_flow_api.append_to_install_script(
 p_id=>wwv_flow_api.id(6086799800318538153)
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'es(',
'                                      p_id      => c1.project_id,',
'                                      p_app_id  => p_app_id,',
'                                      p_session => p_session,',
'                                      p_total      => l_r_cnt',
'                                  );',
'            end if;',
'        end loop;',
'        l_txt := l_txt || c_pspitf_tmpl || c_pspitf_tmpl;',
'        m := m || l_txt;',
'        return m;',
'    end get_one_status_report;',
'    function get_closed_past_week',
'    (',
'        p_project_id in number,',
'        p_app_id     in number,',
'        p_session    in number,',
'        p_max_rows   in number   default 50',
'    ) return clob',
'    is',
'        m            clob;',
'        c            integer := 0;',
'        l_txt        varchar2(32767);',
'        l_inc_ms_yn  varchar2(1) := ''N'';',
'        l_inc_ais_yn varchar2(1) := ''N'';',
'        l_inc_iss_yn varchar2(1) := ''N'';',
'        l_inc_lnk_yn varchar2(1) := ''N'';',
'        l_inc_att_yn varchar2(1) := ''N'';',
'        l_inc_vld_yn varchar2(1) := ''N'';',
'    begin',
'        m := null;',
'        if get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Milestones'') = ''INCLUDE'' then',
'            l_inc_ms_yn := ''Y'';',
'        end if;',
'        if get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Action Items'') = ''INCLUDE'' then',
'            l_inc_ais_yn := ''Y'';',
'        end if;',
'        if get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Issues'') = ''INCLUDE'' then',
'            l_inc_iss_yn := ''Y'';',
'        end if;',
'        if get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Links'') = ''INCLUDE'' then',
'            l_inc_lnk_yn := ''Y'';',
'        end if;',
'        if get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Attachments'') = ''INCLUDE'' then',
'            l_inc_att_yn := ''Y'';',
'        end if;',
'        if get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Validations'') = ''INCLUDE'' then',
'            l_inc_vld_yn := ''Y'';',
'        end if;',
'        for c1 in',
'        (',
'            select',
'                v1.completed_item,',
'                v1.display_date',
'            from',
'                (',
'                    select ''Milestone: <a href="'' || apex_util.prepare_url(c_base_url || ''f?p='' || p_app_id || '':107:'' || nvl(p_session,0) || '':::107:LAST_VIEW,P107_ID,P107_PROJECT_ID,P200_ID:200,'' || id || '','' || p_project_id || '','' || p_project_id)'
||' || ''">'' || apex_escape.html(milestone_name) || ''</a> reached.'' as completed_item,',
'                           completed_date as display_date',
'                      from eba_proj_status_ms',
'                     where project_id = p_project_id',
'                       and completed_date >= (current_timestamp - 7)',
'                       and l_inc_ms_yn = ''Y''',
'                    union all',
'                    select ''Action Item: <a href="'' || apex_util.prepare_url(c_base_url || ''f?p='' || p_app_id || '':78:'' || nvl(p_session,0) || '':::78:LAST_VIEW,P78_ACTION_ITEM_ID,P200_ID:200,'' || id || '','' || p_project_id) || ''">'' || apex_escape.html'
||'(action) || ''</a> closed by '' || eba_proj_fw.get_name_from_email_address( nvl(completed_by, updated_by) ) || ''.'' as completed_item,',
'                           completed_date as display_date',
'                      from eba_proj_status_ais',
'                     where project_id = p_project_id',
'                       and completed_date >= (current_timestamp - 7)',
'                       and inc_in_status_eml_yn = ''Y''',
'                       and l_inc_ais_yn = ''Y''',
'                    union all',
'                    select ''Issue: <a href="'' || apex_util.prepare_url(c_base_url || ''f?p='' || p_app_id || '':92:'' || nvl(p_session,0) || '':::92,RIR:LAST_VIEW,P92_ID,IR_ISSUE:200,'' || p_project_id || '','' || ''\'' || apex_escape.html(issue) || ''\'') || ''"'
||'>'' || apex_escape.html(issue) || ''</a> resolved.'' as completed_item,',
'                           resolved_on as display_date',
'                      from eba_proj_status_issues',
'                     where project_id = p_project_id',
'                       and resolved_on >= (current_timestamp - 7)',
'                       and l_inc_iss_yn = ''Y''',
'                    union all',
'                    select ''Link: <a href="'' || link_target || ''" target="_blank">'' || apex_escape.html(link_text) || ''</a> added by '' || eba_proj_fw.get_name_from_email_address( created_by ) || ''.'' as completed_item,',
'                           created as display_date',
'                      from eba_proj_status_links',
'                     where project_id = p_project_id',
'                       and created >= (current_timestamp - 7)',
'                       and l_inc_lnk_yn = ''Y''',
'                    union all',
'                    select ''Attachment: <a href="'' || apex_util.prepare_url(c_base_url || ''f?p='' || p_app_id || '':106:'' || nvl(p_session,0) || '':::106:P106_ID,P106_PROJECT_ID:'' || id || '','' || p_project_id) || ''">'' || apex_escape.html(filename) || ''<'
||'/a> added by '' || eba_proj_fw.get_name_from_email_address( created_by ) || ''.'' as completed_item,',
'                           created as display_date',
'                      from eba_proj_status_files',
'                     where project_id = p_project_id',
'                       and created >= (current_timestamp - 7)',
'                       and l_inc_att_yn = ''Y''',
'                    union all',
'                    select ''Validation: <a href="'' || apex_util.prepare_url(c_base_url || ''f?p='' || p_app_id || '':114:'' || nvl(p_session,0) || '':::114,RIR:IREQ_ID,IREQ_PROJECT_ID:'' || id || '','' || p_project_id) || ''">'' || nvl(apex_escape.html(verific'
||'ation_comment), ''on '' || to_char(created,''fmDD-MON-YYYY'') ) || ''</a> added by '' || eba_proj_fw.get_name_from_email_address( created_by ) || ''.'' as completed_item,',
'                           created as display_date',
'                      from eba_proj_status_verifications',
'                     where project_id = p_project_id',
'                       and created >= (current_timestamp - 7)',
'                       and l_inc_vld_yn = ''Y''',
'                ) v1',
'                order by 2 desc',
'        )',
'        loop',
'            c := c + 1;',
'            l_txt := null;',
'            l_txt := l_txt ||',
'                     replace(',
'                         replace(',
'                             c_hst_itm_tmpl,',
'                             ''#ACTION#'',',
'                             c1.completed_item',
'                         ),',
'                         ''#WHEN#'',',
'                         to_char(c1.display_date, ''Month fmDD, YYYY'')',
'                     );',
'            m := m || l_txt;',
'            l_txt := null;',
'            if c = p_max_rows then',
'                exit;',
'            end if;',
'        end loop;',
'        return m;',
'    end get_closed_past_week;',
'    function get_upcoming_activities',
'    (',
'        p_project_id in number,',
'        p_app_id     in number,',
'        p_session    in number,',
'        p_max_rows   in number  default 50',
'    ) return clob',
'    is',
'        m            clob;',
'        c            integer := 0;',
'        l_txt        varchar2(32767);',
'        l_inc_ms_yn  varchar2(1) := ''N'';',
'        l_inc_ais_yn varchar2(1) := ''N'';',
'    begin',
'        m := null;',
'        if get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Milestones'') = ''INCLUDE'' then',
'            l_inc_ms_yn := ''Y'';',
'        end if;',
'        if get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Action Items'') = ''INCLUDE'' then',
'            l_inc_ais_yn := ''Y'';',
'        end if;',
'        for c1 in',
'        (',
'           select ''Action Item: <a href="'' || apex_util.prepare_url(c_base_url || ''f?p='' || p_app_id || '':78:'' || nvl(p_session,0) || '':::78:LAST_VIEW,P78_ACTION_ITEM_ID,P200_ID:200,'' || a.id || '','' || p_project_id) || ''">'' || apex_escape.html(a.acti'
||'on) || ''</a>'' as action,',
'                  a.due_date,',
'                  case',
'                      when a.owner_role_id is not null then',
'                          nvl((select r.name||'': ''||listagg(lower(u.username),'', '')',
'                                  within group (order by lower(u.username)) owner',
'                              from eba_proj_user_ref rf,',
'                                  eba_proj_status_users u,',
'                                  eba_proj_roles r',
'                              where rf.role_id = a.owner_role_id',
'                                  and rf.project_id = a.project_id',
'                                  and u.id = rf.user_id',
'                                  and r.id = rf.role_id',
'                              group by r.name',
'                          ),  (select ''No ''||r.name||'' defined''',
'                              from eba_proj_roles r',
'                              where r.id = a.owner_role_id)',
'                          )',
'                      when a.action_owner_01 is not null and a.action_owner_02 is not null and a.action_owner_03 is not null and a.action_owner_04 is not null then',
'                          lower(a.action_owner_01 || '', '' || a.action_owner_02 || '', '' || a.action_owner_03 || '', '' || a.action_owner_04)',
'                      when a.action_owner_01 is not null and a.action_owner_02 is not null and a.action_owner_03 is not null and a.action_owner_04 is null then',
'                          lower(a.action_owner_01 || '', '' || a.action_owner_02 || '', '' || a.action_owner_03)',
'                      when a.action_owner_01 is not null and a.action_owner_02 is not null and a.action_owner_03 is null and a.action_owner_04 is null then',
'                          lower(a.action_owner_01 || '', '' || a.action_owner_02)',
'                      when a.action_owner_01 is not null and a.action_owner_02 is null and a.action_owner_03 is null and a.action_owner_04 is null then',
'                          lower(a.action_owner_01)',
'                  end as owner',
'             from eba_proj_status_ais$ a',
'            where a.project_id = p_project_id',
'              and a.action_status = ''Open''',
'              and a.is_deleted_yn = ''N''',
'              and a.inc_in_status_eml_yn = ''Y''',
'              and a.due_date between sysdate and sysdate + 7',
'              and l_inc_ms_yn = ''Y''',
'            union all',
'           select ''Milestone: <a href="'' || apex_util.prepare_url(c_base_url || ''f?p='' || p_app_id || '':107:'' || nvl(p_session,0) || '':::107:LAST_VIEW,P107_ID,P107_PROJECT_ID,P200_ID:200,'' || m.id || '','' || p_project_id || '','' || p_project_id) || ''">'
||''' || apex_escape.html(m.milestone_name) || ''</a>'' as action,',
'                  m.milestone_date as due_date,',
'                  case',
'                      when m.owner_role_id is not null then',
'                          nvl((select r.name||'': ''||listagg(lower(u.username),'', '')',
'                                  within group (order by lower(u.username)) owner',
'                              from eba_proj_user_ref rf,',
'                                  eba_proj_status_users u,',
'                                  eba_proj_roles r',
'                              where rf.role_id = m.owner_role_id',
'                                  and rf.project_id = m.project_id',
'                                  and u.id = rf.user_id',
'                                  and r.id = rf.role_id',
'                              group by r.name',
'                          ),  (select ''No ''||r.name||'' defined''',
'                              from eba_proj_roles r',
'                              where r.id = m.owner_role_id)',
'                          )',
'                      when m.milestone_owner is not null then',
'                          lower(m.milestone_owner)',
'                  end as owner',
'             from eba_proj_status_ms m',
'            where m.project_id = p_project_id',
'              and m.milestone_status = ''Open''',
'              and m.is_deleted_yn = ''N''',
'              and m.milestone_date between sysdate and sysdate + 7',
'            -- removing this constraint fixes bug 27804737 Allan 13-JUL-2018  ',
'            --and m.is_major_yn = ''N''',
'              and l_inc_ais_yn = ''Y''',
'            order by 2 asc',
'        )',
'        loop',
'            c := c + 1;',
'            l_txt := null;',
'            l_txt := l_txt ||',
'                     replace(',
'                             replace(',
'                                 c_upc_itm_tmpl,',
'                                 ''#ACTION#'',',
'                                 c1.action',
'                             ),',
'                             ''#WHEN#'',',
'                             to_char(c1.due_date, ''Month fmDD, YYYY'')',
'                         );',
'            m := m || l_txt;',
'            l_txt := null;',
'            if c = p_max_rows then',
'                exit;',
'            end if;',
'        end loop;',
'        return m;',
'    end get_upcoming_activities;',
'    function get_status_email_top',
'    (',
'        p_id              in number,',
'        p_app_id          in number,',
'        p_session         in number',
'    ) return clob',
'    is',
'        m          clob;',
'        l_ppl_pref varchar2(30) := eba_proj_fw.get_preference_value( p_preference_name => ''STATUS_EML_SHOW_PEOPLE'' );',
'        function get_project_start_date',
'        (',
'            p_project_id      in number,',
'            p_project_created in timestamp with local time zone',
'        ) return timestamp with local time zone',
'        is',
'            l_project_start timestamp with local time zone;',
'            l_counter       pls_integer := 0;',
'        begin',
'            for c1 in',
'            (',
'                select min(milestone_start_date) as milestone_start_date',
'                  from eba_proj_status_ms$',
'                 where project_id = p_project_id',
'            )',
'            loop',
'                l_counter := l_counter + 1;',
'                if l_counter > 1 then',
'                    exit;',
'                end if;',
'                l_project_start := c1.milestone_start_date;',
'            end loop;',
'            if l_project_start is null then',
'                l_project_start := p_project_created;',
'            end if;',
'            return l_project_start;',
'        end get_project_start_date;',
'        function get_project_end_date',
'        (',
'            p_project_id      in number,',
'            p_project_created in timestamp with local time zone',
'        ) return timestamp with local time zone',
'        is',
'            l_project_end timestamp with local time zone;',
'            l_counter     pls_integer := 0;',
'        begin',
'            for c1 in',
'            (',
'                select max(milestone_date) as milestone_end_date',
'                  from eba_proj_status_ms$',
'                 where project_id =  p_project_id',
'            )',
'            loop',
'                l_counter := l_counter + 1;',
'                if l_counter > 1 then',
'                    exit;',
'                end if;',
'                l_project_end := c1.milestone_end_date;',
'            end loop;',
'            if l_project_end is null then',
'                -- if there are no miletones, use approx. 2 weeks after it''s creation',
'                -- as the estimated end date of the project',
'                l_project_end := eba_proj_dates.get_next_workday(p_project_created + 14);',
'            end if;',
'            return l_project_end;',
'        end get_project_end_date;',
'        function get_project_regions',
'        (',
'            p_project_id      in number',
'        ) return varchar2',
'        is',
'            l_regions varchar2(300);',
'        begin',
'            select listagg( r.region_name, '', '' ) within group (order by r.region_name) as regions',
'              into l_regions',
'              from eba_proj_regions r',
'             where id in (',
'                              select distinct region_id',
'                                from eba_proj_countries',
'                               where id in (',
'                                                select country_id',
'                                                  from eba_proj_status_country_ref',
'                                                 where project_id = p_project_id',
'                                            )',
'                         );',
'            return l_regions;',
'        end get_project_regions;',
'    begin',
'        if l_ppl_pref = ''Preference does not exist'' then',
'            l_ppl_pref := ''Y'';',
'        end if;',
'        for c1 in',
'        (',
'            select p.id,',
'                   p.project,',
'                   lower(cc.color_name) bg_color,',
'                   case lower(cc.color_name)',
'                       when ''black'' then',
'                           ''white''',
'                       when ''green'' then',
'                           ''white''',
'                       when ''red'' then',
'                           ''white''',
'                       else',
'                           ''black''',
'                   end as text_color,',
'                   p.project_customer as customer,',
'                   p.parent_project_id,',
'                   decode(parent_project_id, null, null, (select project from eba_proj_status s where s.id = p.parent_project_id))',
'                       parent_project_name,',
'                   (select count(*) from eba_proj_status s where s.parent_project_id = s.id) child_projects,',
'                   (select listagg(eba_proj_fw.get_name_from_email_address(u.username) || '' ('' || initcap(r.name) || '')'','', '') within group',
'                        (order by nvl(rf.acl_status_level,r.default_acl_status_level) desc, lower(u.username))',
'                    from eba_proj_user_ref rf,',
'                        eba_proj_status_users u,',
'                        eba_proj_roles r',
'                    where rf.project_id = p.id',
'                        and rf.user_id = u.id',
'                        and rf.role_id = r.id',
'                        and eba_proj_fw.is_edit_authorized( u.username, rf.project_id ) = ''Y'') as owner,',
'                   p.tags,',
'                   (select count(*) from eba_proj_status_updates u where u.project_id = p.id) updates,',
'                   (select category from eba_proj_status_cats pc where p.cat_id = pc.id) category,',
'                   p.description,',
'                   p.goal,',
'                   p.created,',
'                   p.created_by,',
'                   p.updated,',
'                   p.updated_by,',
'                   nvl(sc.status_short_desc, ''unknown'') project_status,',
'                   p.url',
'              from eba_proj_status p,',
'                   eba_proj_status_codes sc,',
'                   eba_proj_color_codes cc',
'             where p.id = p_id',
'               and p.project_status = sc.id(+)',
'               and cc.id(+) = sc.color_code_id',
'        )',
'        loop',
'            m := replace(',
'                     replace(',
'                         replace(',
'                             replace(',
'                                 replace(',
'                                    replace(',
'                                        replace(',
'                                            replace(',
'                                                replace(',
'                                                    replace(',
'                                                        replace(',
'                                                            c_pstphd_tmpl,',
'                                                            ''#URL#'',',
'                                                            apex_util.prepare_url(c_base_url||''f?p='' || p_app_id || '':200:0:::200:P200_ID:'' || p_id)',
'                                                        ),',
'                                                        ''#NAME#'',',
'                                                        apex_escape.html(c1.project)',
'                                                    ),',
'                                                    ''#DESCRIPTION#'',',
'                                                    apex_escape.html(substr(c1.description, 1, c_max_text)) ||',
'                                                    case when length(c1.description) > c_max_text then',
'                                                        ''...''',
'                                                    end',
'                                                ),',
'                                                ''#PROJECT_START_DATE#'',',
'                                                to_char(get_project_start_date(p_project_id => c1.id, p_project_created => c1.created),''Day, Month DD YYYY'') || '' ('' || apex_util.get_since(get_project_start_date(p_project_id => c1.id, p_project_create'
||'d => c1.created)) || '')''',
'                                            ),',
'                                            ''#TARGET_COMPLETE_DATE#'',',
'                                            to_char(get_project_end_date(p_project_id => c1.id, p_project_created => c1.created),''Day, Month DD YYYY HH:MI PM'') || '' ('' || apex_util.get_since(get_project_end_date(p_project_id => c1.id, p_project_creat'
||'ed => c1.created)) || '')''',
'                                        ),',
'                                        ''#STATUS#'',',
'                                        apex_escape.html(c1.project_status)',
'                                    ),',
'                                    ''#LAST_UPDATED#'',',
'                                    apex_util.get_since(c1.updated) || '' by '' || lower(apex_escape.html(c1.updated_by))',
'                                 ),',
'                                 ''#BG_COLOR#'',',
'                                 apex_escape.html(c1.bg_color)',
'                             ),',
'                             ''#TEXT_COLOR#'',',
'                             apex_escape.html(c1.text_color)',
'                         ),',
'                         ''#REGIONS#'',',
'                         case',
'                             when get_project_regions(p_project_id => c1.id) is not null then',
'                                 ''<tr>',
'    <th class="stack" style="padding-top: 2px; padding-right: 10px; white-space: nowrap; color: #333333; text-align: right;">Regions:</th>',
'    <td class="stack" style="padding-top: 2px; padding-bottom: 10px;">'' || get_project_regions(p_project_id => c1.id) || ''</td>',
'    </tr>''',
'                         else',
'                            null',
'                         end',
'                     ),',
'                     ''#PEOPLE#'',',
'                     case',
'                         when l_ppl_pref = ''Y'' then',
'                            ''<tr>',
'    <th class="stack" style="padding-top: 2px; padding-right: 10px; white-space: nowrap; color: #333333; text-align: right;">People:</th>',
'    <td class="stack" style="padding-top: 2px; padding-bottom: 10px;">'' || nvl(apex_escape.html(c1.owner), ''N/A'') || ''</td>',
'    </tr>''',
'                        else',
'                            null',
'                     end',
'                 );',
'        end loop;',
'        return m;',
'    end get_status_email_top;',
'    function get_summary_email_top',
'    (',
'        p_id              in number,',
'        p_app_id          in number,',
'        p_session         in number',
'    ) return clob',
'    is',
'        m             clob;',
'    begin',
'        for c1 in',
'        (',
'            select id,',
'                   project,',
'                   eba_proj_fw.get_project_rowkey(p_project_id => s.id) as row_key,',
'                   project_customer as customer,',
'                   parent_project_id,',
'                   decode(parent_project_id, null, null, (select project from eba_proj_status p where p.id = s.parent_project_id))',
'                       parent_project_name,',
'                   (select count(*) from eba_proj_status p where p.parent_project_id = s.id) child_projects,',
'                   (select listagg(eba_proj_fw.get_name_from_email_address(u.username) || '' ('' || initcap(r.name) || '')'','', '') within group',
'                        (order by nvl(rf.acl_status_level,r.default_acl_status_level) desc, lower(u.username))',
'                    from eba_proj_user_ref rf,',
'                        eba_proj_status_users u,',
'                        eba_proj_roles r',
'                    where rf.project_id = s.id',
'                        and rf.user_id = u.id',
'                        and rf.role_id = r.id',
'                        and eba_proj_fw.is_edit_authorized( u.username, rf.project_id ) = ''Y'') as owner,',
'                   tags,',
'                   (select count(*) from eba_proj_status_updates u where u.project_id = s.id) updates,',
'                   (select category from eba_proj_status_cats pc where s.cat_id = pc.id) category,',
'                   description,',
'                   goal,',
'                   created,',
'                   created_by,',
'                   updated,',
'                   updated_by,',
'                   nvl((select status_short_desc from eba_proj_status_codes c where c.id = s.project_status), ''unknown'') project_status,',
'                   s.url',
'            from eba_proj_status s',
'            where id = p_id',
'        )',
'        loop',
'            m := replace(',
'                    replace(',
'                        replace(',
'                            replace(',
'                                replace(',
'                                    replace(',
'                                        replace(',
'                                            replace(',
'                                                replace(',
'                                                    replace(',
'                                                        replace(',
'                                                            c_psphd_tmpl,',
'                                                            ''#CATEGORY_LBL#'',',
'                                                            replace(eba_proj_fw.get_preference_value(''CAT_TITLE''),''Preference does not exist'',''Category'')',
'                                                        ),',
'                                                        ''#URL#'',',
'                                                        apex_util.prepare_url(c_base_url||''f?p='' || p_app_id || '':200:0:::200:P200_ID:'' || p_id)',
'                                                    ),',
'                                                    ''#NAME#'',',
'                                                    apex_escape.html(c1.project)',
'                                                ),',
'                                                ''#DESCRIPTION#'',',
'                                                apex_escape.html(substr(c1.description, 1, c_max_text)) ||',
'                                                case when length(c1.description) > c_max_text then',
'                                                    ''...''',
'                                                end',
'                                            ),',
'                                            ''#KEY#'',',
'                                            case when c1.row_key is not null then',
'                                                ''<tr>',
'    <th class="stack" width="25%" style="padding-top: 5px; padding-right: 10px; white-space: nowrap; color: #333333; text-align: right;">Project Key:</th>',
'    <td class="stack" style="padding-top: 5px; padding-bottom: 10px;">'' || apex_escape.html(c1.row_key) || ''</td>',
'    </tr>''',
'                                            else',
'                                                null',
'                                            end',
'                                        ),',
'                                        ''#PEOPLE#'',',
'                                        nvl(apex_escape.html(c1.owner), ''N/A'')',
'                                    ),',
'                                    ''#CATEGORY#'',',
'                                    apex_escape.html(c1.category)',
'                                ),',
'                                ''#STATUS#'',',
'                                apex_escape.html(c1.project_status)',
'                            ),',
'                            ''#PRIMARY_URL#'',',
'                            case',
'                                when c1.url is not null then',
'                                    ''<a href="''||sys.htf.escape_sc(c1.url)||''">'' || apex_escape.html(c1.url) || ''</a>''',
'                                else',
'                                    ''N/A''',
'                            end',
'                        ),',
'                        ''#GOAL#'',',
'                        nvl(apex_escape.html(substr(c1.goal, 1, c_max_text)), ''N/A'') ||',
'                        case when length(c1.goal) > c_max_text then',
'                            ''...''',
'                        end',
'                    ),',
'                 ''#LAST_UPDATED#'',',
'                 apex_util.get_since(c1.updated) || '' by '' || lower(apex_escape.html(c1.updated_by))',
'                 );',
'        end loop;',
'        return m;',
'    end get_summary_email_top;',
'    function get_email_text',
'    (',
'        p_id         in number,',
'        p_app_id     in number,',
'        p_session    in number',
'    ) return clob',
'    is',
'        m             clob;',
'        l_cp_cnt      number;',
'        l_f_cnt       number;',
'        l_i_cnt       number;',
'        l_l_cnt       number;',
'        l_ai_cnt      number;',
'        l_ms_cnt      number;',
'        l_sr_cnt      number;',
'        l_u_cnt       number;',
'        l_r_cnt       number;',
'    begin',
'        m := get_summary_email_top(',
'                 p_id      => p_id,',
'                 p_app_id  => p_app_id,',
'                 p_session => p_session',
'             );',
'        l_cp_cnt := get_child_project_count(p_id => p_id);',
'        l_f_cnt  := get_files_count(p_id => p_id, p_is_gold => ''Y'') + get_files_count(p_id => p_id, p_is_gold => ''N'');',
'        l_i_cnt  := get_issues_count(p_id => p_id);',
'        l_l_cnt  := get_links_count(p_id => p_id, p_is_gold => ''Y'') + get_links_count(p_id => p_id, p_is_gold => ''N'');',
'        l_ai_cnt := get_action_items_count(p_id => p_id);',
'        l_ms_cnt := get_milestones_count(p_id => p_id);',
'        l_sr_cnt := get_status_reports_count(p_id => p_id);',
'        l_u_cnt  := get_updates_count(p_id => p_id);',
'        l_r_cnt  := get_resources_count(p_id => p_id);',
'        if l_cp_cnt > 0 then',
'            m := m || replace(c_pspith_tmpl, ''#TYPE#'', ''Child Projects'');',
'            m := m || get_child_projects(',
'                          p_id      => p_id,',
'                          p_app_id  => p_app_id,',
'                          p_session => p_session,',
'                          p_total   => l_cp_cnt',
'                      );',
'        end if;',
'        if l_ms_cnt > 0',
'           and',
'           get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Milestones'') = ''INCLUDE'' then',
'            m := m || replace'))
);
null;
wwv_flow_api.component_end;
end;
/
begin
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9008156634332785
,p_default_application_id=>134
,p_default_id_offset=>172493832712964115
,p_default_owner=>'MISO'
);
wwv_flow_api.append_to_install_script(
 p_id=>wwv_flow_api.id(6086799800318538153)
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'(c_pspith_tmpl, ''#TYPE#'', ''Milestones'');',
'            m := m || get_milestones(',
'                          p_id      => p_id,',
'                          p_app_id  => p_app_id,',
'                          p_session => p_session,',
'                          p_total   => l_ms_cnt',
'                      );',
'        end if;',
'        if l_ai_cnt > 0',
'           and',
'           get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Action Items'') = ''INCLUDE'' then',
'            m := m || replace(c_pspith_tmpl, ''#TYPE#'', ''Action Items (Stand Alone)'');',
'            m := m || get_action_items(',
'                          p_id      => p_id,',
'                          p_app_id  => p_app_id,',
'                          p_session => p_session,',
'                          p_total   => l_ai_cnt',
'                      );',
'        end if;',
'        if l_r_cnt > 0',
'           and',
'           get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Resources'') = ''INCLUDE'' then',
'            m := m || replace(c_pspith_tmpl, ''#TYPE#'', ''Resources'');',
'            m := m || get_resources(',
'                          p_id      => p_id,',
'                          p_app_id  => p_app_id,',
'                          p_session => p_session,',
'                          p_total   => l_r_cnt',
'                      );',
'        end if;',
'        if l_i_cnt > 0',
'           and',
'           get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Issues'') = ''INCLUDE'' then',
'            m := m || replace(c_pspith_tmpl, ''#TYPE#'', ''Issues'');',
'            m := m || get_issues(',
'                          p_id      => p_id,',
'                          p_app_id  => p_app_id,',
'                          p_session => p_session,',
'                          p_total   => l_i_cnt',
'                      );',
'        end if;',
'        if l_l_cnt > 0',
'           and',
'           get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Links'') = ''INCLUDE'' then',
'            m := m || replace(c_pspith_tmpl, ''#TYPE#'', ''Links'');',
'            m := m || get_links(',
'                          p_id      => p_id,',
'                          p_app_id  => p_app_id,',
'                          p_session => p_session,',
'                          p_total   => l_l_cnt',
'                      );',
'        end if;',
'        if l_f_cnt > 0',
'           and',
'           get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Attachments'') = ''INCLUDE'' then',
'            m := m || replace(c_pspith_tmpl, ''#TYPE#'', ''Files'');',
'            m := m || get_files(',
'                          p_id      => p_id,',
'                          p_app_id  => p_app_id,',
'                          p_session => p_session,',
'                          p_total   => l_f_cnt',
'                      );',
'        end if;',
'        if l_sr_cnt > 0',
'           and',
'           get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Status Reports'') = ''INCLUDE'' then',
'            m := m || replace(c_pspith_tmpl, ''#TYPE#'', ''Status Reports'');',
'            m := m || get_status_reports(',
'                          p_id      => p_id,',
'                          p_app_id  => p_app_id,',
'                          p_session => p_session,',
'                          p_total   => l_sr_cnt',
'                      );',
'        end if;',
'        if l_u_cnt > 0',
'           and',
'           get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Updates'') = ''INCLUDE'' then',
'            m := m || replace(c_pspith_tmpl, ''#TYPE#'', ''Updates'');',
'            m := m || get_updates(',
'                          p_id      => p_id,',
'                          p_app_id  => p_app_id,',
'                          p_session => p_session,',
'                          p_total   => l_u_cnt',
'                      );',
'        end if;',
'        m := m || c_pspitf_tmpl || c_pspitf_tmpl;',
'        return m;',
'    end get_email_text;',
'    function get_status_email_text',
'    (',
'        p_id              in number,',
'        p_app_id          in number,',
'        p_session         in number,',
'        p_email           in varchar2',
'    ) return clob',
'    is',
'        m             clob;',
'        l_i_cnt       number; -- Issues',
'        l_cpw_cnt     number; -- Milestones & Action Items Closed/Completed in the past week',
'        l_uai_cnt     number; -- Upcoming Milestones & Action Items',
'        l_odai_cnt    number; -- Overdue Action Items',
'        l_odms_cnt    number; -- Overdue Milestones',
'        l_ms_cnt      number;',
'        l_sr_cnt      number;',
'        l_u_cnt       number;',
'        l_tz_pref_cnt number;',
'        l_tz_offset   varchar2(10);',
'        l_project     eba_proj_status.project%type;',
'        l_risks_mode  varchar2(30) := eba_proj_fw.get_preference_value(''STATUS_EML_RISKS_VERBOSITY'');',
'        l_dd_mode     varchar2(30) := eba_proj_fw.get_preference_value(''STATUS_EML_DUE_DATE_VERBOSITY'');',
'        l_ms_type     varchar2(30) := eba_proj_fw.get_preference_value(''STATUS_EML_MS_TYPE'');',
'    begin',
'        -- Ensure View Queries return the expected result sets.',
'        set_apex_session( p_app_id => p_app_id, p_username => get_username_from_email(p_email => p_email) );',
'        apex_application.g_flow_id := p_app_id;',
'        m := get_status_email_top(',
'                     p_id      => p_id,',
'                     p_app_id  => p_app_id,',
'                     p_session => p_session',
'                 );',
'        m := m || c_2c_top_tmpl;',
'        m := m || replace(c_pspith_tmpl, ''#TYPE#'', ''Completed Activities <br><span style="font-size: 12px;">(Last 7 Day Period)</span>'');',
'        m := m || c_hst_top_tmpl;',
'        l_cpw_cnt := get_closed_past_week_count(p_project_id => p_id, p_app_id => p_app_id);',
'        if l_cpw_cnt > 0 then',
'            m := m || get_closed_past_week(p_project_id => p_id, p_app_id => p_app_id, p_session => p_session);',
'        else',
'            m := m || ''<tr><td><span style="color: #707070; font-size: 12px;">No Milestones reached, Action Items closed, Links added, Attachments added, or Validations added in the last seven days.</span></td></tr>'';',
'        end if;',
'        m := m || c_hst_btm_tmpl;',
'        m := m || c_2c_mid_tmpl;',
'        m := m || replace(c_pspith_tmpl, ''#TYPE#'', ''Upcoming Activities <br><span style="font-size: 12px;">(Next 7 Day Period)</span>'');',
'        m := m || c_hst_top_tmpl;',
'        l_uai_cnt := get_upcoming_count(p_project_id => p_id);',
'        if l_uai_cnt > 0 then',
'            m := m || get_upcoming_activities(p_project_id => p_id, p_app_id => p_app_id, p_session => p_session);',
'        else',
'            m := m || ''<tr><td><span style="color: #707070; font-size: 12px;">No upcoming Action Items in the next seven days.</span></td></tr>'';',
'        end if;',
'        m := m || c_hst_btm_tmpl;',
'        m := m || c_2c_btm_tmpl;',
'        if l_ms_type = ''Preference does not exist'' then',
'            l_ms_type := ''all'';',
'        end if;',
'        l_ms_type := lower(l_ms_type);',
'        l_ms_cnt := get_status_ms_count(p_id => p_id, p_milestones => l_ms_type);',
'        -- Ensure Due Date mode is defined properly; Default to TERSE Mode',
'        if l_dd_mode = ''Preference does not exist'' then',
'            l_dd_mode := ''TERSE'';',
'        end if;',
'        if l_ms_cnt > 0 then',
'            if l_ms_type = ''all'' then',
'                m := m || replace(c_pspith_tmpl, ''#TYPE#'', ''Milestones'');',
'            else',
'                m := m || replace(c_pspith_tmpl, ''#TYPE#'', ''Major Milestones'');',
'            end if;',
'            m := m || get_status_milestones(',
'                          p_id            => p_id,',
'                          p_app_id        => p_app_id,',
'                          p_session       => p_session,',
'                          p_total         => l_ms_cnt,',
'                          p_milestones    => l_ms_type,',
'                          p_due_date_mode => l_dd_mode',
'                      );',
'        end if;',
'        -- Ensure risks mode is defined properly; Default to TERSE Mode',
'        if l_risks_mode = ''Preference does not exist'' then',
'            l_risks_mode := ''TERSE'';',
'        end if;',
'        l_odai_cnt := get_overdue_ai_count(p_project_id => p_id);',
'        l_odms_cnt := get_overdue_ms_count(p_project_id => p_id);',
'        if (',
'            l_odai_cnt > 0',
'            and',
'            get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Action Items'') = ''INCLUDE''',
'        )',
'        or',
'        (',
'             l_odms_cnt > 0',
'             and',
'             get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Milestones'') = ''INCLUDE''',
'        ) then',
'            m := m || replace(c_pspith_tmpl, ''#TYPE#'', ''Risks'');',
'            for c2 in',
'            (',
'                select project',
'                  from eba_proj_status',
'                 where id = p_id',
'            )',
'            loop',
'                l_project := c2.project;',
'            end loop;',
'            begin',
'                select tz_offset(TIMEZONE_PREFERENCE) into l_tz_offset from eba_proj_tz_pref where upper(username) = (select username from eba_proj_status_users where upper(email_address) = upper(p_email) or upper(username) = upper(p_email));',
'            exception when no_data_found then',
'                l_tz_offset := null;',
'            end;',
'            if l_tz_offset is null then',
'                select tz_offset(''US/Pacific'') into l_tz_offset from dual;',
'            end if;',
'            ',
'            if l_odms_cnt > 0 then',
'                if l_risks_mode = ''TERSE'' then',
'                    m := m || ''<br>Milestone(s): <a href="'' || apex_util.prepare_url( c_base_url || ''f?p='' || p_app_id || '':63:'' || p_session || '':::RP,63,CIR:IREQ_PROJECT,IREQ_MILESTONE_STATUS,IRLT_MILESTONE_DATE:\'' || l_project || ''\,Open,'' || to_c'
||'har(sysdate,''DD-MON-YYYY'') ) || ''&tz='' || l_tz_offset || ''">'' || to_char(l_odms_cnt) || '' Past Due</a>'';',
'                else',
'                    m := m || get_verbose_past_due_ms(',
'                                  p_id         => p_id,',
'                                  p_app_id     => p_app_id,',
'                                  p_session    => p_session,',
'                                  p_total      => l_odms_cnt',
'                              );',
'                end if;',
'            end if;',
'            if l_odai_cnt > 0 then',
'                if l_risks_mode = ''TERSE'' then',
'                    m := m || ''<br>Action Item(s): <a href="'' || apex_util.prepare_url( c_base_url || ''f?p='' || p_app_id || '':49:'' || p_session || '':::RP,49,CIR:IREQ_PROJECT,IREQ_ACTION_STATUS,IRLT_DUE_DATE:\'' || l_project || ''\,Open,'' || to_char(sys'
||'date,''DD-MON-YYYY'') ) || ''&tz='' || l_tz_offset || ''">'' || to_char(l_odai_cnt) || '' Past Due</a><br>'';',
'                else',
'                    m := m || get_verbose_past_due_ais(',
'                                  p_id         => p_id,',
'                                  p_app_id     => p_app_id,',
'                                  p_session    => p_session,',
'                                  p_total      => l_odai_cnt',
'                              );',
'                end if;',
'            end if;',
'            m := m || ''<br>'';',
'        end if;',
'        l_i_cnt  := get_open_issues_count(p_id => p_id);',
'        if l_i_cnt > 0 and',
'           get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Issues'') = ''INCLUDE'' then',
'            m := m || replace(c_pspith_tmpl, ''#TYPE#'', ''Open Issues'');',
'            m := m || get_status_open_issues(',
'                          p_id         => p_id,',
'                          p_app_id     => p_app_id,',
'                          p_session    => p_session,',
'                          p_total      => l_i_cnt',
'                      );',
'        end if;',
'        l_sr_cnt := get_status_reports_count(p_id => p_id, p_days_since => 7);',
'        l_u_cnt  := get_updates_count(p_id => p_id, p_days_since => 7);',
'        if l_sr_cnt > 0 or l_u_cnt > 0 then',
'            m := m || replace(c_pspith_tmpl, ''#TYPE#'', ''Updates <small>(Last 7 Day Period)</small>'');',
'        end if;',
'        if l_sr_cnt > 0 and',
'           get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Status Reports'') = ''INCLUDE'' then',
'            m := m || get_status_reports(',
'                          p_id         => p_id,',
'                          p_app_id     => p_app_id,',
'                          p_session    => p_session,',
'                          p_total      => l_sr_cnt,',
'                          p_days_since => 7',
'                      );',
'        end if;',
'        if l_u_cnt > 0 and',
'           get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Project Updates'') = ''INCLUDE'' then',
'                m := m || get_updates(',
'                              p_id         => p_id,',
'                              p_app_id     => p_app_id,',
'                              p_session    => p_session,',
'                              p_total      => l_u_cnt,',
'                              p_days_since => 7',
'                          );',
'        end if;',
'        m := m || c_pspitf_tmpl || c_pspitf_tmpl;',
'        return m;',
'    end get_status_email_text;',
'    function get_email_body (',
'        p_id         in number,',
'        p_app_id     in number,',
'        p_session    in number,',
'        p_app_name   in varchar2,',
'        p_email_type in varchar2, -- SUMMARY or STATUS',
'        p_email      in varchar2',
'    ) return clob',
'    is',
'       l_clob            clob;',
'       m                 clob;',
'    begin',
'        l_clob := m;',
'        m := m || replace( replace( c_pstop_tmpl, ''#APP_NAME#'', p_app_name), ''#HEADER_TEXT#'', get_header_text() );',
'        l_clob := l_clob || m;',
'        m := null;',
'        if p_email_type = ''SUMMARY'' then',
'            begin',
'                -- print all project content',
'                m := get_email_text (',
'                        p_id              => p_id,',
'                        p_app_id          => p_app_id,',
'                        p_session         => p_session',
'                    );',
'                l_clob := l_clob || m;',
'                m := null;',
'            exception when others then',
'                l_clob := l_clob || sqlerrm;',
'            end;',
'        elsif p_email_type = ''STATUS'' then',
'            begin',
'                -- print all project content',
'                m := get_status_email_text (',
'                        p_id      => p_id,',
'                        p_app_id  => p_app_id,',
'                        p_session => p_session,',
'                        p_email   => p_email',
'                    );',
'                l_clob := l_clob || m;',
'                m := null;',
'            exception when others then',
'                l_clob := l_clob || sqlerrm;',
'            end;',
'        end if;',
'        m := m || replace(c_ftr_tmpl, ''#SYSTEM_GENERATED_EMAIL_TEXT#'', replace(replace(c_sgm_tmpl, ''#OPT_OUT_TEXT#'', replace(c_job_sent_text, ''#PREFERENCES_URL#'', apex_util.prepare_url(c_base_url || ''f?p=''||p_app_id||'':USER_PREFS:''))), ''#FOOTER_TEXT#'
||''', get_footer_text(p_email_type => p_email_type)));',
'        l_clob := l_clob || m;',
'        return l_clob;',
'    end get_email_body;',
'    function get_feedback_email_body (',
'        p_app_id        in number,',
'        p_page_id       in number,',
'        p_submitter     in varchar2,',
'        p_feedback_type in varchar2,',
'        p_feedback      in varchar2',
'    ) return clob',
'    is',
'       l_clob clob;',
'       l_body clob;',
'       m      clob;',
'    begin',
'        l_clob := m;',
'        m := m || replace( replace( replace( replace(c_tdtop_tmpl, ''#APP_NAME#'', eba_proj_fw.get_preference_value(''APPLICATION_TITLE'')), ''#SUBJECT#'', c_fb_subject), ''#RECIPIENT_EMAIL#'', null), ''#HEADER_TEXT#'', get_header_text() );',
'        l_clob := l_clob || m;',
'        m := null;',
'        -- Construct html body',
'        l_body := ''<p>'' || p_submitter || '' has submitted the following <strong><a href="'' || apex_util.prepare_url(c_base_url ||',
'                  ''f?p='' || p_app_id || '':203:0:::203,RIR:IREQ_PAGE_ID,IREQ_TYPE_ID,IREQ_CREATED_BY:'' || p_page_id || '','' ||',
'                  p_feedback_type || '','' || upper(p_submitter)) || ''">'' || p_feedback_type || ''</a></strong> from page '' || p_page_id || '':</p>'' ||',
'                  ''<p>'' || p_feedback || ''</p>'';',
'        -- Add body to current clob',
'        l_clob := l_clob || l_body;',
'        m := m || c_pspitf_tmpl || c_pspitf_tmpl;',
'        l_clob := l_clob || m;',
'        return l_clob;',
'    end get_feedback_email_body;',
'    function is_workday return boolean is',
'        l_workdays varchar2(500) := eba_proj_fw.get_preference_value(''WORKDAYS'');',
'        l_today varchar2(1) := to_char(localtimestamp,''D'');',
'    begin',
'        if l_workdays like ''%:%'' then',
'            if instr(l_workdays, l_today) > 0 then',
'                return true;',
'            else',
'                return false;',
'            end if;',
'        else',
'            -- Preference not set; assume MTWTF.',
'            if l_today >= 2 and l_today <= 6 then',
'                return true;',
'            else',
'                return false;',
'            end if;',
'        end if;',
'    end;',
'    --',
'    -- Public Procedures/Functions',
'    --',
'    procedure log_sent_email',
'    (',
'        p_email_to   in varchar2,',
'        p_email_from in varchar2,',
'        p_body_size  in number,',
'        p_type       in varchar2,',
'        p_project_id in number    default null',
'    )',
'    is',
'    begin',
'        insert into eba_proj_status_email_log',
'        (email_first_to, email_to, email_from, body_size, created_by,',
'         created, email_type, project_id)',
'        values',
'        (case when instr(p_email_to, '','') > 0 then',
'             substr(p_email_to, 1, instr(p_email_to, '','') - 1)',
'         else',
'             p_email_to',
'         end, substr(p_email_to,1,4000), p_email_from, p_body_size, nvl( nvl( wwv_flow.g_user, v(''APP_USER'') ), user),',
'         current_timestamp, p_type, p_project_id);',
'    end log_sent_email;',
'    procedure print_message (',
'        p_id              in number,',
'        p_app_id          in number,',
'        p_session         in number,',
'        p_app_name        in varchar2,',
'        p_email           in varchar2,',
'        p_max_rows        in number   default 20,',
'        p_target          in varchar2 default null,',
'        p_show_buttons_yn in varchar2 default ''Y'',',
'        p_reply_email     in varchar2 default null,',
'        p_use_since_yn    in varchar2 default ''N'',',
'        p_email_type      in varchar2 default ''SUMMARY''',
'    )',
'    is',
'       l_clob            clob;',
'       m                 clob;',
'       c                 integer;',
'       l_max_text        integer := 300;',
'    begin',
'        l_clob := m;',
'        m := m || replace( replace( c_pstop_tmpl, ''#APP_NAME#'', p_app_name), ''#HEADER_TEXT#'', get_header_text() );',
'        l_clob := l_clob || m;',
'        m := null;',
'        if p_email_type = ''SUMMARY'' then',
'            begin',
'                -- print all project content',
'                m := get_email_text (',
'                        p_id              => p_id,',
'                        p_app_id          => p_app_id,',
'                        p_session         => p_session',
'                    );',
'                l_clob := l_clob || m;',
'                m := null;',
'            exception when others then',
'                l_clob := l_clob || sqlerrm;',
'            end;',
'        elsif p_email_type = ''STATUS'' then',
'            begin',
'                -- print all project content',
'                m := get_status_email_text (',
'                        p_id      => p_id,',
'                        p_app_id  => p_app_id,',
'                        p_session => p_session,',
'                        p_email   => p_email',
'                    );',
'                l_clob := l_clob || m;',
'                m := null;',
'            exception when others then',
'                l_clob := l_clob || sqlerrm;',
'            end;',
'        end if;',
'        m := m || replace(c_ftr_tmpl, ''#SYSTEM_GENERATED_EMAIL_TEXT#'', replace( replace( c_sgm_tmpl, ''#OPT_OUT_TEXT#'', null), ''#FOOTER_TEXT#'', get_footer_text(p_email_type => p_email_type)));',
'        l_clob := l_clob || m;',
'        if upper(p_target) = ''HTP'' or p_target is null then',
'            for j in 1..1000 loop',
'                sys.htp.prn(dbms_lob.substr(l_clob, 10000, 1 + (10000 * (j - 1))));',
'            end loop;',
'        end if;',
'        if upper(p_target) = ''COLLECTION'' or p_target is null then',
'            apex_collection.create_or_truncate_collection(p_collection_name => ''EMAIL'');',
'            apex_collection.add_member (p_collection_name => ''EMAIL'', p_clob001 => l_clob);',
'        end if;',
'    end print_message;',
'    procedure print_ai_message (',
'        p_action_item_id  in number,',
'        p_app_id          in number,',
'        p_session         in number,',
'        p_app_name        in varchar2,',
'        p_target          in varchar2,',
'        p_show_buttons_yn in varchar2,',
'        p_reply_email     in varchar2,',
'        p_use_since_yn    in varchar2)',
'    is',
'       l_clob            clob;',
'       m                 clob;',
'       l_txt             varchar2(32767) := null;',
'       c                 integer;',
'    begin',
'        l_clob := m;',
'        m := m || replace( replace( c_pstop_tmpl, ''#APP_NAME#'', p_app_name), ''#HEADER_TEXT#'', get_header_text() );',
'        l_clob := l_clob || m;',
'        m := null;',
'        begin',
'            -- print action item content',
'            m := get_one_action_item(',
'                    p_ai_id   => p_action_item_id,',
'                    p_app_id  => p_app_id,',
'                    p_session => p_session',
'                 );',
'            l_clob := l_clob || m;',
'            m := null;',
'        exception when others then',
'            l_clob := l_clob || sqlerrm;',
'        end;',
'        m := m || replace(c_ftr_tmpl, ''#SYSTEM_GENERATED_EMAIL_TEXT#'', replace( replace(c_sgm_tmpl, ''#OPT_OUT_TEXT#'', null), ''#FOOTER_TEXT#'', get_footer_text()));',
'        l_clob := l_clob || m;',
'        if upper(p_target) = ''HTP'' or p_target is null then',
'            for j in 1..1000 loop',
'                sys.htp.prn(dbms_lob.substr(l_clob, 10000, 1 + (10000 * (j - 1))));',
'            end loop;',
'        end if;',
'        if upper(p_target) = ''COLLECTION'' or p_target is null then',
'            apex_collection.create_or_truncate_collection(p_collection_name => ''EMAIL'');',
'            apex_collection.add_member (p_collection_name => ''EMAIL'', p_clob001 => l_clob);',
'        end if;',
'    end print_ai_message;',
'    procedure print_status_rpt_message (',
'        p_id              in number,',
'        p_status_rpt_id   in number,',
'        p_proj_owners     in varchar2,',
'        p_proj_status     in varchar2,',
'        p_proj_desc       in varchar2,',
'        p_proj_goal       in varchar2,',
'        p_milestones      in varchar2,',
'        p_action_items    in varchar2,',
'        p_issues          in varchar2,',
'        p_resources       in varchar2,',
'        p_app_user        in varchar2,',
'        p_app_date_format in varchar2,',
'        p_app_name        in varchar2,',
'        p_show_footer     in varchar2 default ''Y'',',
'        p_app_id          in number,',
'        p_session         in number,',
'        p_max_rows        in number default 20,',
'        p_target          in varchar2 default null,',
'        p_show_buttons_yn in varchar2 default ''Y'',',
'        p_reply_email     in varchar2 default null,',
'        p_use_since_yn    in varchar2 default ''N'')',
'    is',
'        l_clob            clob;',
'        m                 clob;',
'        l_txt             varchar2(32767) := null;',
'        c                 integer;',
'        l_milestones      varchar2(1)     := ''N'';',
'        l_color           varchar2(30);',
'        l_last_month      varchar2(30)    := ''none'';',
'        l_last_year       varchar2(4)     := ''0000'';',
'        l_action_items    varchar2(1)     := ''N'';',
'        l_session         number;',
'    begin',
'        l_clob := m;',
'        if p_show_footer = ''Y'' then',
'           l_session := 0;',
'        else',
'           l_session := p_session;',
'        end if;',
'        m := m || replace( replace( c_pstop_tmpl, ''#APP_NAME#'', p_app_name), ''#HEADER_TEXT#'', get_header_text() );',
'        l_clob := l_clob || m;',
'        m := null;',
'        begin',
'            -- print action item content',
'            m := get_one_status_report(',
'                    p_sr_id           => p_status_rpt_id,',
'                    p_app_id          => p_app_id,',
'                    p_session         => l_session,',
'                    p_app_user        => p_app_user,',
'                    p_app_date_format => p_app_date_format,',
'                    p_proj_owners     => p_proj_owners,',
'                    p_proj_status     => p_proj_status,',
'                    p_proj_desc       => p_proj_desc,',
'                    p_proj_goal       => p_proj_goal,',
'                    p_milestones      => p_milestones,',
'                    p_action_items    => p_action_items,',
'                    p_issues          => p_issues,',
'                    p_resources       => p_resources',
'                 );',
'            l_clob := l_clob || m;',
'            m := null;',
'        exception when others then',
'            l_clob := l_clob || sqlerrm;',
'        end;',
'        m := m || replace(c_ftr_tmpl, ''#SYSTEM_GENERATED_EMAIL_TEXT#'', replace( replace( c_sgm_tmpl, ''#OPT_OUT_TEXT#'', null ), ''#FOOTER_TEXT#'', get_footer_text()) );',
'        l_clob := l_clob || m;',
'        m := null;',
'        if upper(p_target) = ''HTP'' or p_target is null then',
'            for j in 1..1000 loop',
'                sys.htp.prn(dbms_lob.substr(l_clob, 10000, 1 + (10000 * (j - 1))));',
'            end loop;',
'        end if;',
'        if upper(p_target) = ''COLLECTION'' or p_target is null then',
'            apex_collection.create_or_truncate_collection(p_collection_name => ''EMAIL'');',
'            apex_collection.add_member (p_collection_name => ''EMAIL'', p_clob001 => l_clob);',
'        end if;',
'    end print_status_rpt_message;',
'    procedure send_past_due_emails',
'    (',
'        p_app_id     in number,',
'        p_user_email in varchar2 default null,',
'        p_method     in varchar2 default ''JOB''',
'    )',
'    is',
'        l_subject       varchar2(500);',
'        l_body          clob := '' '';',
'        l_body_html     clob;',
'        l_email_type    varchar2(30) := ''PAST_DUE'';',
'    begin',
'        set_apex_workspace(p_app_id => p_app_id);',
'        set_apex_session( p_app_id => p_app_id, p_username => get_username_from_email(p_email => p_user_email) );',
'        if get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Email Past Due Deliverables'') = ''EXCLUDE'' then',
'            return;',
'        elsif p_method = ''JOB'' and not is_workday then',
'            return;',
'        end if;',
'        -- Get all pertinent email addresses that need an email',
'        for c1 in',
'        (',
'            with ow as (',
'                select a.id action_item_id,',
'                       null milestone_id,',
'                       lower(a.ai_owner) email,',
'                       nvl(u.past_due_reminders_freq,''UNSET'') as pdrs',
'                  from eba_proj_status_ais$ unpivot exclude nulls',
'                       ( ai_owner for action_owner_no in ( action_owner_01 as 1,',
'                                                           action_owner_02 as 2,',
'                                                           action_owner_03 as 3,',
'                                                           action_owner_04 as 4',
'                                                    )',
'                       ) a, eba_proj_status_users u',
'                 where a.owner_role_id is null',
'                   and upper(a.ai_owner) = u.username',
'                   and u.access_level_id > 0',
'                union all',
'                select a.id action_item_id,',
'                       null milestone_id,',
'                       lower(nvl(u.email_address,u.username)) email,',
'                       nvl(u.past_due_reminders_freq,''UNSET'') as pdrs',
'                  from eba_proj_status_ais$ a,',
'                       eba_proj_user_ref rf,',
'                       eba_proj_status_users u',
'                 where a.owner_role_id is not null',
'                   and rf.role_id = a.owner_role_id',
'                   and rf.project_id = a.project_id',
'                   and rf.user_id = u.id',
'                   and u.access_level_id > 0',
'                -- Milestones',
'                union all',
'                select null action_item_id,',
'                       m.id milestone_id,',
'                       lower(',
'                           substr(m.milestone_owner, 1,',
'                               case when instr(m.milestone_owner, '','') > 0 then',
'                                    instr(m.milestone_owner, '','') - 1',
'                                else length(m.milestone_owner) end )) email,',
'                       nvl(u.past_due_reminders_freq,''UNSET'') as pdrs',
'                  from eba_proj_status_ms$ m, eba_proj_status_users u',
'                 where m.owner_role_id is null',
'                   and upper(substr(m.milestone_owner, 1,',
'                            case when instr(m.milestone_owner, '','') > 0 then',
'                                    instr(m.milestone_owner, '','') - 1',
'                                else length(m.milestone_owner) end )) = u.username',
'                   and u.access_level_id > 0',
'                union all',
'                select null action_item_id,',
'                       m.id milestone_id,',
'                       lower(nvl(u.email_address,u.username)) email,',
'                       nvl(u.past_due_reminders_freq,''UNSET'') as pdrs',
'                  from eba_proj_status_ms$ m,',
'                       eba_proj_user_ref rf,',
'                       eba_proj_status_users u',
'                 where m.owner_role_id is not null',
'                   and rf.role_id = m.owner_role_id',
'                   and rf.project_id = m.project_id',
'                   and rf.user_id = u.id',
'                   and u.access_level_id > 0',
'            )',
'            select distinct ow.email to_address',
'            from eba_proj_status_ais$ a,',
'                eba_proj_status$ p,',
'                eba_proj_status_codes s,',
'                ow',
'            where a.id = ow.action_item_id',
'                and p.id = a.project_id',
'                and p.project_status = s.id (+)',
'                and p.is_deleted_yn = ''N''',
'                and p.project_status not in (select id from eba_proj_status_codes where is_closed_status = ''Y'')',
'                and s.is_closed_status != ''Y''',
'                and a.action_status = ''Open''',
'                and a.is_deleted_yn = ''N''',
'                and (',
'                        p_user_email is null',
'                        or',
'                        lower(ow.email) = l'))
);
null;
wwv_flow_api.component_end;
end;
/
begin
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9008156634332785
,p_default_application_id=>134
,p_default_id_offset=>172493832712964115
,p_default_owner=>'MISO'
);
wwv_flow_api.append_to_install_script(
 p_id=>wwv_flow_api.id(6086799800318538153)
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'ower(p_user_email)',
'                    )',
'                and ow.email like ''%@%''',
'                and a.due_date < sysdate',
'                and ow.pdrs not in (''NEVER'',''UNSET'')',
'                and (',
'                        p_method != ''JOB''',
'                        or',
'                        (',
'                            ow.pdrs = ''QUARTERLY''',
'                            and',
'                            nvl((select max(created) + 89.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, ow.email) > 0), current_timestamp) <= current_timestamp',
'                        )',
'                        or',
'                        (',
'                            ow.pdrs = ''MONTHLY''',
'                            and',
'                            nvl((select max(created) + 29.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, ow.email) > 0), current_timestamp) <= current_timestamp',
'                        )',
'                        or',
'                        (',
'                            ow.pdrs = ''BIMONTHLY''',
'                            and',
'                            nvl((select max(created) + 14.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, ow.email) > 0), current_timestamp) <= current_timestamp',
'                        )',
'                        or',
'                        (',
'                            ow.pdrs = ''WEEKLY''',
'                            and',
'                            nvl((select max(created) + 6.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, ow.email) > 0), current_timestamp) <= current_timestamp',
'                        )',
'                        or',
'                        (',
'                            ow.pdrs = ''DAILY''',
'                            and',
'                            nvl((select max(created) + .9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, ow.email) > 0), current_timestamp) <= current_timestamp',
'                        )',
'                    )',
'            union',
'            select ow.email to_address',
'            from eba_proj_status_ms$ m,',
'                eba_proj_status$ p,',
'                eba_proj_status_codes s,',
'                ow',
'            where m.id = ow.milestone_id',
'                and p.id = m.project_id',
'                and p.project_status = s.id (+)',
'                and p.is_deleted_yn = ''N''',
'                and p.project_status not in (select id from eba_proj_status_codes where is_closed_status = ''Y'')',
'                and s.is_closed_status != ''Y''',
'                and m.milestone_status = ''Open''',
'                and m.is_deleted_yn = ''N''',
'                and ( p_user_email is null',
'                    or lower(ow.email) = lower(p_user_email))',
'                and ow.email like ''%@%''',
'                and m.milestone_date < sysdate',
'                and ow.pdrs not in (''NEVER'',''UNSET'')',
'                and (',
'                        p_method != ''JOB''',
'                        or',
'                        (',
'                            ow.pdrs = ''QUARTERLY''',
'                            and',
'                            nvl((select max(created) + 89.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, ow.email) > 0), current_timestamp) <= current_timestamp',
'                        )',
'                        or',
'                        (',
'                            ow.pdrs = ''MONTHLY''',
'                            and',
'                            nvl((select max(created) + 29.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, ow.email) > 0), current_timestamp) <= current_timestamp',
'                        )',
'                        or',
'                        (',
'                            ow.pdrs = ''BIMONTHLY''',
'                            and',
'                            nvl((select max(created) + 14.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, ow.email) > 0), current_timestamp) <= current_timestamp',
'                        )',
'                        or',
'                        (',
'                            ow.pdrs = ''WEEKLY''',
'                            and',
'                            nvl((select max(created) + 6.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, ow.email) > 0), current_timestamp) <= current_timestamp',
'                        )',
'                        or',
'                        (',
'                            ow.pdrs = ''DAILY''',
'                            and',
'                            nvl((select max(created) + .9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, ow.email) > 0), current_timestamp) <= current_timestamp',
'                        )',
'                    )',
'            order by 1 asc',
'        )',
'        loop',
'            --Init local variables',
'            l_subject       := null;',
'            l_body_html     := null;',
'            -- Assign local variables',
'            l_subject       := c_pd_subject;',
'            l_body_html     := get_td_body_content(',
'                                    p_user_email => c1.to_address,',
'                                    p_app_id     => p_app_id,',
'                                    p_subject    => l_subject,',
'                                    p_email_type => l_email_type',
'                                );',
'            -- Send email',
'            apex_mail.send(',
'                p_to        => c1.to_address,',
'                p_from      => c1.to_address,',
'                p_body      => l_body,',
'                p_body_html => ''<html><body>'' || l_body_html || ''</body></html>'',',
'                p_subj      => l_subject,',
'                p_cc        => null,',
'                p_bcc       => null,',
'                p_replyto   => null);',
'            log_sent_email( p_email_to => c1.to_address, p_email_from => c1.to_address, p_body_size => 26 + length(l_body_html),',
'                p_type => l_email_type );',
'        end loop; -- end c1 action item owners',
'        apex_mail.push_queue;',
'    end send_past_due_emails;',
'    procedure send_upcoming_emails',
'    (',
'        p_app_id     in number,',
'        p_user_email in varchar2 default null,',
'        p_method     in varchar2 default ''JOB''',
'    )',
'    is',
'        l_subject       varchar2(500);',
'        l_body          clob := '' '';',
'        l_body_html     clob;',
'        l_email_type    varchar2(30) := ''UPCOMING'';',
'    begin',
'        set_apex_workspace(p_app_id => p_app_id);',
'        set_apex_session( p_app_id => p_app_id, p_username => get_username_from_email(p_email => p_user_email) );',
'        if get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Email Upcoming Deliverables'') = ''EXCLUDE'' then',
'            return;',
'        elsif p_method = ''JOB'' and not is_workday then',
'            return;',
'        end if;',
'        -- Get all pertinent email addresses that need an email',
'        for c1 in',
'        (',
'            with ow as (',
'                select a.id action_item_id,',
'                    null milestone_id,',
'                    lower(a.ai_owner) as email,',
'                    nvl(u.upcoming_reminders_freq,''UNSET'') as urs',
'                from eba_proj_status_ais$ unpivot exclude nulls',
'                    ( ai_owner for action_owner_no in ( action_owner_01 as 1,',
'                                                        action_owner_02 as 2,',
'                                                        action_owner_03 as 3,',
'                                                        action_owner_04 as 4',
'                                                    )',
'                    ) a, eba_proj_status_users u',
'                where a.owner_role_id is null',
'                  and upper(a.ai_owner) = u.username',
'                  and u.access_level_id > 0',
'                union all',
'                select a.id action_item_id,',
'                       null milestone_id,',
'                       lower(nvl(u.email_address,u.username)) email,',
'                       nvl(u.upcoming_reminders_freq,''UNSET'') as urs',
'                  from eba_proj_status_ais$ a,',
'                       eba_proj_user_ref rf,',
'                       eba_proj_status_users u',
'                 where a.owner_role_id is not null',
'                   and rf.role_id = a.owner_role_id',
'                   and rf.project_id = a.project_id',
'                   and rf.user_id = u.id',
'                   and u.access_level_id > 0',
'                -- Milestones',
'                union all',
'                select null action_item_id,',
'                       m.id milestone_id,',
'                       lower(',
'                           substr(m.milestone_owner, 1,',
'                               case when instr(m.milestone_owner, '','') > 0 then',
'                                    instr(m.milestone_owner, '','') - 1',
'                                else length(m.milestone_owner) end )) email,',
'                       nvl(u.upcoming_reminders_freq,''UNSET'') as urs',
'                  from eba_proj_status_ms$ m, eba_proj_status_users u',
'                 where m.owner_role_id is null',
'                   and upper(substr(m.milestone_owner, 1,',
'                            case when instr(m.milestone_owner, '','') > 0 then',
'                                    instr(m.milestone_owner, '','') - 1',
'                                else length(m.milestone_owner) end )) = u.username',
'                   and u.access_level_id > 0',
'                union all',
'                select null action_item_id,',
'                    m.id milestone_id,',
'                    lower(nvl(u.email_address,u.username)) email,',
'                    nvl(u.upcoming_reminders_freq,''UNSET'') as urs',
'                from eba_proj_status_ms$ m,',
'                    eba_proj_user_ref rf,',
'                    eba_proj_status_users u',
'                where m.owner_role_id is not null',
'                    and rf.role_id = m.owner_role_id',
'                    and rf.project_id = m.project_id',
'                    and rf.user_id = u.id',
'                    and u.access_level_id > 0',
'            )',
'            select distinct ow.email to_address',
'            from eba_proj_status_ais$ a,',
'                eba_proj_status$ p,',
'                eba_proj_status_codes s,',
'                ow',
'            where a.id = ow.action_item_id',
'                and p.id = a.project_id',
'                and p.project_status = s.id (+)',
'                and p.is_deleted_yn = ''N''',
'                and p.project_status not in (select id from eba_proj_status_codes where is_closed_status = ''Y'')',
'                and s.is_closed_status != ''Y''',
'                and a.action_status = ''Open''',
'                and a.is_deleted_yn = ''N''',
'                and (',
'                        p_user_email is null',
'                        or',
'                        lower(ow.email) = lower(p_user_email)',
'                    )',
'                and ow.email like ''%@%''',
'                and a.due_date between sysdate and sysdate + 7',
'                and ow.urs not in (''NEVER'',''UNSET'')',
'                and (',
'                        p_method != ''JOB''',
'                        or',
'                        (',
'                            ow.urs = ''QUARTERLY''',
'                            and',
'                            nvl((select max(created) + 89.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, lower(ow.email)) > 0), current_timestamp) <= current_timestamp',
'                        )',
'                        or',
'                        (',
'                            ow.urs = ''MONTHLY''',
'                            and',
'                            nvl((select max(created) + 29.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, lower(ow.email)) > 0), current_timestamp) <= current_timestamp',
'                        )',
'                        or',
'                        (',
'                            ow.urs = ''BIMONTHLY''',
'                            and',
'                            nvl((select max(created) + 14.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, lower(ow.email)) > 0), current_timestamp) <= current_timestamp',
'                        )',
'                        or',
'                        (',
'                            ow.urs = ''WEEKLY''',
'                            and',
'                            nvl((select max(created) + 6.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, lower(ow.email)) > 0), current_timestamp) <= current_timestamp',
'                        )',
'                        or',
'                        (',
'                            ow.urs = ''DAILY''',
'                            and',
'                            nvl((select max(created) + .9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, lower(ow.email)) > 0), current_timestamp) <= current_timestamp',
'                        )',
'                    )',
'            union',
'            select ow.email to_address',
'            from eba_proj_status_ms$ m,',
'                eba_proj_status$ p,',
'                eba_proj_status_codes s,',
'                ow',
'            where m.id = ow.milestone_id',
'                and p.id = m.project_id',
'                and p.project_status = s.id (+)',
'                and p.project_status not in (select id from eba_proj_status_codes where is_closed_status = ''Y'')',
'                and p.is_deleted_yn = ''N''',
'                and s.is_closed_status != ''Y''',
'                and m.milestone_status = ''Open''',
'                and m.is_deleted_yn = ''N''',
'                and ( p_user_email is null',
'                    or lower(ow.email) = lower(p_user_email))',
'                and ow.email like ''%@%''',
'                and m.milestone_date between sysdate and sysdate + 7',
'                and ow.urs not in (''NEVER'',''UNSET'')',
'                and (',
'                        p_method != ''JOB''',
'                        or',
'                        (',
'                            ow.urs = ''QUARTERLY''',
'                            and',
'                            nvl((select max(created) + 89.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, lower(ow.email)) > 0), current_timestamp) <= current_timestamp',
'                        )',
'                        or',
'                        (',
'                            ow.urs = ''MONTHLY''',
'                            and',
'                            nvl((select max(created) + 29.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, lower(ow.email)) > 0), current_timestamp) <= current_timestamp',
'                        )',
'                        or',
'                        (',
'                            ow.urs = ''BIMONTHLY''',
'                            and',
'                            nvl((select max(created) + 14.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, lower(ow.email)) > 0), current_timestamp) <= current_timestamp',
'                        )',
'                        or',
'                        (',
'                            ow.urs = ''WEEKLY''',
'                            and',
'                            nvl((select max(created) + 6.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, lower(ow.email)) > 0), current_timestamp) <= current_timestamp',
'                        )',
'                        or',
'                        (',
'                            ow.urs = ''DAILY''',
'                            and',
'                            nvl((select max(created) + .9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, lower(ow.email)) > 0), current_timestamp) <= current_timestamp',
'                        )',
'                    )',
'            order by 1 asc',
'        )',
'        loop',
'            --Init local variables',
'            l_subject       := null;',
'            l_body_html     := null;',
'            -- Assign local variables',
'            l_subject       := c_uc_subject;',
'            l_body_html     := get_td_body_content(',
'                p_user_email => c1.to_address,',
'                p_app_id     => p_app_id,',
'                p_subject    => l_subject,',
'                p_email_type => l_email_type',
'            );',
'            -- Send email',
'            apex_mail.send(',
'                p_to        => c1.to_address,',
'                p_from      => c1.to_address,',
'                p_body      => l_body,',
'                p_body_html => ''<html><body>'' || l_body_html || ''</body></html>'',',
'                p_subj      => l_subject,',
'                p_cc        => null,',
'                p_bcc       => null,',
'                p_replyto   => null);',
'            log_sent_email( p_email_to => c1.to_address, p_email_from => c1.to_address, p_body_size => 26 + length(l_body_html),',
'                p_type => l_email_type );',
'        end loop; -- end c1 action item owners',
'        apex_mail.push_queue;',
'    end send_upcoming_emails;',
'    procedure send_summary_emails',
'    (',
'        p_app_id     in number,',
'        p_project_id in number   default null,',
'        p_method     in varchar2 default ''JOB''',
'    )',
'    is',
'        l_subject       varchar2(500);',
'        l_body          clob := '' '';',
'        l_body_html     clob;',
'        l_email_type    varchar2(30) := ''PROJECT_SUMMARY'';',
'    begin',
'        set_apex_workspace(p_app_id => p_app_id);',
'        if get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Email Project Details'') = ''EXCLUDE'' then',
'            return;',
'        elsif p_method = ''JOB'' and not is_workday then',
'            return;',
'        end if;',
'        -- Get all pertinent project info and email addresses',
'        for c1 in',
'        (',
'            select',
'                p.id as project_id,',
'                u.username,',
'                p.project as project_name,',
'                case when instr(u.username,''@'') > 0 then lower(u.username) else lower(u.email_address)  end as to_address,',
'                nvl(u.project_summary_fav_freq, ''UNSET'') as pss,',
'                nvl(u.project_summary_fav_scope, ''BOTH'') as pst',
'            from',
'                eba_proj_status$ p,',
'                eba_proj_status_users u',
'            where',
'                p.is_deleted_yn = ''N''',
'            and',
'                p.project_status not in (select id from eba_proj_status_codes where is_closed_status = ''Y'')',
'            and',
'                (',
'                    p.id = p_project_id',
'                    or',
'                    p_project_id is null',
'                )',
'            and (',
'                    (',
'                        nvl(u.project_summary_fav_scope, ''BOTH'') = ''ALL''',
'                        and',
'                        (',
'                            p.acl_status_level = 1 -- All Open Projects',
'                            or',
'                            (',
'                                p.acl_status_level = 3 -- All Restricted Projects that the user is a member of',
'                                and',
'                                p.id in (select rf.project_id from eba_proj_user_ref rf where rf.user_id = u.id and rf.project_id = p.id)',
'                            )',
'                        )',
'                    )',
'                    or',
'                    (',
'                        nvl(u.project_summary_fav_scope, ''BOTH'') = ''FOLLOW''',
'                        and',
'                        p.id in (select f.content_id from eba_proj_status_favorites f where upper(f.user_name) = upper(u.username) and f.content_id = p.id and f.content_type = ''PROJECT'')',
'                    )',
'                    or',
'                    (',
'                        nvl(u.project_summary_fav_scope, ''BOTH'') = ''MEMBER''',
'                        and',
'                        p.id in (select rf.project_id from eba_proj_user_ref rf where rf.user_id = u.id and rf.project_id = p.id)',
'                    )',
'                    or',
'                    (',
'                        nvl(u.project_summary_fav_scope, ''BOTH'') = ''BOTH''',
'                        and',
'                        p.id in (',
'                                 select rf.project_id as project_id from eba_proj_user_ref rf where rf.user_id = u.id and rf.project_id = p.id',
'                                 union',
'                                 select f.content_id from eba_proj_status_favorites f where upper(f.user_name) = upper(u.username) and f.content_id = p.id and f.content_type = ''PROJECT''',
'                                )',
'                    )',
'                )',
'            and',
'                (',
'                    instr(u.username,''@'') > 0',
'                    or',
'                    instr(u.email_address,''@'') > 0',
'                )',
'            and',
'                u.access_level_id > 0',
'            and',
'                nvl(u.project_summary_fav_freq, ''UNSET'') not in (''NEVER'',''UNSET'')',
'            and',
'                (',
'                    p_method != ''JOB''',
'                    or',
'                    (',
'                        nvl(u.project_summary_fav_freq, ''DAILY'') = ''QUARTERLY''',
'                        and',
'                        nvl((select max(created) + 89.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, case when instr(u.username,''@'') > 0 then lower(u.username) else u.email_address end) > 0), current_timestamp) <= current_timestamp',
'                    )',
'                    or',
'                    (',
'                        nvl(u.project_summary_fav_freq, ''DAILY'') = ''MONTHLY''',
'                        and',
'                        nvl((select max(created) + 29.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, case when instr(u.username,''@'') > 0 then lower(u.username) else u.email_address end) > 0), current_timestamp) <= current_timestamp',
'                    )',
'                    or',
'                    (',
'                        nvl(u.project_summary_fav_freq, ''DAILY'') = ''BIMONTHLY''',
'                        and',
'                        nvl((select max(created) + 14.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, case when instr(u.username,''@'') > 0 then lower(u.username) else u.email_address end) > 0), current_timestamp) <= current_timestamp',
'                    )',
'                    or',
'                    (',
'                        nvl(u.project_summary_fav_freq, ''DAILY'') = ''WEEKLY''',
'                        and',
'                        nvl((select max(created) + 6.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, case when instr(u.username,''@'') > 0 then lower(u.username) else u.email_address end) > 0), current_timestamp) <= current_timestamp',
'                    )',
'                    or',
'                    (',
'                        nvl(u.project_summary_fav_freq, ''DAILY'') = ''DAILY''',
'                        and',
'                        nvl((select max(created) + .9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, case when instr(u.username,''@'') > 0 then lower(u.username) else u.email_address end) > 0), current_timestamp) <= current_timestamp',
'                    )',
'                )',
'        )',
'        loop',
'            set_apex_session( p_app_id => p_app_id, p_username => c1.username );',
'            --Init local variables',
'            l_subject       := null;',
'            l_body_html     := null;',
'            -- Assign local variables',
'            l_subject       := replace(c_ps_subject, ''#PROJECT_NAME#'', c1.project_name);',
'            l_body_html     := get_email_body (',
'                                   p_id         => c1.project_id,',
'                                   p_app_id     => p_app_id,',
'                                   p_session    => 0,',
'                                   p_app_name   => eba_proj_fw.get_preference_value(''APPLICATION_TITLE''),',
'                                   p_email_type => ''SUMMARY'',',
'                                   p_email      => c1.to_address',
'                               );',
'            -- Send email',
'            apex_mail.send(',
'                p_to        => c1.to_address,',
'                p_from      => nvl(get_from_address(p_project_id => c1.project_id, p_role_id => replace(eba_proj_fw.get_preference_value( p_preference_name => ''PROJ_STAT_SUMM_EMAIL_FROM''), ''Preference does not exist'', 0), p_to_address => c1.to_addres'
||'s), c1.to_address),',
'                p_body      => l_body,',
'                p_body_html => ''<html><body>'' || l_body_html || ''</body></html>'',',
'                p_subj      => l_subject,',
'                p_cc        => null,',
'                p_bcc       => null,',
'                p_replyto   => null);',
'            log_sent_email( p_email_to => c1.to_address, p_email_from => c1.to_address, p_body_size => 26 + length(l_body_html),',
'                p_type => l_email_type, p_project_id => c1.project_id );',
'        end loop; -- end c1',
'        apex_mail.push_queue;',
'    end send_summary_emails;',
'    procedure send_status_emails',
'    (',
'        p_app_id     in number,',
'        p_project_id in number   default null,',
'        p_method     in varchar2 default ''JOB''',
'    )',
'    is',
'        l_subject       varchar2(500);',
'        l_body          clob := '' '';',
'        l_body_html     clob;',
'        l_email_type    varchar2(30) := ''PROJECT_STATUS'';',
'    begin',
'        set_apex_workspace(p_app_id => p_app_id);',
'        if get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Email Project Statuses'') = ''EXCLUDE'' then',
'            return;',
'        elsif p_method = ''JOB'' and not is_workday then',
'            return;',
'        end if;',
'        -- Get all pertinent project info and email addresses',
'        for c1 in',
'        (',
'            select',
'                p.id as project_id,',
'                u.username,',
'                p.project as project_name,',
'                case when instr(u.username,''@'') > 0 then lower(u.username) else lower(u.email_address) end as to_address,',
'                nvl(u.project_status_fav_freq, ''UNSET'') as pss,',
'                nvl(u.project_status_fav_scope, ''BOTH'') as pst',
'            from',
'                eba_proj_status$ p,',
'                eba_proj_status_users u',
'            where',
'                p.is_deleted_yn = ''N''',
'            and',
'                p.project_status not in (select id from eba_proj_status_codes where is_closed_status = ''Y'')',
'            and',
'                (',
'                    p.id = p_project_id',
'                    or',
'                    p_project_id is null',
'                )',
'            and (',
'                    (',
'                        nvl(u.project_status_fav_scope, ''BOTH'') = ''ALL''',
'                        and',
'                        (',
'                            p.acl_status_level = 1 -- All Open Projects',
'                            or',
'                            (',
'                                p.acl_status_level = 3 -- All Restricted Projects that the user is a member of',
'                                and',
'                                p.id in (select rf.project_id from eba_proj_user_ref rf where rf.user_id = u.id and rf.project_id = p.id)',
'                            )',
'                        )',
'                    )',
'                    or',
'                    (',
'                        nvl(u.project_status_fav_scope, ''BOTH'') = ''FOLLOW''',
'                        and',
'                        p.id in (select f.content_id from eba_proj_status_favorites f where upper(f.user_name) = upper(u.username) and f.content_id = p.id and f.content_type = ''PROJECT'')',
'                    )',
'                    or',
'                    (',
'                        nvl(u.project_status_fav_scope, ''BOTH'') = ''MEMBER''',
'                        and',
'                        p.id in (select rf.project_id from eba_proj_user_ref rf where rf.user_id = u.id and rf.project_id = p.id)',
'                    )',
'                    or',
'                    (',
'                        nvl(u.project_status_fav_scope, ''BOTH'') = ''BOTH''',
'                        and',
'                        p.id in (',
'              '))
);
null;
wwv_flow_api.component_end;
end;
/
begin
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9008156634332785
,p_default_application_id=>134
,p_default_id_offset=>172493832712964115
,p_default_owner=>'MISO'
);
wwv_flow_api.append_to_install_script(
 p_id=>wwv_flow_api.id(6086799800318538153)
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'                   select rf.project_id as project_id from eba_proj_user_ref rf where rf.user_id = u.id and rf.project_id = p.id',
'                                 union',
'                                 select f.content_id from eba_proj_status_favorites f where upper(f.user_name) = upper(u.username) and f.content_id = p.id and f.content_type = ''PROJECT''',
'                                )',
'                    )',
'                )',
'            and',
'                (',
'                    instr(u.username,''@'') > 0',
'                    or',
'                    instr(u.email_address,''@'') > 0',
'                )',
'            and',
'                u.access_level_id > 0',
'            and',
'                nvl(u.project_status_fav_freq, ''UNSET'') not in (''NEVER'',''UNSET'')',
'            and',
'                (',
'                    p_method != ''JOB''',
'                    or',
'                    (',
'                        nvl(u.project_status_fav_freq, ''DAILY'') = ''QUARTERLY''',
'                        and',
'                        nvl((select max(created) + 89.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, case when instr(u.username,''@'') > 0 then lower(u.username) else u.email_address end) > 0), current_timestamp) <= current_timestamp',
'                    )',
'                    or',
'                    (',
'                        nvl(u.project_status_fav_freq, ''DAILY'') = ''MONTHLY''',
'                        and',
'                        nvl((select max(created) + 29.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, case when instr(u.username,''@'') > 0 then lower(u.username) else u.email_address end) > 0), current_timestamp) <= current_timestamp',
'                    )',
'                    or',
'                    (',
'                        nvl(u.project_status_fav_freq, ''DAILY'') = ''BIMONTHLY''',
'                        and',
'                        nvl((select max(created) + 14.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, case when instr(u.username,''@'') > 0 then lower(u.username) else u.email_address end) > 0), current_timestamp) <= current_timestamp',
'                    )',
'                    or',
'                    (',
'                        nvl(u.project_status_fav_freq, ''DAILY'') = ''WEEKLY''',
'                        and',
'                        nvl((select max(created) + 6.9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, case when instr(u.username,''@'') > 0 then lower(u.username) else u.email_address end) > 0), current_timestamp) <= current_timestamp',
'                    )',
'                    or',
'                    (',
'                        nvl(u.project_status_fav_freq, ''DAILY'') = ''DAILY''',
'                        and',
'                        nvl((select max(created) + .9',
'                               from eba_proj_status_email_log',
'                              where email_type = l_email_type',
'                                and instr(email_to, case when instr(u.username,''@'') > 0 then lower(u.username) else u.email_address end) > 0), current_timestamp) <= current_timestamp',
'                    )',
'                )',
'        )',
'        loop',
'            set_apex_session( p_app_id => p_app_id, p_username => c1.username );',
'            --Init local variables',
'            l_subject       := null;',
'            l_body_html     := null;',
'            -- Assign local variables',
'            l_subject       := replace(c_pst_subject, ''#PROJECT_NAME#'', c1.project_name);',
'            l_body_html     := get_email_body (',
'                                   p_id         => c1.project_id,',
'                                   p_app_id     => p_app_id,',
'                                   p_session    => 0,',
'                                   p_app_name   => eba_proj_fw.get_preference_value(''APPLICATION_TITLE'') || '': Status Report '' || to_char(sysdate, ''Month fmDD, YYYY''),',
'                                   p_email_type => ''STATUS'',',
'                                   p_email      => c1.to_address',
'                               );',
'            -- Send email',
'            apex_mail.send(',
'                p_to        => c1.to_address,',
'                p_from      => nvl(get_from_address(p_project_id => c1.project_id, p_role_id => replace(eba_proj_fw.get_preference_value( p_preference_name => ''PROJ_STAT_SUMM_EMAIL_FROM''), ''Preference does not exist'', 0), p_to_address => c1.to_addres'
||'s), c1.to_address),',
'                p_body      => l_body,',
'                p_body_html => ''<html><body>'' || l_body_html || ''</body></html>'',',
'                p_subj      => l_subject,',
'                p_cc        => null,',
'                p_bcc       => null,',
'                p_replyto   => null);',
'            log_sent_email( p_email_to => c1.to_address, p_email_from => c1.to_address, p_body_size => 26 + length(l_body_html),',
'                p_type => l_email_type, p_project_id => c1.project_id );',
'        end loop; -- end c1',
'        apex_mail.push_queue;',
'    end send_status_emails;',
'    procedure send_feedback_email',
'    (',
'        p_app_id        in number,',
'        p_page_id       in number,',
'        p_submitter     in varchar2,',
'        p_feedback_type in varchar2,',
'        p_feedback      in varchar2',
'    )',
'    is',
'        l_subject       varchar2(500) := c_fb_subject;',
'        l_body          clob := '' '';',
'        l_body_html     clob;',
'        l_email_type    varchar2(30) := ''FEEDBACK_SUBMISSION'';',
'        l_from          varchar2(255);',
'    begin',
'        set_apex_session( p_app_id, p_username => p_submitter );',
'        if eba_proj_fw.get_preference_value(p_preference_name  => ''FEEDBACK_RECIPIENTS'') = ''Preference does not exist'' or',
'           get_build_option_status(p_app_id => p_app_id, p_bo_name => ''Feedback'') = ''EXCLUDE'' then',
'            return; -- No Feedback Recipients Defined or the Feedback build option has been disabled so exit',
'        end if;',
'        -- Determine Sender',
'        if instr(p_submitter,''@'') > 0 then',
'            l_from := lower(p_submitter);',
'        else',
'            for c1 in (select email_address from eba_proj_status_users where upper(username) = upper(p_submitter) and email_address is not null and instr(email_address,''@'') > 0)',
'            loop',
'                l_from := lower(c1.email_address);',
'            end loop;',
'        end if;',
'        if l_from is null then',
'            if instr(eba_proj_fw.get_preference_value(p_preference_name  => ''FEEDBACK_RECIPIENTS''),'','') > 0 then',
'                l_from := lower( substr( eba_proj_fw.get_preference_value(p_preference_name  => ''FEEDBACK_RECIPIENTS''), 1, instr(eba_proj_fw.get_preference_value(p_preference_name  => ''FEEDBACK_RECIPIENTS''),'','') - 1) );',
'            else',
'                l_from := lower( eba_proj_fw.get_preference_value(p_preference_name  => ''FEEDBACK_RECIPIENTS'') );',
'            end if;',
'        end if;',
'        -- Assign local variables',
'        l_body_html     := get_feedback_email_body (',
'                               p_app_id        => p_app_id,',
'                               p_page_id       => p_page_id,',
'                               p_submitter     => p_submitter,',
'                               p_feedback_type => p_feedback_type,',
'                               p_feedback      => p_feedback',
'                           );',
'        -- Send email',
'        apex_mail.send(',
'            p_to        => eba_proj_fw.get_preference_value(p_preference_name  => ''FEEDBACK_RECIPIENTS''),',
'            p_from      => l_from,',
'            p_body      => l_body,',
'            p_body_html => ''<html><body>'' || l_body_html || ''</body></html>'',',
'            p_subj      => l_subject,',
'            p_cc        => null,',
'            p_bcc       => null,',
'            p_replyto   => null);',
'        -- Log sent email',
'        log_sent_email(',
'            p_email_to => eba_proj_fw.get_preference_value(p_preference_name  => ''FEEDBACK_RECIPIENTS''),',
'            p_email_from => l_from,',
'            p_body_size => 26 + length(l_body_html),',
'            p_type => l_email_type);',
'        apex_mail.push_queue;',
'    end send_feedback_email;',
'end eba_proj_stat_email;',
'/',
'show errors'))
);
null;
wwv_flow_api.component_end;
end;
/
