prompt --application/deployment/install/install_triggers
begin
--   Manifest
--     INSTALL: INSTALL-triggers
--   Manifest End
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9008156634332785
,p_default_application_id=>134
,p_default_id_offset=>172493832712964115
,p_default_owner=>'MISO'
);
wwv_flow_api.create_install_script(
 p_id=>wwv_flow_api.id(4321801457844373064)
,p_install_id=>wwv_flow_api.id(9012014618759672631)
,p_name=>'triggers'
,p_sequence=>800
,p_script_type=>'INSTALL'
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'create or replace trigger  bi_eba_proj_color_codes',
'    before insert or update on eba_proj_color_codes',
'    for each row',
'begin',
'    :new.color_name := upper(:new.color_name);',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'    end if;',
'end;',
'/',
'',
'',
'create or replace trigger bi_eba_proj_preferences',
'    before insert or update on eba_proj_preferences',
'    for each row',
'begin',
'    if :new.ID is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.updated_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'    end if;',
'end;',
'/',
'',
'',
'',
'create or replace trigger aiu_eba_proj_status_files',
'    after insert or update on eba_proj_status_files$',
'    for each row',
'begin',
'    --',
'    -- cascade update to project',
'    --',
'    update eba_proj_status$ set updated = localtimestamp',
'    where  id = :new.project_id;',
'end;',
'/',
'',
'',
'',
'create or replace trigger bi_eba_proj_status_ai_cmnts',
'    before insert or update on eba_proj_status_ai_cmnts$',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'    end if;',
'end;',
'/',
'',
'create or replace trigger  bi_eba_proj_status_cats',
'   before insert or update on eba_proj_status_cats',
'   for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'    end if;',
'end;',
'/',
'',
'create or replace trigger  bi_eba_proj_status_codes',
'    before insert or update on eba_proj_status_codes',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'    end if;',
'end;',
'/',
'',
'',
'create or replace trigger bi_eba_proj_status',
'    before insert or update on eba_proj_status$',
'    for each row',
'begin',
'    if :new.tags is not null then',
'        :new.tags := eba_proj_fw.tags_cleaner(:new.tags);',
'    end if;',
'    if (inserting or updating) and nvl(dbms_lob.getlength(:new.logo_blob),0) > 51200 then',
'        raise_application_error(-20000, ''The size of the uploaded file was over 50KB. Please upload a smaller file.'');',
'    end if;',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'    end if;',
'    if :new.row_key is null then',
'        select eba_proj_fw.compress_int(eba_proj_seq.nextval) into :new.row_key from dual;',
'    end if;',
'    if :new.headline is null then',
'        :new.headline_last_updated := null;',
'    elsif :new.headline != nvl(:old.headline,''#X#X#X'') then',
'        :new.headline_last_updated := localtimestamp;',
'    end if;',
'    eba_proj_fw.tag_sync(',
'        p_new_tags      => :new.tags,',
'        p_old_tags      => :old.tags,',
'        p_content_type  => ''STATUS'',',
'        p_content_id    => :new.id );',
'end;',
'/',
'',
'create or replace trigger bi_eba_proj_status_ais ',
'    before insert or update on eba_proj_status_ais$ ',
'    for each row ',
'begin ',
'    if :new.id is null then ',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX''); ',
'    end if; ',
'    if :new.tags is not null then ',
'        :new.tags := eba_proj_fw.tags_cleaner(:new.tags); ',
'    end if;',
'    if to_char(:new.due_date, ''HH24:MI:SS'') = ''00:00:00'' then  ',
'        :new.due_date := :new.due_date + numtodsinterval(17, ''hour'');',
'    end if; ',
'    if inserting then ',
'        :new.original_due_date := :new.due_date;',
'        :new.created := localtimestamp; ',
'        :new.created_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user); ',
'        :new.row_version_number := 1; ',
'        if to_char(:new.original_due_date, ''HH24:MI:SS'') = ''00:00:00'' then',
'            :new.original_due_date := :new.due_date;',
'        end if;',
'    elsif updating then ',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1; ',
'    end if; ',
' ',
'    :new.updated := localtimestamp; ',
'    :new.updated_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user); ',
' ',
'    if :new.row_key is null then ',
'        :new.row_key := eba_proj_fw.compress_int(eba_proj_seq.nextval);',
'    end if; ',
'    eba_proj_fw.tag_sync( ',
'        p_new_tags      => :new.tags, ',
'        p_old_tags      => null, ',
'        p_content_type  => ''AI'', ',
'        p_content_id    => :new.id ); ',
'end;',
'/',
'',
'create or replace trigger bi_eba_proj_status_ai_cmnts',
'    before insert or update on eba_proj_status_ai_cmnts$',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'    end if;',
'end;',
'/',
'',
'create or replace trigger  bi_eba_proj_status_cats',
'   before insert or update on eba_proj_status_cats',
'   for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'    end if;',
'end;',
'/',
'',
'create or replace trigger  bi_eba_proj_status_codes',
'    before insert or update on eba_proj_status_codes',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'    end if;',
'end;',
'/',
'',
'create or replace trigger bi_eba_proj_status_files',
'    before insert or update on eba_proj_status_files$',
'    for each row',
'begin',
'    if (inserting or updating) and nvl(dbms_lob.getlength(:new.file_blob),0) > 104857600 then',
'        raise_application_error(-20000, ''The size of the uploaded file was over 100MB. Please upload a smaller file.'');',
'    end if;',
'    if :new.tags is not null then',
'        :new.tags := eba_proj_fw.tags_cleaner(:new.tags);',
'    end if;',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'    end if;',
'        eba_proj_fw.tag_sync(',
'            p_new_tags      => :new.tags,',
'            p_old_tags      => :old.tags,',
'            p_content_type  => ''FILE'',',
'            p_content_id    => :new.id );',
'end;',
'/',
'',
'create or replace trigger  bi_eba_proj_status_links',
'    before insert or update on eba_proj_status_links$',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if :new.tags is not null then',
'        :new.tags := eba_proj_fw.tags_cleaner(:new.tags);',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'    end if;',
'    eba_proj_fw.tag_sync(',
'        p_new_tags      => :new.tags,',
'        p_old_tags      => :old.tags,',
'        p_content_type  => ''LINK'',',
'        p_content_id    => :new.id );',
'end;',
'/',
'',
'create or replace trigger  bi_eba_proj_status_ms',
'    before insert or update on eba_proj_status_ms$',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if :new.tags is not null then',
'        :new.tags := eba_proj_fw.tags_cleaner(:new.tags);',
'    end if;',
'    if to_char(:new.milestone_date, ''HH24:MI:SS'') = ''00:00:00'' then ',
'        :new.milestone_date := :new.milestone_date + numtodsinterval(17, ''hour'');',
'    end if;',
'    if inserting then',
'        :new.original_due_date := :new.milestone_date;',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'        :new.row_version_number := 1;',
'        if to_char(:new.original_due_date, ''HH24:MI:SS'') = ''00:00:00'' then',
'            :new.original_due_date := :new.milestone_date;',
'        end if;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    :new.updated := localtimestamp;',
'    :new.updated_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'    if :new.row_key is null then',
'        select eba_proj_fw.compress_int(eba_proj_seq.nextval) into :new.row_key from dual;',
'    end if;',
'    eba_proj_fw.tag_sync(',
'        p_new_tags      => :new.tags,',
'        p_old_tags      => :old.tags,',
'        p_content_type  => ''MILESTONE'',',
'        p_content_id    => :new.id );',
'end;',
'/',
'',
'',
'create or replace trigger  bi_eba_proj_status_reports',
'    before insert or update on eba_proj_status_reports$',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'    end if;',
'    if :new.row_key is null then',
'        select eba_proj_fw.compress_int(eba_proj_seq.nextval) into :new.row_key from dual;',
'    end if;',
'end;',
'/',
'',
'create or replace trigger  bi_eba_proj_status_rpts ',
'    before insert or update on eba_proj_status_rpts$ ',
'    for each row ',
'begin ',
'    if :new.id is null then ',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX''); ',
'    end if; ',
'    if inserting then ',
'        :new.created := localtimestamp; ',
'        :new.created_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user); ',
'        :new.row_version_number := 1; ',
'    elsif updating then ',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1; ',
'    end if; ',
'    if inserting or updating then ',
'        :new.updated := localtimestamp; ',
'        :new.updated_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user); ',
'    end if; ',
'    if :new.row_key is null then ',
'        select eba_proj_fw.compress_int(eba_proj_seq.nextval) into :new.row_key from dual; ',
'    end if; ',
'    if :new.update_date is null then ',
'        :new.update_date := localtimestamp; ',
'    end if; ',
'    if :new.update_owner is null then ',
'        :new.update_owner := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user); ',
'    end if; ',
'    :new.update_owner := lower(:new.update_owner); ',
'end; ',
'/',
'',
'create or replace trigger bi_eba_proj_status_searches',
'   before insert or update on eba_proj_status_searches',
'   for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.search_date := localtimestamp;',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'end;',
'/',
'',
'create or replace trigger bi_eba_proj_status_updates',
'    before insert or update on eba_proj_status_updates$',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if :new.tags is not null then',
'        :new.tags := eba_proj_fw.tags_cleaner(:new.tags);',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    :new.updated := localtimestamp;',
'    :new.updated_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'    if :new.row_key is null then',
'        :new.row_key := eba_proj_fw.compress_int(eba_proj_seq.nextval);',
'    end if;',
'    if :new.update_date is null then',
'        :new.update_date := localtimestamp;',
'    end if;',
'    if :new.update_owner is null then',
'        :new.update_owner := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'    end if;',
'',
'    :new.update_owner := lower(:new.update_owner);',
'    :new.upper_update_owner := upper(:new.update_owner);',
'    :new.formatted_update := eba_proj_fw.save_formatted_status_update( :new.status_update );',
'',
'    eba_proj_fw.tag_sync(',
'        p_new_tags      => :new.tags,',
'        p_old_tags      => :old.tags,',
'        p_content_type  => ''UPDATES'',',
'        p_content_id    => :new.id );',
'end;',
'/',
'',
'create or replace trigger bi_eba_proj_status_upd_classes',
'    before insert or update on eba_proj_status_upd_classes',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.updated_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'    end if;',
'end;',
'/',
'',
'',
'create or replace trigger bi_eba_proj_tags',
'    before insert or update on eba_proj_tags$',
'    for each row',
'begin',
'    :new.tag := upper(:new.tag);',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(apex_application.g_user,user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(apex_application.g_user,user);',
'    end if;',
'end;',
'/',
'',
'create or replace trigger  bi_eba_proj_stat_rpt_proj_upd',
'    before insert or update on eba_proj_status_rpt_proj_upd$',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.updated_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(sys_context(''APEX$SESSION'',''APP_USER''),user);',
'    end if;',
'end;',
'/',
'create or replace trigger bd_proj_status_updates',
'    before delete on eba_proj_status_updates$',
'    for each row',
'begin',
'    eba_proj_fw.tag_sync(',
'        p_new_tags      => null,',
'        p_old_tags      => :old.tags,',
'        p_content_type  => ''UPDATES'',',
'        p_content_id    => :old.id );',
'end;',
'/',
''))
);
wwv_flow_api.component_end;
end;
/
