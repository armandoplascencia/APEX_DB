prompt --application/deployment/install/upgrade_eba_proj_fw_package_body
begin
--   Manifest
--     INSTALL: UPGRADE-eba_proj_fw Package Body
--   Manifest End
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9008156634332785
,p_default_application_id=>134
,p_default_id_offset=>172493832712964115
,p_default_owner=>'MISO'
);
wwv_flow_api.create_install_script(
 p_id=>wwv_flow_api.id(1268428541162448112)
,p_install_id=>wwv_flow_api.id(9012014618759672631)
,p_name=>'eba_proj_fw Package Body'
,p_sequence=>1010
,p_script_type=>'UPGRADE'
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'create or replace package body eba_proj_fw as',
'',
'    function conv_txt_html (',
'        p_txt_message in varchar2 )',
'        return varchar2',
'    is',
'        l_html_message   varchar2(32767) default p_txt_message;',
'        l_temp_url varchar2(32767) := null;',
'        l_length number;',
'    begin',
'        l_html_message := replace(l_html_message, chr(10), ''<br />'');',
'        l_html_message := replace(l_html_message, chr(13), null);',
'        return l_html_message;',
'    end conv_txt_html;',
'',
'    function conv_urls_links ( p_string in varchar2 )',
'        return varchar2',
'    is',
'        l_string   varchar2(32767) default p_string;',
'        l_endofUrl varchar2(4000) default chr(10) || chr(13) || chr(9) || '' )<>'';',
'        l_url         varchar2(4000);',
'        l_current_pos number := 1;',
'        n             number := 1;',
'        m             number := 1;',
'        p             number := 1;',
'    begin',
'        l_string := p_string || '' '';',
'        for i in 1 .. 1000 loop',
'            n := instr( lower(l_string), ''http://'', l_current_pos );',
'            m := instr( lower(l_string), ''https://'', l_current_pos );',
'            p := instr( lower(l_string), ''ftp://'', l_current_pos   );',
'            -- set n to position of first link',
'            if m > 0 and (n = 0 or m < n) and (p = 0 or m < p) then',
'               n := m;',
'            elsif p > 0 and (n = 0 or p < n) then',
'               n := p;',
'            end if;',
'            exit when n = 0 or length(l_string) > 32000;',
'            for j in 0 .. length( l_string ) - n loop',
'                if ( instr( l_endofUrl, substr( l_string, n+j, 1 ) ) > 0 ) then',
'                   l_url := rtrim( substr( l_string, n, j ), ''.''||chr(32)||chr(10) );',
'                   l_url := ''<a href="'' || l_url || ''">'' || l_url || ''</a>'';',
'                   l_string := substr( l_string, 1, n-1 ) || l_url || substr( l_string, n+j );',
'                   l_current_pos := n + length(l_url);',
'                   exit;',
'                end if;',
'            end loop;',
'        end loop;',
'        return replace(l_string,chr(10),''<br>'');',
'    end conv_urls_links;',
'',
'    function save_formatted_status_update (',
'        p_status_update in clob',
'    ) return clob is',
'        l_string clob;',
'        l_endofUrl    varchar2(10) := chr(10) || chr(13) || chr(9) || '' )<>'';',
'        l_url         varchar2(4000);',
'        l_current_pos number := 1;',
'        n             number := 1;',
'        m             number := 1;',
'        p             number := 1;',
'    begin',
'        if length( p_status_update ) > 500 then',
'            l_string := regexp_replace( p_status_update,',
'                                        ''(\W)'',         -- Look for a non-word character.',
'                                        ''\1##BREAK##'',  -- Insert the break tag after the found point.',
'                                        500,            -- Start at character 500.',
'                                        1               -- Only replace the first time.',
'                                    );',
'        else',
'            l_string := p_status_update;',
'        end if;',
'',
'        l_string := apex_escape.html( l_string ) || '' '';',
'        for i in 1 .. 1000 loop',
'            n := instr( lower(l_string), ''http:&#x2f;&#x2f;'', l_current_pos );',
'            m := instr( lower(l_string), ''https:&#x2f;&#x2f;'', l_current_pos );',
'            p := instr( lower(l_string), ''ftp:&#x2f;&#x2f;'', l_current_pos   );',
'',
'            -- set n to position of first link',
'            if m > 0 and (n = 0 or m < n) and (p = 0 or m < p) then',
'                n := m;',
'            elsif p > 0 and (n = 0 or p < n) then',
'                n := p;',
'            end if;',
'',
'            exit when n = 0 or length(l_string) > 32000;',
'            for j in 0 .. length( l_string ) - n loop',
'                if ( instr( l_endofUrl, substr( l_string, n+j, 1 ) ) > 0 )',
'                        or substr( l_string, n+j, 9 ) = ''##BREAK##'' then',
'                    l_url := rtrim( substr( l_string, n, j ), ''.''||chr(32)||chr(10) );',
'                    if length(l_url) > 100 then',
'                        l_url := ''<a href="'' || l_url || ''" target="_blank">''',
'                            || substr(l_url,0,60)||''...''||substr(l_url,-30,30) || ''</a>'';',
'                    else',
'                        l_url := ''<a href="'' || l_url || ''" target="_blank">'' || l_url || ''</a>'';',
'                    end if;',
'                    l_string := substr( l_string, 1, n-1 ) || l_url || substr( l_string, n+j );',
'                    l_current_pos := n + length(l_url);',
'                    exit;',
'                end if;',
'            end loop;',
'        end loop;',
'',
'        return replace(l_string,chr(10),''<br>'');',
'    end save_formatted_status_update;',
'',
'    function format_status_report',
'    (',
'        p_string         in clob,',
'        p_shorten_url    in varchar2,',
'        p_app_id         in number,',
'        p_session        in number,',
'        p_project_id     in number,',
'        p_show_all       in varchar2 default ''N'',',
'        p_max_length     in number default 2500,',
'        p_status_rpt_id  in number default null',
'    ) return varchar2',
'    is',
'        l_char_limit  number := nvl(p_max_length,2500) - 200;',
'        l_string      varchar2(32767);',
'        l_endofUrl    varchar2(4000) default chr(10) || chr(13) || chr(9) || '' )<>'';',
'        l_url         varchar2(4000);',
'        l_more_url    varchar2(4000) := ''<a href="f?p=''||p_app_id||'':120:''||p_session||',
'                                        ''::NO:120:LAST_VIEW,P200_ID,P120_STATUS_REPORT_ID:10,''||',
'                                        p_project_id||'',''||p_status_rpt_id||''">More</a>'';',
'        l_current_pos number := 1;',
'        n             number := 1;',
'        m             number := 1;',
'        p             number := 1;',
'    begin',
'        --',
'        -- TODO:',
'        -- Replace this call to apex_escape with a different escaping function',
'        -- since all current apex_escape functions only work with varchar2 variables (4k strings)',
'        -- If this function is called with a p_max_length value of 4000 (or more)',
'        -- it will always generate a plsql numeric or value error trying to do the',
'        -- l_string assignment of the apex_escape.html_whitelist() call below',
'        --',
'        --/*',
'        l_string := apex_escape.html_whitelist(',
'                        p_html           => replace(dbms_lob.substr( p_string, p_max_length, 1 ), chr(10), ''<br>''),',
'                        p_whitelist_tags => ''<br>,<p>,</p>,<ul>,</ul>,<ol>,</ol>,<a>,</a>,<li>,</li>,<b>,</b>,<strong>,</strong>,<h1>,</h1>,<h2>,</h2>,<h3>,</h3>,<h4>,</h4>,<h5>,</h5>,<h6>,</h6>''',
'                    ) || '' '';',
'        --*/',
'        --l_string := replace(dbms_lob.substr( p_string, p_max_length, 1 ), chr(10), ''<br>'');',
'        for i in 1 .. 1000',
'        loop',
'            n := instr( lower(l_string), ''http:&#x2f;&#x2f;'', l_current_pos );',
'            m := instr( lower(l_string), ''https:&#x2f;&#x2f;'', l_current_pos );',
'            p := instr( lower(l_string), ''ftp:&#x2f;&#x2f;'', l_current_pos   );',
'            -- set n to position of first link',
'            if m > 0 and (n = 0 or m < n) and (p = 0 or m < p) then',
'               n := m;',
'            elsif p > 0 and (n = 0 or p < n) then',
'               n := p;',
'            end if;',
'            exit when n = 0 or length(l_string) > 32000;',
'            for j in 0 .. length( l_string ) - n',
'            loop',
'                if ( instr( l_endofUrl, substr( l_string, n+j, 1 ) ) > 0 ) then',
'                    l_url := rtrim( substr( l_string, n, j ), ''.''||chr(32)||chr(10) );',
'                    if p_shorten_url = ''Y'' and length(l_url) > 100 then',
'                        l_url := ''<a href="'' || l_url || ''" target="_blank">''',
'                                 || substr(l_url,0,60)||''...''||substr(l_url,-30,30) || ''</a>'';',
'                    else',
'                        l_url := ''<a href="'' || l_url || ''" target="_blank">'' || l_url || ''</a>'';',
'                    end if;',
'                    l_string := substr( l_string, 1, n-1 ) || l_url || substr( l_string, n+j );',
'                    l_current_pos := n + length(l_url);',
'                    exit;',
'                end if;',
'            end loop;',
'        end loop;',
'        if length(l_string) > l_char_limit and p_show_all = ''N'' then',
'            l_string := substr(l_string, 1, l_char_limit) || ''... '' || l_more_url;',
'        end if;',
'        return l_string;',
'    end format_status_report;',
'',
'    function tags_cleaner (',
'        p_tags  in varchar2,',
'        p_case  in varchar2 default ''U'' )',
'        return varchar2',
'    is',
'        type tags is table of varchar2(255) index by varchar2(255);',
'        l_tags_a        tags;',
'        l_tag           varchar2(255);',
'        l_tags          apex_application_global.vc_arr2;',
'        l_tags_string   varchar2(32767);',
'        i               integer;',
'    begin',
'        l_tags := apex_util.string_to_table(p_tags,'','');',
'        for i in 1..l_tags.count loop',
'            --remove all whitespace, including tabs, spaces, line feeds and carraige returns with a single space',
'            l_tag := substr(trim(regexp_replace(l_tags(i),''[[:space:]]{1,}'','' '')),1,255);',
'            if l_tag is not null and l_tag != '' '' then',
'                if p_case = ''U'' then',
'                    l_tag := upper(l_tag);',
'                elsif p_case = ''L'' then',
'                    l_tag := lower(l_tag);',
'                end if;',
'                --add it to the associative array, if it is a duplicate, it will just be replaced',
'                l_tags_a(l_tag) := l_tag;',
'            end if;',
'        end loop;',
'        l_tag := null;',
'        l_tag := l_tags_a.first;',
'        while l_tag is not null loop',
'            l_tags_string := l_tags_string||l_tag;',
'            if l_tag != l_tags_a.last then',
'                l_tags_string := l_tags_string || '', '';',
'            end if;',
'            l_tag := l_tags_a.next(l_tag);',
'        end loop;',
'        return substr(l_tags_string, 1, 4000);',
'    end tags_cleaner;',
'',
'    procedure tag_sync (',
'        p_new_tags          in varchar2,',
'        p_old_tags          in varchar2,',
'        p_content_type      in varchar2,',
'        p_content_id        in number )',
'    as',
'        type tags is table of varchar2(255) index by varchar2(255);',
'        l_new_tags      apex_application_global.vc_arr2;',
'        l_old_tags      apex_application_global.vc_arr2;',
'        l_dummy_tag     varchar2(255);',
'        i               integer;',
'    begin',
'        l_old_tags := apex_util.string_to_table(p_old_tags,'', '');',
'        l_new_tags := apex_util.string_to_table(p_new_tags,'', '');',
'        if l_old_tags.count > 0 then --do deletes',
'            for i in 1..l_old_tags.count loop',
'                    delete from eba_proj_tags$',
'                    where content_id = p_content_id',
'                        and tag = l_old_tags(i);',
'            end loop;',
'        end if;',
'',
'        if l_new_tags.count > 0 then --do deletes',
'            --do the inserts',
'            for i in 1..l_new_tags.count loop',
'                merge into eba_proj_tags$ dest',
'                using ( select p_content_id content_id,',
'                            p_content_type content_type,',
'                            l_new_tags(i) tag',
'                        from dual ) src',
'                on ( dest.content_id = src.content_id',
'                    and dest.content_type = src.content_type',
'                    and dest.tag = src.tag )',
'                when not matched then',
'                    insert( content_id, content_type, tag )',
'                    values( src.content_id, src.content_type, src.tag );',
'            end loop;',
'        end if;',
'    end tag_sync;',
'',
'    function selective_escape (',
'        p_text  in varchar2,',
'        p_tags  in varchar2 default ''<h2>,</h2>,<p>,</p>,<b>,</b>,<li>,</li>,<ul>,</ul>,<br />,<i>,</i>,<h3>,</h3>''',
'        ) return varchar2',
'    is',
'        t apex_application_global.vc_arr2;',
'        x varchar2(32767) := p_text;',
'    begin',
'        t := apex_util.string_to_table(p_tags, '','');',
'        for i in 1..t.count loop',
'            x := replace(x,t(i),''Aa''||i||''aA'');',
'        end loop;',
'        x := apex_escape.html(x);',
'        for i in 1..t.count loop',
'            x := replace(x,''Aa''||i||''aA'',t(i));',
'        end loop;',
'        return x;',
'    end selective_escape;',
'',
'    function get_preference_value (',
'        p_preference_name varchar2 )',
'        return varchar2',
'    is',
'        l_preference_value varchar2(255);',
'    begin',
'        select preference_value',
'            into l_preference_value',
'        from eba_proj_preferences',
'        where preference_name = p_preference_name;',
'        return l_preference_value;',
'    exception',
'        when no_data_found then',
'            return ''Preference does not exist'';',
'    end get_preference_value;',
'',
'    procedure set_preference_value (',
'        p_preference_name  varchar2,',
'        p_preference_value varchar2 )',
'    is',
'    begin',
'        merge into eba_proj_preferences dest',
'        using ( select upper(p_preference_name) preference_name,',
'                    p_preference_value preference_value',
'                from dual ) src',
'        on ( upper(dest.preference_name) = src.preference_name )',
'        when matched then',
'            update set dest.preference_value = src.preference_value',
'        when not matched then',
'            insert (dest.preference_name, dest.preference_value)',
'            values (src.preference_name, src.preference_value);',
'    end set_preference_value;',
'',
'    function compress_int (',
'        n in integer )',
'        return varchar2',
'    as',
'        ret varchar2(30);',
'        quotient integer;',
'        remainder integer;',
'        digit char(1);',
'    begin',
'        ret := '''';',
'        quotient := n;',
'        while quotient > 0',
'        loop',
'            remainder := mod(quotient, 10 + 26);',
'            quotient := floor(quotient  / (10 + 26));',
'            if remainder < 26 then',
'                digit := chr(ascii(''A'') + remainder);',
'            else',
'                digit := chr(ascii(''0'') + remainder - 26);',
'            end if;',
'            ret := digit || ret;',
'        end loop ;',
'        if length(ret) < 5 then',
'            ret := lpad(ret, 4, ''A'');',
'        end if ;',
'        return upper(ret);',
'    end compress_int;',
'',
'    procedure add_error_log (',
'        p_error in apex_error.t_error )',
'    is',
'    pragma autonomous_transaction;',
'    begin',
'        -- Remove old errors',
'        delete from eba_proj_errors where err_time <= localtimestamp - 21;',
'        -- Log the error.',
'        insert into eba_proj_errors (',
'            app_id,',
'            app_page_id,',
'            app_user,',
'            user_agent,',
'            ip_address,',
'            ip_address2,',
'            message,',
'            page_item_name,',
'            region_id,',
'            column_alias,',
'            row_num,',
'            apex_error_code,',
'            ora_sqlcode,',
'            ora_sqlerrm,',
'            error_backtrace )',
'        select v(''APP_ID''),',
'            v(''APP_PAGE_ID''),',
'            v(''APP_USER''),',
'            owa_util.get_cgi_env(''HTTP_USER_AGENT''),',
'            owa_util.get_cgi_env(''REMOTE_ADDR''),',
'            sys_context(''USERENV'', ''IP_ADDRESS''),',
'            substr(p_error.message,0,4000),',
'            p_error.page_item_name,',
'            p_error.region_id,',
'            p_error.column_alias,',
'            p_error.row_num,',
'            p_error.apex_error_code,',
'            p_error.ora_sqlcode,',
'            substr(p_error.ora_sqlerrm,0,4000),',
'            substr(p_error.error_backtrace,0,4000)',
'        from dual;',
'        commit;',
'    end add_error_log;',
'',
'    function apex_error_handling (',
'        p_error in apex_error.t_error )',
'        return apex_error.t_error_result',
'    is',
'        l_result          apex_error.t_error_result;',
'        l_constraint_name varchar2(255);',
'    begin',
'        l_result := apex_error.init_error_result (',
'                        p_error => p_error );',
'        -- If it is an internal error raised by APEX, like an invalid statement or',
'        -- code which can not be executed, the error text might contain security sensitive',
'        -- information. To avoid this security problem we can rewrite the error to',
'        -- a generic error message and log the original error message for further',
'        -- investigation by the help desk.',
'        if p_error.is_internal_error then',
'            -- mask all errors that are not common runtime errors (Access Denied',
'            -- errors raised by application / page authorization and all errors',
'            -- regarding session and session state)',
'            if not p_error.is_common_runtime_error then',
'                add_error_log( p_error );',
'                -- Change the message to the generic error message which doesn''t expose',
'                -- any sensitive information.',
'                l_result.message         := ''An unexpected internal application error has occurred.'';',
'                l_result.additional_info := null;',
'            end if;',
'        else',
'            -- Always show the error as inline error',
'            -- Note: If you have created manual tabular forms (using the package',
'            --       apex_item/htmldb_item in the SQL statement) you should still',
'            --       use "On error page" on that pages to avoid loosing entered data',
'            l_result.display_location := case',
'                                           when l_result.display_location = apex_error.c_on_error_page then apex_error.c_inline_in_notification',
'                                           else l_result.display_location',
'                                         end;',
'            -- If it''s a constraint violation like',
'            --',
'            --   -) ORA-00001: unique constraint violated',
'            --   -) ORA-02091: transaction rolled back (-> can hide a deferred constraint)',
'            --   -) ORA-02290: check constraint violated',
'            --   -) ORA-02291: integrity constraint violated - parent key not found',
'            --   -) ORA-02292: integrity constraint violated - child record found',
'            --',
'            -- we try to get a friendly error message from our constraint lookup configuration.',
'            -- If we don''t find the constraint in our lookup table we fallback to',
'            -- the original ORA error message.',
'            if p_error.ora_sqlcode in (-1, -2091, -2290, -2291, -2292) then',
'                l_constraint_name := apex_error.extract_constraint_name (',
'                                         p_error => p_error );',
'                begin',
'                    select message',
'                      into l_result.message',
'                      from eba_proj_error_lookup',
'                     where constraint_name = l_constraint_name;',
'                exception when no_data_found then null; -- not every constraint has to be in our lookup table',
'                end;',
'            end if;',
'            -- If an ORA error has been raised, for example a raise_application_error(-20xxx, ''...'')',
'            -- in a table trigger or in a PL/SQL package called by a process and we',
'            -- haven''t found the error in our lookup table, then we just want to see',
'            -- the actual error text and not the full error stack with all the ORA error numbers.',
'            if p_error.ora_sqlcode is not null and l_result.message = p_error.message then',
'                l_result.message := apex_error.get_first_ora_error_text (',
'                                        p_error => p_error );',
'            end if;',
'            -- If no associated page item/tabular form column has been set, we can use',
'            -- apex_error.auto_set_associated_item to automatically guess the affected',
'            -- error field by examine the ORA error for constraint names or column names.',
'            if l_result.page_item_name is null and l_result.column_alias is null then',
'                apex_error.auto_set_associated_item (',
'                    p_error        => p_error,',
'                    p_error_result => l_result );',
'            end if;',
'        end if;',
'        return l_result;',
'    end apex_error_handling;',
'',
'    function profile_url( p_username in varchar2 ) return varchar2 is',
'    begin',
'        for c1 in ( select id',
'                    from eba_proj_status_users',
'                    where upper(username) = upper(p_username) ) loop',
'            return apex_util.prepare_url(''f?p='' || v(''APP_ID'') || '':137:'' || v(''APP_SESSION'') || '':::137:P137_ID:'' || c1.id);',
'        end loop;',
'        return null;',
'    end profile_url;',
'',
'    function get_name_from_email_address(',
'        p_email_address in varchar2',
'    ) return varchar2',
'    is',
'        l_first_name varchar2(100);',
'        l_last_name  varchar2(100);',
'    begin',
'        for c1 in',
'        (',
'            select first_name, last_name',
'              from eba_proj_status_users',
'             where (',
'                       (',
'                           lower(username) = lower(p_email_address)',
'                           and',
'                           instr(username,''@'') > 0',
'                       )',
'                       or',
'                       (',
'                           lower(email_address) = lower(p_email_address)',
'                       )',
'                       or',
'                       (',
'                           lower(username) = lower(p_email_address)',
'                       )',
'                   )',
'               and first_name is not null',
'               and last_name is not null',
'        )',
'        loop',
'            l_first_name := c1.first_name;',
'            l_last_name  := c1.last_name;',
'        end loop;',
'        if l_first_name is not null and l_last_name is not null then',
'            return l_first_name || '' '' || l_last_name;',
'        elsif instr(p_email_address, ''@'') > 0 then',
'            return regexp_replace ( initcap( replace( substr ( p_email_address, 1, instr(p_email_address, ''@'') - 1 ), ''.'', '' '' ) ), ''\s\w+\s'', '' '' );',
'        else',
'            return lower(p_email_address);',
'        end if;',
'    end get_name_from_email_address;',
'',
'    function is_edit_authorized( p_username in varchar2,',
'                                 p_project_id in number,',
'                                 p_min_auth in number )',
'            return varchar2 is',
'    begin',
'        if eba_proj_stat_ui.get_authorization_level( p_username ) >= 4 then',
'            return ''Y'';',
'        elsif eba_proj_stat_ui.get_authorization_level( p_username ) <= 1 then',
'            return ''N'';',
'        end if;',
'        if apex_util.get_build_option_status(   p_application_id => v(''APP_ID''),',
'                                                p_build_option_name => ''Edit Closed Projects''',
'                                            ) = ''EXCLUDE'' then',
'            -- If project is closed, deny edit permissions.',
'            for c1 in ( select null',
'                        from eba_proj_status p,',
'                            eba_proj_status_codes sc',
'                        where p.id = p_project_id',
'                            and p.acl_status_level = 1',
'                            and sc.id = p.project_status',
'                            and sc.is_closed_status = ''Y''',
'                        ) loop',
'                return ''N'';',
'            end loop;',
'        end if;',
'        -- Check for appropriate level on project role.',
'        for c1 in ( -- Check for open permissions on project',
'                    select null',
'                    from eba_proj_status',
'                    where id = p_project_id',
'                        and acl_status_level = 1',
'                    union all',
'                    select null',
'                    from eba_proj_user_ref rf,',
'                        eba_proj_status_users u,',
'                        eba_proj_roles r,',
'                        eba_proj_status p,',
'                        eba_proj_status_codes sc',
'                    where rf.project_id = p_project_id',
'                        and upper(u.username) = upper(p_username)',
'                        and rf.user_id = u.id',
'                        and r.id = rf.role_id',
'                        and p.id = rf.project_id',
'                        and sc.id = p.project_status',
'                        and sc.is_closed_status = ''N''',
'                        and nvl(rf.acl_status_level,r.default_acl_status_level) >= p_min_auth',
'                ) loop',
'            return ''Y'';',
'        end loop;',
'        -- If we fall down to here, the user doesn''t meet the necessary criteria.',
'        return ''N'';',
'    end is_edit_authorized;',
'',
'    function are_ms_ai_restricted ( p_application_id in number,',
'                                    p_username in varchar2,',
'                                    p_project_id in number ) return varchar2 is',
'    begin',
'        if p_project_id is null then',
'            return ''N'';',
'        elsif eba_proj_stat_ui.get_authorization_level( p_username ) >= 4 then',
'            -- Super Admins override restrictions.',
'            return ''N'';',
'        elsif is_edit_authorized( p_username, p_project_id, 3 ) = ''Y'' then',
'            -- Admin on this project.',
'            return ''N'';',
'        elsif is_edit_authorized( p_username, p_project_id ) = ''Y'' then',
'            -- Authorized to contribute to the specific project.',
'            if apex_util.get_build_option_status(   p_application_id => p_application_id,',
'                                                    p_build_option_name => ''Restrict Changes''',
'                                                ) = ''INCLUDE'' then',
'                -- Build option enabled. Check for project lock.',
'                for c1 in ( select null',
'                            from eba_proj_status',
'                            where id = p_project_id',
'                                and restrict_ms_ai_management = ''Y'' ) loop',
'                    -- Lock found.',
'                    return ''Y'';',
'                end loop;',
'            end if;',
'            -- Build option not enabled, all contributors have access.',
'            return ''N'';',
'        else',
'            -- User is not authorized to contribute to the project.',
'            return ''Y'';',
'        end if;',
'    end are_ms_ai_restricted;',
'',
'    function template_lock_yn ( p_application_id in number,',
'                                p_username in varchar2,',
'                                p_project_id in number default null,',
'                                p_milestone_id in number default null,',
'                                p_action_item_id in number default null ) return varchar2 is',
'        l_project_id number := p_project_id;',
'        l_template_id number;',
'    begin',
'        if p_project_id is null and p_milestone_id is null and p_action_item_id is null then',
'            return ''N'';',
'        elsif eba_proj_stat_ui.get_authorization_level( p_username ) >= 4 then',
'            -- Super admin, no lock applies.',
'            return ''N'';',
'        end if;',
'        -- Get the project ID and relevant template ID (if any).',
'        for c1 in ( select p.id project_id, p.template_id',
'                    from eba_proj_status p',
'                    where p.id = p_project_id',
'                    union all',
'                    select m.project_id, (  select t.id',
'                                            from eba_proj_templates t, eba_proj_template_ms tm',
'                                            where t.id = tm.template_id',
'                                                and tm.id = m.template_id ) template_id',
'                    from eba_proj_status_ms m',
'                    where m.id = p_milestone_id',
'                    union all',
'                    select a.project_id, (  select t.id',
'                                            from eba_proj_templates t, eba_proj_template_ai ta',
'                                            where t.id = ta.template_id',
'                                                and ta.id = a.template_id ) template_id',
'                    from eba_proj_status_ais a',
'                    where a.id = p_action_item_id ) loop',
'            l_project_id := c1.project_id;',
'            l_template_id := c1.template_id;',
'        end loop;',
'        if is_edit_authorized( p_username, l_project_id ) = ''Y'' then',
'            -- Authorized to contribute to the project.',
'            if apex_util.get_build_option_status(   p_application_id => p_application_id,',
'                                                    p_build_option_name => ''Restrict Changes (Template)''',
'                                                ) = ''INCLUDE'' then',
'                -- Build option enabled. Check for template lock.',
'                for c1 in ( select t.restrict_edits_yn',
'                            from eba_proj_templates t',
'                            where t.id = l_template_id ) loop',
'                    if c1.restrict_edits_yn = ''Y'' then',
'                        return ''Y'';',
'                    end if;',
'                end loop;',
'            end if;',
'            -- Build option not enabled, or template not locked.',
'            return ''N'';',
'        end if;',
'        -- User isn''t authorized to contribute to project.',
'        return ''Y'';',
'    end template_lock_yn;',
'',
'    function get_project_rowkey ( p_project_id in number )',
'    return varchar2 is',
'        l_rowkey_pref varchar2(255) := eba_proj_fw.get_preference_value(p_preference_name => ''PROJECT_ROWKEY_OPTION'');',
'        l_retval      varchar2(255);',
'    begin',
'        if l_rowkey_pref = ''ROWKEY'' then',
'            select row_key',
'              into l_retval',
'              from eba_proj_status',
'             where id = p_project_id;',
'        elsif l_rowkey_pref = ''CODE_NAME'' then',
'            select nvl(code_name, row_key)',
'              into l_retval',
'              from eba_proj_status',
'             where id = p_project_id;',
'        elsif l_rowkey_pref = ''DO_NOT_DISPLAY'' then',
'            l_retval := null;',
'        end if;',
'        return l_retval;',
'    exception',
'        when no_data_found then',
'            l_retval := null;',
'            return l_retval;',
'    end get_project_rowkey;',
'',
'    function get_statuses',
'    (',
'        p_active_yn in varchar2 default ''Y''',
'    ) return varchar2',
'    is',
'        l_statuses varchar2(200);',
'    begin',
'        for c1 in',
'        (',
'            select',
'               distinct p.project_status',
'            from eba_proj_status p,',
'                 eba_proj_status_codes s',
'            where p.project_status = s.id(+)',
'                  and nvl(s.is_closed_status,''N'') != p_active_yn',
'            order by 1',
'        )',
'        loop',
'            l_statuses := l_statuses || c1.project_status || '':'';',
'        end loop;',
'        l_statuses := rtri'))
);
wwv_flow_api.component_end;
end;
/
begin
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9008156634332785
,p_default_application_id=>134
,p_default_id_offset=>172493832712964115
,p_default_owner=>'MISO'
);
wwv_flow_api.append_to_install_script(
 p_id=>wwv_flow_api.id(1268428541162448112)
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'm(l_statuses, '':'');',
'        return l_statuses;',
'    end get_statuses;',
'',
'    function check_url(p_url in varchar2) return boolean',
'    is',
'        l_clob clob;',
'    begin',
'        l_clob := apex_web_service.make_rest_request(p_url,''GET'');',
'        if apex_web_service.g_status_code = 200 then',
'            return true;',
'        else',
'            return false;',
'        end if;',
'    exception when others then',
'        return false;',
'    end check_url;',
'',
'end eba_proj_fw;',
'/'))
);
null;
wwv_flow_api.component_end;
end;
/
