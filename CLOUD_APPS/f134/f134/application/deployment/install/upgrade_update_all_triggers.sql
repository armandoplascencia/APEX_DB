prompt --application/deployment/install/upgrade_update_all_triggers
begin
--   Manifest
--     INSTALL: UPGRADE-Update all triggers
--   Manifest End
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9008156634332785
,p_default_application_id=>134
,p_default_id_offset=>172493832712964115
,p_default_owner=>'MISO'
);
wwv_flow_api.create_install_script(
 p_id=>wwv_flow_api.id(11140497268928551181)
,p_install_id=>wwv_flow_api.id(9012014618759672631)
,p_name=>'Update all triggers'
,p_sequence=>1040
,p_script_type=>'UPGRADE'
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'-- Update Triggers',
'create or replace trigger eba_proj_status_users_biu ',
'    before insert or update on eba_proj_status_users',
'    for each row',
'begin',
'    if (inserting or updating) and nvl(dbms_lob.getlength(:new.photo_blob),0) > 358400 then',
'        raise_application_error(-20000, ''The size of the uploaded photo was over 350KB. Please upload a smaller file.'');',
'    end if;',
'    if :new.ID is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(apex_application.g_user,user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(apex_application.g_user,user);',
'    end if;',
'    :new.username := upper(:new.username);',
'end;',
'/',
'alter trigger eba_proj_status_users_biu enable',
'/',
'',
'create or replace trigger bi_eba_proj_tags',
'    before insert or update on eba_proj_tags$',
'    for each row',
'begin',
'    :new.tag := upper(:new.tag);',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(apex_application.g_user,user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(apex_application.g_user,user);',
'    end if;',
'end;',
'/',
'alter trigger bi_eba_proj_tags enable',
'/',
'',
'create or replace trigger bi_eba_proj_status_files',
'    before insert or update on eba_proj_status_files$',
'    for each row',
'begin',
'    if (inserting or updating) and nvl(dbms_lob.getlength(:new.file_blob),0) > 104857600 then',
'        raise_application_error(-20000, ''The size of the uploaded file was over 100MB. Please upload a smaller file.'');',
'    end if;',
'    if :new.tags is not null then',
'        :new.tags := eba_proj_fw.tags_cleaner(:new.tags);',
'    end if;',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(wwv_flow.g_user,user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(wwv_flow.g_user,user);',
'    end if;',
'        eba_proj_fw.tag_sync(',
'            p_new_tags      => :new.tags,',
'            p_old_tags      => :old.tags,',
'            p_content_type  => ''FILE'',',
'            p_content_id    => :new.id );',
'end;',
'/',
'alter trigger bi_eba_proj_status_files enable',
'/',
'',
'create or replace trigger bd_proj_status_files',
'    before delete on eba_proj_status_files$',
'    for each row',
'begin',
'    eba_proj_fw.tag_sync(',
'        p_new_tags      => null,',
'        p_old_tags      => :old.tags,',
'        p_content_type  => ''FILE'',',
'        p_content_id    => :old.id );',
'end;',
'/',
'',
'create or replace trigger aiu_eba_proj_status_files',
'    after insert or update on eba_proj_status_files$',
'    for each row',
'begin',
'    --',
'    -- cascade update to project',
'    --',
'    update eba_proj_status$ set updated = localtimestamp',
'    where  id = :new.project_id;',
'end;',
'/',
'alter trigger aiu_eba_proj_status_files enable',
'/',
'',
'create or replace trigger bi_eba_proj_status_searches',
'   before insert or update on eba_proj_status_searches',
'   for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.search_date := localtimestamp;',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'end;',
'/',
'alter trigger bi_eba_proj_status_searches enable',
'/',
'',
'create or replace trigger bi_eba_proj_preferences',
'    before insert or update on eba_proj_preferences',
'    for each row',
'begin',
'    if :new.ID is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.updated_by := nvl(wwv_flow.g_user,user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(wwv_flow.g_user,user);',
'    end if;',
'end;',
'/',
'alter trigger bi_eba_proj_preferences enable',
'/',
'',
'create or replace trigger  bi_eba_proj_status_codes',
'    before insert or update on eba_proj_status_codes',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(wwv_flow.g_user,user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(wwv_flow.g_user,user);',
'    end if;',
'end;',
'/',
'alter trigger bi_eba_proj_status_codes enable',
'/',
'',
'create or replace trigger bi_eba_proj_status',
'    before insert or update on eba_proj_status$',
'    for each row',
'begin',
'    if :new.tags is not null then',
'        :new.tags := eba_proj_fw.tags_cleaner(:new.tags);',
'    end if;',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(wwv_flow.g_user,user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(wwv_flow.g_user,user);',
'    end if;',
'    if :new.row_key is null then',
'        select eba_proj_fw.compress_int(eba_proj_seq.nextval) into :new.row_key from dual;',
'    end if;',
'    if :new.headline is null then',
'        :new.headline_last_updated := null;',
'    elsif :new.headline != nvl(:old.headline,''#X#X#X'') then',
'        :new.headline_last_updated := localtimestamp;',
'    end if;',
'    eba_proj_fw.tag_sync(',
'        p_new_tags      => :new.tags,',
'        p_old_tags      => :old.tags,',
'        p_content_type  => ''STATUS'',',
'        p_content_id    => :new.id );',
'end;',
'/',
'alter trigger bi_eba_proj_status enable',
'/',
'',
'create or replace trigger bd_proj_status',
'    before delete on eba_proj_status$',
'    for each row',
'begin',
'    eba_proj_fw.tag_sync(',
'        p_new_tags      => null,',
'        p_old_tags      => :old.tags,',
'        p_content_type  => ''STATUS'',',
'        p_content_id    => :old.id );',
'end;',
'/',
'',
'create or replace trigger bi_eba_proj_status_updates',
'    before insert or update on eba_proj_status_updates$',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if :new.tags is not null then',
'        :new.tags := eba_proj_fw.tags_cleaner(:new.tags);',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(wwv_flow.g_user,user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(wwv_flow.g_user,user);',
'    end if;',
'    if :new.row_key is null then',
'        select eba_proj_fw.compress_int(eba_proj_seq.nextval) into :new.row_key from dual;',
'    end if;',
'    if :new.update_date is null then',
'        :new.update_date := localtimestamp;',
'    end if;',
'    if :new.update_owner is null then',
'        :new.update_owner := nvl(wwv_flow.g_user,user);',
'    end if;',
'    :new.update_owner := lower(:new.update_owner);',
'    :new.formatted_update := eba_proj_fw.save_formatted_status_update( :new.status_update );',
'    eba_proj_fw.tag_sync(',
'        p_new_tags      => :new.tags,',
'        p_old_tags      => :old.tags,',
'        p_content_type  => ''UPDATES'',',
'        p_content_id    => :new.id );',
'end;',
'/',
'alter trigger bi_eba_proj_status_updates enable',
'/',
'',
'create or replace trigger bd_proj_status_updates',
'    before delete on eba_proj_status_updates$',
'    for each row',
'begin',
'    eba_proj_fw.tag_sync(',
'        p_new_tags      => null,',
'        p_old_tags      => :old.tags,',
'        p_content_type  => ''UPDATES'',',
'        p_content_id    => :old.id );',
'end;',
'/',
'',
'create or replace trigger  bi_eba_proj_status_cats',
'   before insert or update on eba_proj_status_cats',
'   for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(wwv_flow.g_user,user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(wwv_flow.g_user,user);',
'    end if;',
'end;',
'/',
'alter trigger bi_eba_proj_status_cats enable',
'/',
'',
'create or replace trigger  bi_eba_proj_status_links',
'    before insert or update on eba_proj_status_links$',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if :new.tags is not null then',
'        :new.tags := eba_proj_fw.tags_cleaner(:new.tags);',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(wwv_flow.g_user,user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(wwv_flow.g_user,user);',
'    end if;',
'    eba_proj_fw.tag_sync(',
'        p_new_tags      => :new.tags,',
'        p_old_tags      => :old.tags,',
'        p_content_type  => ''LINK'',',
'        p_content_id    => :new.id );',
'end;',
'/',
'alter trigger bi_eba_proj_status_links enable',
'/',
'show errors',
'',
'create or replace trigger bd_proj_status_links',
'    before delete on eba_proj_status_links$',
'    for each row',
'begin',
'    eba_proj_fw.tag_sync(',
'        p_new_tags      => null,',
'        p_old_tags      => :old.tags,',
'        p_content_type  => ''LINK'',',
'        p_content_id    => :old.id );',
'end;',
'/',
'',
'create or replace trigger bi_eba_proj_status_upd_classes',
'    before insert or update on eba_proj_status_upd_classes',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.updated_by := nvl(wwv_flow.g_user,user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(wwv_flow.g_user,user);',
'    end if;',
'end;',
'/',
'alter trigger bi_eba_proj_status_upd_classes enable',
'/',
'',
'create or replace trigger  bi_eba_proj_status_reports',
'    before insert or update on eba_proj_status_reports$',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(wwv_flow.g_user,user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(wwv_flow.g_user,user);',
'    end if;',
'    if :new.row_key is null then',
'        select eba_proj_fw.compress_int(eba_proj_seq.nextval) into :new.row_key from dual;',
'    end if;',
'end;',
'/',
'alter trigger bi_eba_proj_status_reports enable',
'/',
'',
'create or replace trigger  bi_eba_proj_stat_rpt_proj_upd',
'    before insert or update on eba_proj_status_rpt_proj_upd$',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.updated_by := nvl(wwv_flow.g_user,user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(wwv_flow.g_user,user);',
'    end if;',
'end;',
'/',
'alter trigger bi_eba_proj_stat_rpt_proj_upd enable',
'/',
'',
'create or replace trigger bi_eba_proj_status_ais ',
'    before insert or update on eba_proj_status_ais$ ',
'    for each row ',
'begin ',
'    if :new.id is null then ',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX''); ',
'    end if; ',
'    if :new.tags is not null then ',
'        :new.tags := eba_proj_fw.tags_cleaner(:new.tags); ',
'    end if;',
'    if to_char(:new.due_date, ''HH24:MI:SS'') = ''00:00:00'' then  ',
'        :new.due_date := :new.due_date + numtodsinterval(17, ''hour'');',
'    end if; ',
'    if inserting then ',
'        :new.original_due_date := :new.due_date;',
'        :new.created := localtimestamp; ',
'        :new.created_by := nvl(wwv_flow.g_user,user); ',
'        :new.row_version_number := 1; ',
'        if to_char(:new.original_due_date, ''HH24:MI:SS'') = ''00:00:00'' then',
'            :new.original_due_date := :new.due_date;',
'        end if;',
'    elsif updating then ',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1; ',
'    end if; ',
' ',
'    :new.updated := localtimestamp; ',
'    :new.updated_by := nvl(wwv_flow.g_user,user); ',
' ',
'    if :new.row_key is null then ',
'        :new.row_key := eba_proj_fw.compress_int(eba_proj_seq.nextval);',
'    end if; ',
'    eba_proj_fw.tag_sync( ',
'        p_new_tags      => :new.tags, ',
'        p_old_tags      => null, ',
'        p_content_type  => ''AI'', ',
'        p_content_id    => :new.id ); ',
'end;',
'/',
'alter trigger bi_eba_proj_status_ais enable',
'/',
'',
'create or replace trigger bd_proj_status_ais',
'    before delete on eba_proj_status_ais$',
'    for each row',
'begin',
'    eba_proj_fw.tag_sync(',
'        p_new_tags      => null,',
'        p_old_tags      => :old.tags,',
'        p_content_type  => ''AI'',',
'        p_content_id    => :old.id );',
'end;',
'/',
'',
'create or replace trigger  bi_eba_proj_status_ms',
'    before insert or update on eba_proj_status_ms$',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if :new.tags is not null then',
'        :new.tags := eba_proj_fw.tags_cleaner(:new.tags);',
'    end if;',
'    if to_char(:new.milestone_date, ''HH24:MI:SS'') = ''00:00:00'' then ',
'        :new.milestone_date := :new.milestone_date + numtodsinterval(17, ''hour'');',
'    end if;',
'    if inserting then',
'        :new.original_due_date := :new.milestone_date;',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(wwv_flow.g_user,user);',
'        :new.row_version_number := 1;',
'        if to_char(:new.original_due_date, ''HH24:MI:SS'') = ''00:00:00'' then',
'            :new.original_due_date := :new.milestone_date;',
'        end if;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'',
'    :new.updated := localtimestamp;',
'    :new.updated_by := nvl(wwv_flow.g_user,user);',
'',
'    if :new.row_key is null then',
'        select eba_proj_fw.compress_int(eba_proj_seq.nextval) into :new.row_key from dual;',
'    end if;',
'    eba_proj_fw.tag_sync(',
'        p_new_tags      => :new.tags,',
'        p_old_tags      => :old.tags,',
'        p_content_type  => ''MILESTONE'',',
'        p_content_id    => :new.id );',
'end;',
'/',
'alter trigger bi_eba_proj_status_ms enable',
'/',
'',
'create or replace trigger bd_proj_status_ms',
'    before delete on eba_proj_status_ms$',
'    for each row',
'begin',
'    eba_proj_fw.tag_sync(',
'        p_new_tags      => null,',
'        p_old_tags      => :old.tags,',
'        p_content_type  => ''MILESTONE'',',
'        p_content_id    => :old.id );',
'end;',
'/',
'',
'create or replace trigger aiu_eba_proj_status_ms',
'    after insert or update on eba_proj_status_ms$',
'    for each row',
'    when ( not ( old.template_id is not null and new.template_id is null ))',
'begin',
'    --',
'    -- cascade update to project',
'    --',
'    update eba_proj_status$ set updated = localtimestamp',
'    where  id = :new.project_id;',
'end;',
'/',
'alter trigger aiu_eba_proj_status_ms enable',
'/',
'',
'create or replace trigger aiu_eba_proj_status_links',
'    after insert or update on eba_proj_status_links$',
'    for each row',
'begin',
'    --',
'    -- cascade update to project',
'    --',
'    update eba_proj_status$ set updated = localtimestamp',
'    where  id = :new.project_id;',
'end;',
'/',
'',
'',
'create or replace trigger aiu_eba_proj_status_ais',
'    after insert or update on eba_proj_status_ais$',
'    for each row',
'    when ( not ( old.template_id is not null and new.template_id is null ))',
'begin',
'    --',
'    -- cascade update to project',
'    --',
'    update eba_proj_status$ set updated = localtimestamp',
'    where  id = :new.project_id;',
'end;',
'/',
'',
'create or replace trigger aiu_eba_proj_status_updates',
'    after insert or update on eba_proj_status_updates$',
'    for each row',
'begin',
'    --',
'    -- cascade update to project',
'    --',
'    update eba_proj_status$ set updated = localtimestamp',
'    where  id = :new.project_id;',
'end;',
'/',
'',
'create or replace trigger biu_eba_proj_status_ais_ty',
'    before insert or update on eba_proj_status_ais_types',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(apex_application.g_user,user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(apex_application.g_user,user);',
'    end if;',
'end;',
'/',
'',
'alter trigger biu_eba_proj_status_ais_ty enable',
'/',
'',
'create or replace trigger  bi_eba_proj_status_upd_types',
'    before insert or update on eba_proj_status_update_types',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(wwv_flow.g_user,user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(wwv_flow.g_user,user);',
'    end if;',
'end;',
'/',
'alter trigger bi_eba_proj_status_upd_types enable',
'/',
'',
'create or replace trigger  bi_eba_proj_color_codes',
'    before insert or update on eba_proj_color_codes',
'    for each row',
'begin',
'    :new.color_name := upper(:new.color_name);',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(apex_application.g_user,user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(apex_application.g_user,user);',
'    end if;',
'end;',
'/',
'alter trigger bi_eba_proj_color_codes enable',
'/',
'',
'create or replace trigger bi_eba_proj_status_ai_cmnts',
'    before insert or update on eba_proj_status_ai_cmnts$',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(wwv_flow.g_user,user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(wwv_flow.g_user,user);',
'    end if;',
'end;',
'/',
'alter trigger  bi_eba_proj_status_ai_cmnts enable',
'/',
'',
'create or replace trigger biu_eba_proj_history',
'    before insert or update on eba_proj_history$',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.change_date := localtimestamp;',
'        :new.changed_by := nvl(wwv_flow.g_user,user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := :new.row_version_number + 1;',
'    end if;',
'end;',
'/',
'',
'create or replace trigger au_eba_proj_status',
'    after update on eba_proj_status$',
'    for each row',
'declare',
'    pragma autonomous_transaction;',
'    ov varchar2(4000) := null;',
'    nv varchar2(4000) := null;',
'begin',
'    -- CAT_ID (foreign key)',
'    if nvl(:old.cat_id,-999) != nvl(:new.cat_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select category val from eba_proj_status_cats t where t.id = :old.cat_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select category val from eba_proj_status_cats t where t.id = :new.cat_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS'', :new.row_key, :new.id, ''CAT_ID'', ov, nv);',
'    end if;',
'    -- PARENT_PROJECT_ID (foreign key)',
'    if nvl(:old.parent_project_id,-999) != nvl(:new.parent_project_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select row_key val from eba_proj_status$ t where t.id = :old.parent_project_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select row_key val from eba_proj_status$ t where t.id = :new.parent_project_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS'', :new.row_key, :new.id, ''PARENT_PROJECT_ID'', ov, nv);',
'    end if;',
'    -- PROJECT (default)',
'    if nvl(:old.project, ''0'') != nvl(:new.project,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT'', substr(:old.project,0,4000), substr(:new.project,0,4000) ); ',
'    end if;',
'    -- PROJECT_CUSTOMER (default)',
'    if nvl(:old.project_customer, ''0'') != nvl(:new.project_customer,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_CUSTOMER'', substr(:old.project_customer,0,4000), substr(:new.project_customer,0,4000) ); ',
'    end if;',
'    -- ACL_STATUS_LEVEL (default)',
'    if nvl(:old.acl_status_level, ''0'') != nvl(:new.acl_status_level,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''ACL_STATUS_LEVEL'', substr(:old.acl_status_level,0,4000), substr(:new.acl_status_level,0,4000) ); ',
'    end if;',
'    -- PROJECT_STATUS (foreign key)',
'    if nvl(:old.project_status,-999) != nvl(:new.project_status,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select status_short_desc val from eba_proj_status_codes t where t.id = :old.project_status) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select status_short_desc val from eba_proj_status_codes t where t.id = :new.project_status) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_STATUS'', ov, nv);',
'    end if;',
'    -- TAGS (default)',
'    if nvl(:old.tags, ''0'') != nvl(:new.tags,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''TAGS'', substr(:old.tags,0,4000), substr(:new.tags,0,4000) ); ',
'    end if;',
'    -- NEXT_MILESTONE_NAME (default)',
'    if nvl(:old.next_milestone_name, ''0'') != nvl(:new.next_milestone_name,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''NEXT_MILESTONE_NAME'', substr(:old.next_milestone_name,0,4000), substr(:new.next_milestone_name,0,4000) ); ',
'    end if;',
'    -- NEXT_MILESTONE_DATE (date/timestamp)',
'    if (:old.next_milestone_date is null and :new.next_milestone_date is not null) or ',
'        (:old.next_milestone_date is not null and :new.next_milestone_date is null) or ',
'        (trunc(:old.next_milestone_date) != trunc(:new.next_milestone_date)) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''NEXT_MILESTONE_DATE'', to_char(:old.next_milestone_date, ''DD-MON-YYYY HH24:MI:SS''), to_char(:new.next_milestone_date, ''DD-MON-YYYY HH24:MI:SS'') );',
'    end if;',
'    -- GOAL (default)',
'    if nvl(:old.goal, ''0'') != nvl(:new.goal,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''GOAL'', substr(:old.goal,0,4000), substr(:new.goal,0,4000) ); ',
'    end if;',
'    -- WHAT_IS_SUCCESS (default)',
'    if nvl(:old.what_is_success, ''0'') != nvl(:new.what_is_success,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''WHAT_IS_SUCCESS'', substr(:old.what_is_success,0,4000), substr(:new.what_is_success,0,4000) ); ',
'    end if;',
'    -- URL (default)',
'    if nvl(:old.url, ''0'') != nvl(:new.url,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''URL'', substr(:old.url,0,4000), substr(:new.url,0,4000) ); ',
'    end if;',
'    -- INCLUDE_BY_DEFAULT_YN (default)',
'    if nvl(:old.include_by_default_yn, ''0'') != nvl(:new.include_by_default_yn,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''INCLUDE_BY_DEFAULT_YN'', substr(:old.include_by_default_yn,0,4000), substr(:new.include_by_default_yn,0,4000) ); ',
'    end if;',
'    -- DESCRIPTION (default)',
'    if nvl(:old.description, ''0'') != nvl(:new.description,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''DESCRIPTION'', substr(:old.description,0,4000), substr(:new.description,0,4000) ); ',
'    end if;',
'    commit;',
'end au_eba_proj_status;',
'/',
'',
'alter trigger au_eba_proj_status enable',
'/',
'',
'create or replace trigger au_eba_proj_status_ais',
'    after update on eba_proj_status_ais$',
'    for each row',
'declare',
'    pragma autonomous_transaction;',
'    ov varchar2(4000) := null;',
'    nv varchar2(4000) := null;',
'begin',
'    -- PROJECT_ID (foreign key)',
'    if nvl(:old.project_id,-999) != nvl(:new.project_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select row_key val from eba_proj_status$ t where t.id = :old.project_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select row_key val from eba_proj_status$ t where t.id = :new.project_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''PROJECT_ID'', ov, nv);',
'    end if;',
'    -- ACTION_OWNER_01 (default)',
'    if nvl(:old.action_owner_01, ''0'') != nvl(:new.action_owner_01,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_OWNER_01'', substr(:old.action_owner_01,0,4000), substr(:new.action_owner_01,0,4000) ); ',
'    end if;',
'    -- ACTION_OWNER_02 (default)',
'    if nvl(:old.action_owner_02, ''0'') != nvl(:new.action_owner_02,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_OWNER_02'', substr(:old.action_owner_02,0,4000), substr(:new.action_owner_02,0,4000) ); ',
'    end if;',
'    -- ACTION_OWNER_03 (default)',
'    if nvl(:old.action_owner_03, ''0'') != nvl(:new.action_owner_03,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_OWNER_03'', substr(:old.action_owner_03,0,4000), substr(:new.action_owner_03,0,4000) ); ',
'    end if;',
'    -- ACTION_OWNER_04 (default)',
'    if nvl(:old.action_owner_04, ''0'') != nvl(:new.action_owner_04,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id'))
);
wwv_flow_api.component_end;
end;
/
begin
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9008156634332785
,p_default_application_id=>134
,p_default_id_offset=>172493832712964115
,p_default_owner=>'MISO'
);
wwv_flow_api.append_to_install_script(
 p_id=>wwv_flow_api.id(11140497268928551181)
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
', column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_OWNER_04'', substr(:old.action_owner_04,0,4000), substr(:new.action_owner_04,0,4000) ); ',
'    end if;',
'    -- ACTION (default)',
'    if nvl(:old.action, ''0'') != nvl(:new.action,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION'', substr(:old.action,0,4000), substr(:new.action,0,4000) ); ',
'    end if;',
'    -- ACTION_DESCRIPTION (default)',
'    if nvl(:old.action_description, ''0'') != nvl(:new.action_description,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_DESCRIPTION'', substr(:old.action_description,0,4000), substr(:new.action_description,0,4000) ); ',
'    end if;',
'    -- DUE_DATE (date/timestamp)',
'    if (:old.due_date is null and :new.due_date is not null) or ',
'        (:old.due_date is not null and :new.due_date is null) or ',
'        (trunc(:old.due_date) != trunc(:new.due_date)) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''DUE_DATE'', to_char(:old.due_date, ''DD-MON-YYYY''), to_char(:new.due_date, ''DD-MON-YYYY'') );',
'    end if;',
'    -- ACTION_STATUS (default)',
'    if nvl(:old.action_status, ''0'') != nvl(:new.action_status,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_STATUS'', substr(:old.action_status,0,4000), substr(:new.action_status,0,4000) ); ',
'    end if;',
'    -- IS_DELIVERABLE_YN (default)',
'    if nvl(:old.is_deliverable_yn, ''0'') != nvl(:new.is_deliverable_yn,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''IS_DELIVERABLE_YN'', substr(:old.is_deliverable_yn,0,4000), substr(:new.is_deliverable_yn,0,4000) ); ',
'    end if;',
'    -- TYPE_ID (foreign key)',
'    if nvl(:old.type_id,-999) != nvl(:new.type_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select ai_type val from eba_proj_status_ais_types t where t.id = :old.type_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select ai_type val from eba_proj_status_ais_types t where t.id = :new.type_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''TYPE_ID'', ov, nv);',
'    end if;',
'    commit;',
'end au_eba_proj_status_ais;',
'/',
'',
'alter trigger au_eba_proj_status_ais enable',
'/',
'    ',
'create or replace trigger au_eba_proj_status_ms',
'    after update on eba_proj_status_ms$',
'    for each row',
'declare',
'    pragma autonomous_transaction;',
'    ov varchar2(4000) := null;',
'    nv varchar2(4000) := null;',
'begin',
'    -- PROJECT_ID (foreign key)',
'    if nvl(:old.project_id,-999) != nvl(:new.project_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select row_key val from eba_proj_status$ t where t.id = :old.project_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select row_key val from eba_proj_status$ t where t.id = :new.project_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS_MS'', :new.row_key, :new.id, ''PROJECT_ID'', ov, nv);',
'    end if;',
'    -- MILESTONE_NAME (default)',
'    if nvl(:old.milestone_name, ''0'') != nvl(:new.milestone_name,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_NAME'', substr(:old.milestone_name,0,4000), substr(:new.milestone_name,0,4000) ); ',
'    end if;',
'    -- MILESTONE_DESCRIPTION (default)',
'    if nvl(:old.milestone_description, ''0'') != nvl(:new.milestone_description,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_DESCRIPTION'', substr(:old.milestone_description,0,4000), substr(:new.milestone_description,0,4000) ); ',
'    end if;',
'    -- MILESTONE_DATE (date/timestamp)',
'    if (:old.milestone_date is null and :new.milestone_date is not null) or ',
'        (:old.milestone_date is not null and :new.milestone_date is null) or ',
'        (trunc(:old.milestone_date) != trunc(:new.milestone_date)) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_DATE'', to_char(:old.milestone_date, ''DD-MON-YYYY''), to_char(:new.milestone_date, ''DD-MON-YYYY'') );',
'    end if;',
'    -- MILESTONE_START_DATE (date/timestamp)',
'    if (:old.milestone_start_date is null and :new.milestone_start_date is not null) or ',
'        (:old.milestone_start_date is not null and :new.milestone_start_date is null) or ',
'        (:old.milestone_start_date != :new.milestone_start_date) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_START_DATE'', to_char(:old.milestone_start_date, ''DD-MON-YYYY''), to_char(:new.milestone_start_date, ''DD-MON-YYYY'') );',
'    end if;',
'    -- MILESTONE_STATUS (default)',
'    if nvl(:old.milestone_status, ''0'') != nvl(:new.milestone_status,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_STATUS'', substr(:old.milestone_status,0,4000), substr(:new.milestone_status,0,4000) ); ',
'    end if;',
'    -- MILESTONE_OWNER (default)',
'    if nvl(:old.milestone_owner, ''0'') != nvl(:new.milestone_owner,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_OWNER'', substr(:old.milestone_owner,0,4000), substr(:new.milestone_owner,0,4000) ); ',
'    end if;',
'    -- IS_MAJOR_YN (default)',
'    if nvl(:old.is_major_yn, ''0'') != nvl(:new.is_major_yn,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''IS_MAJOR_YN'', substr(:old.is_major_yn,0,4000), substr(:new.is_major_yn,0,4000) ); ',
'    end if;',
'    commit;',
'end au_eba_proj_status_ms;',
'/',
'',
'alter trigger au_eba_proj_status_ms enable',
'/',
'',
'create or replace trigger eba_eba_proj_status_ver',
'    before insert or update on eba_proj_status_verifications',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(apex_application.g_user,user);',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(apex_application.g_user,user);',
'    end if;',
'end;',
'/',
'alter trigger eba_eba_proj_status_ver enable',
'/',
'',
'create or replace trigger aiu_eba_proj_status_ver',
'    after insert or update on eba_proj_status_verifications',
'    for each row',
'begin',
'    --',
'    -- cascade update to project',
'    --',
'    update eba_proj_status$ set updated = localtimestamp',
'    where  id = :new.project_id;',
'end;',
'/',
'alter trigger aiu_eba_proj_status_ver enable',
'/',
'',
'create or replace trigger aiu_eba_proj_status_issues',
'    after insert or update on eba_proj_status_issues$',
'    for each row',
'begin',
'    --',
'    -- cascade update to project',
'    --',
'    update eba_proj_status$ set updated = localtimestamp',
'    where  id = :new.project_id;',
'end;',
'/',
'alter trigger  aiu_eba_proj_status_issues enable',
'/',
'',
'create or replace trigger  bi_eba_proj_status_issues ',
'    before insert or update on eba_proj_status_issues$',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(wwv_flow.g_user,user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(wwv_flow.g_user,user);',
'    end if;',
'end;',
'/',
'alter trigger  bi_eba_proj_status_issues enable',
'/'))
);
null;
wwv_flow_api.component_end;
end;
/
