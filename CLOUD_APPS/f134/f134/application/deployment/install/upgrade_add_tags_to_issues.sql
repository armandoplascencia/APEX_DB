prompt --application/deployment/install/upgrade_add_tags_to_issues
begin
--   Manifest
--     INSTALL: UPGRADE-Add tags to Issues
--   Manifest End
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9008156634332785
,p_default_application_id=>134
,p_default_id_offset=>172493832712964115
,p_default_owner=>'MISO'
);
wwv_flow_api.create_install_script(
 p_id=>wwv_flow_api.id(844948659689047346)
,p_install_id=>wwv_flow_api.id(9012014618759672631)
,p_name=>'Add tags to Issues'
,p_sequence=>1370
,p_script_type=>'UPGRADE'
,p_condition_type=>'NOT_EXISTS'
,p_condition=>wwv_flow_string.join(wwv_flow_t_varchar2(
'select null',
'from user_tab_cols',
'where table_name = ''EBA_PROJ_STATUS_ISSUES$''',
'    and column_name = ''TAGS'''))
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'-- ADD THE NEW TAGS COLUMN TO THE ISSUES TABLE',
'alter table EBA_PROJ_STATUS_ISSUES$ add tags varchar2(4000);',
'/',
'',
'-- DROP THE TAGS CHECK CONSTRAINT ON CONTENT_TYPE (to add new STATUS_ISSUES content_type)',
'alter table',
'   EBA_PROJ_TAGS$',
'drop constraint',
'   EBA_PROJ_TAGS_CK;',
'',
'-- RECREATE THE TAGS CHECK CONSTRAINT ON CONTENT_TYPE (to add new STATUS_ISSUES content_type)',
'alter table EBA_PROJ_TAGS$ modify content_type varchar2(30)',
'                            constraint eba_proj_tags_ck check',
'                            (content_type in (''STATUS'',''STATUS_ISSUES'',''FILE'',''AI'',''MILESTONE'',''LINK'',''UPDATES''));',
'                            ',
'-- RECREATE TAG VIEW for new STATUS_ISSUES content_type',
'create or replace view eba_proj_tags as',
'select id, ',
'    row_version_number, ',
'    tag, ',
'    content_id, ',
'    content_type, ',
'    created, ',
'    created_by, ',
'    updated, ',
'    updated_by ',
'from eba_proj_tags$ t',
'where ( t.content_type = ''AI''',
'        and exists ( select null from eba_proj_status_ais a where t.content_id = a.id ))',
'    or ( t.content_type = ''MILESTONE''',
'        and exists ( select null from eba_proj_status_ms m where t.content_id = m.id ))',
'    or ( t.content_type = ''FILE''',
'        and exists ( select null from eba_proj_status_files f where t.content_id = f.id ))',
'    or ( t.content_type = ''STATUS''',
'        and exists ( select null from eba_proj_status p where t.content_id = p.id ))',
'    or ( t.content_type = ''STATUS_ISSUES''',
'        and exists ( select null from eba_proj_status_issues p where t.content_id = p.id ))',
'    or ( t.content_type = ''LINK''',
'        and exists ( select null from eba_proj_status_links l where t.content_id = l.id ))',
'    or ( t.content_type = ''UPDATES''',
'        and exists ( select null from eba_proj_status_updates u where t.content_id = u.id ))',
'/',
'',
'-- RECREATE ISSUE TRIGGERS WITH TAG PROCEDURES',
'create or replace trigger biu_eba_proj_status_issues',
'    before insert or update on eba_proj_status_issues$',
'    for each row',
'begin',
'    if :new.id is null then',
'        :new.id := to_number(sys_guid(),''XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'');',
'    end if;',
'    if :new.tags is not null then',
'        :new.tags := eba_proj_fw.tags_cleaner(:new.tags);',
'    end if;',
'    if :new.row_key is null then',
'        select eba_proj_fw.compress_int(eba_proj_seq.nextval) into :new.row_key from dual;',
'    end if;',
'    if inserting then',
'        :new.created := localtimestamp;',
'        :new.created_by := nvl(wwv_flow.g_user,user);',
'        :new.row_version_number := 1;',
'    elsif updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    if inserting or updating then',
'        :new.updated := localtimestamp;',
'        :new.updated_by := nvl(wwv_flow.g_user,user);',
'    end if;',
'    if :new.is_open = ''N'' then',
'        :new.resolved_on := current_timestamp;',
'    elsif :new.is_open = ''Y'' then',
'        :new.resolved_on := null;',
'    end if;',
'    eba_proj_fw.tag_sync(',
'        p_new_tags      => :new.tags,',
'        p_old_tags      => :old.tags,',
'        p_content_type  => ''STATUS_ISSUES'',',
'        p_content_id    => :new.id );',
'end;',
'/',
'',
'alter trigger biu_eba_proj_status_issues enable',
'/',
'',
'create or replace trigger bd_eba_proj_status_issues',
'    before delete on eba_proj_status_issues$',
'    for each row',
'begin',
'    eba_proj_fw.tag_sync(',
'        p_new_tags      => null,',
'        p_old_tags      => :old.tags,',
'        p_content_type  => ''STATUS_ISSUES'',',
'        p_content_id    => :old.id );',
'end;',
'/',
'',
'alter trigger bd_eba_proj_status_issues enable',
'/',
'',
'create or replace trigger au_eba_proj_status_issues',
'    after update on eba_proj_status_issues$',
'    for each row',
'declare',
'    pragma autonomous_transaction;',
'    ov varchar2(4000) := null;',
'    nv varchar2(4000) := null;',
'begin',
'    -- PROJECT_ID (foreign key)',
'    if nvl(:old.project_id,-999) != nvl(:new.project_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select row_key val from eba_proj_status$ t where t.id = :old.project_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select row_key val from eba_proj_status$ t where t.id = :new.project_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''PROJECT_ID'', ov, nv);',
'    end if;',
'    -- ISSUE (default)',
'    if nvl(:old.issue, ''0'') != nvl(:new.issue,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''ISSUE'', substr(:old.issue,0,4000), substr(:new.issue,0,4000) ); ',
'    end if;',
'    -- ISSUE_DETAIL (default)',
'    if nvl(:old.issue_detail, ''0'') != nvl(:new.issue_detail,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''ISSUE_DETAIL'', substr(:old.issue_detail,0,4000), substr(:new.issue_detail,0,4000) ); ',
'    end if;',
'    -- ISSUE_OWNER (default)',
'    if nvl(:old.issue_owner, ''0'') != nvl(:new.issue_owner,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''ISSUE_OWNER'', substr(:old.issue_owner,0,4000), substr(:new.issue_owner,0,4000) ); ',
'    end if;',
'    -- ISSUE_LEVEL (default)',
'    if nvl(:old.issue_level, ''0'') != nvl(:new.issue_level,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''ISSUE_LEVEL'', substr(:old.issue_level,0,4000), substr(:new.issue_level,0,4000) ); ',
'    end if;',
'    -- LINK_01 (default)',
'    if nvl(:old.link_01, ''0'') != nvl(:new.link_01,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''LINK_01'', substr(:old.link_01,0,4000), substr(:new.link_01,0,4000) ); ',
'    end if;',
'    -- LINK_02 (default)',
'    if nvl(:old.link_02, ''0'') != nvl(:new.link_02,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''LINK_02'', substr(:old.link_02,0,4000), substr(:new.link_02,0,4000) ); ',
'    end if;',
'    -- LINK_03 (default)',
'    if nvl(:old.link_03, ''0'') != nvl(:new.link_03,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''LINK_03'', substr(:old.link_03,0,4000), substr(:new.link_03,0,4000) ); ',
'    end if;',
'    -- LINK_04 (default)',
'    if nvl(:old.link_04, ''0'') != nvl(:new.link_04,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''LINK_04'', substr(:old.link_04,0,4000), substr(:new.link_04,0,4000) ); ',
'    end if;',
'    -- LINK_05 (default)',
'    if nvl(:old.link_05, ''0'') != nvl(:new.link_05,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''LINK_05'', substr(:old.link_05,0,4000), substr(:new.link_05,0,4000) ); ',
'    end if;',
'    -- LINK_06 (default)',
'    if nvl(:old.link_06, ''0'') != nvl(:new.link_06,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''LINK_06'', substr(:old.link_06,0,4000), substr(:new.link_06,0,4000) ); ',
'    end if;',
'    -- LINK_07 (default)',
'    if nvl(:old.link_07, ''0'') != nvl(:new.link_07,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''LINK_07'', substr(:old.link_07,0,4000), substr(:new.link_07,0,4000) ); ',
'    end if;',
'    -- LINK_08 (default)',
'    if nvl(:old.link_08, ''0'') != nvl(:new.link_08,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''LINK_08'', substr(:old.link_08,0,4000), substr(:new.link_08,0,4000) ); ',
'    end if;',
'    -- LINK_NAME_01 (default)',
'    if nvl(:old.link_name_01, ''0'') != nvl(:new.link_name_01,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''LINK_NAME_01'', substr(:old.link_name_01,0,4000), substr(:new.link_name_01,0,4000) ); ',
'    end if;',
'    -- LINK_NAME_02 (default)',
'    if nvl(:old.link_name_02, ''0'') != nvl(:new.link_name_02,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''LINK_NAME_02'', substr(:old.link_name_02,0,4000), substr(:new.link_name_02,0,4000) ); ',
'    end if;',
'    -- LINK_NAME_03 (default)',
'    if nvl(:old.link_name_03, ''0'') != nvl(:new.link_name_03,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''LINK_NAME_03'', substr(:old.link_name_03,0,4000), substr(:new.link_name_03,0,4000) ); ',
'    end if;',
'    -- LINK_NAME_04 (default)',
'    if nvl(:old.link_name_04, ''0'') != nvl(:new.link_name_04,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''LINK_NAME_04'', substr(:old.link_name_04,0,4000), substr(:new.link_name_04,0,4000) ); ',
'    end if;',
'    -- LINK_NAME_05 (default)',
'    if nvl(:old.link_name_05, ''0'') != nvl(:new.link_name_05,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''LINK_NAME_05'', substr(:old.link_name_05,0,4000), substr(:new.link_name_05,0,4000) ); ',
'    end if;',
'    -- LINK_NAME_06 (default)',
'    if nvl(:old.link_name_06, ''0'') != nvl(:new.link_name_06,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''LINK_NAME_06'', substr(:old.link_name_06,0,4000), substr(:new.link_name_06,0,4000) ); ',
'    end if;',
'    -- LINK_NAME_07 (default)',
'    if nvl(:old.link_name_07, ''0'') != nvl(:new.link_name_07,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''LINK_NAME_07'', substr(:old.link_name_07,0,4000), substr(:new.link_name_07,0,4000) ); ',
'    end if;',
'    -- LINK_NAME_08 (default)',
'    if nvl(:old.link_name_08, ''0'') != nvl(:new.link_name_08,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''LINK_NAME_08'', substr(:old.link_name_08,0,4000), substr(:new.link_name_08,0,4000) ); ',
'    end if;',
'    -- IS_OPEN (default)',
'    if nvl(:old.is_open, ''0'') != nvl(:new.is_open,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''IS_OPEN'', substr(:old.is_open,0,4000), substr(:new.is_open,0,4000) ); ',
'    end if;',
'    -- OWNER_ROLE_ID (foreign key)',
'    if nvl(:old.owner_role_id,-999) != nvl(:new.owner_role_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select name val from eba_proj_roles t where t.id = :old.owner_role_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select name val from eba_proj_roles t where t.id = :new.owner_role_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''OWNER_ROLE_ID'', ov, nv);',
'    end if;',
'    -- CAT_ID (foreign key)',
'    if nvl(:old.cat_id,-999) != nvl(:new.cat_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select name val from eba_proj_issue_cats t where t.id = :old.cat_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select name val from eba_proj_issue_cats t where t.id = :new.cat_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''CAT_ID'', ov, nv);',
'    end if;',
'    -- REF_NUM (default)',
'    if nvl(:old.ref_num, ''0'') != nvl(:new.ref_num,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''REF_NUM'', :old.ref_num, :new.ref_num ); ',
'    end if;',
'    -- RESOLUTION (default)',
'    if nvl(:old.resolution, ''0'') != nvl(:new.resolution,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''RESOLUTION'', substr(:old.resolution,0,4000), substr(:new.resolution,0,4000) ); ',
'    end if;',
'    -- TAGS (default)',
'    if nvl(:old.tags, ''0'') != nvl(:new.tags,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_ISSUES'', :new.row_key, :new.id, ''TAGS'', substr(:old.tags,0,4000), substr(:new.tags,0,4000) ); ',
'    end if;',
'    commit;',
'end au_eba_proj_status_issues;',
'/',
'alter trigger au_eba_proj_status_issues enable',
'/'))
);
wwv_flow_api.component_end;
end;
/
