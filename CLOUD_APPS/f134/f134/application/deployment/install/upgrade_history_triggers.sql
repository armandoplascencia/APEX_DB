prompt --application/deployment/install/upgrade_history_triggers
begin
--   Manifest
--     INSTALL: UPGRADE-History Triggers
--   Manifest End
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9008156634332785
,p_default_application_id=>134
,p_default_id_offset=>172493832712964115
,p_default_owner=>'MISO'
);
wwv_flow_api.create_install_script(
 p_id=>wwv_flow_api.id(6078560079632305966)
,p_install_id=>wwv_flow_api.id(9012014618759672631)
,p_name=>'History Triggers'
,p_sequence=>1050
,p_script_type=>'UPGRADE'
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'create or replace trigger au_eba_proj_status',
'    after update on eba_proj_status$',
'    for each row',
'declare',
'    pragma autonomous_transaction;',
'    ov varchar2(4000) := null;',
'    nv varchar2(4000) := null;',
'begin',
'    -- CAT_ID (foreign key)',
'    if nvl(:old.cat_id,-999) != nvl(:new.cat_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select category val from eba_proj_status_cats t where t.id = :old.cat_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select category val from eba_proj_status_cats t where t.id = :new.cat_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS'', :new.row_key, :new.id, ''CAT_ID'', ov, nv);',
'    end if;',
'    -- PARENT_PROJECT_ID (foreign key)',
'    if nvl(:old.parent_project_id,-999) != nvl(:new.parent_project_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select row_key val from eba_proj_status$ t where t.id = :old.parent_project_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select row_key val from eba_proj_status$ t where t.id = :new.parent_project_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS'', :new.row_key, :new.id, ''PARENT_PROJECT_ID'', ov, nv);',
'    end if;',
'    -- PROJECT (default)',
'    if nvl(:old.project, ''0'') != nvl(:new.project,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT'', substr(:old.project,0,4000), substr(:new.project,0,4000) ); ',
'    end if;',
'    -- PROJECT_CUSTOMER (default)',
'    if nvl(:old.project_customer, ''0'') != nvl(:new.project_customer,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_CUSTOMER'', substr(:old.project_customer,0,4000), substr(:new.project_customer,0,4000) ); ',
'    end if;',
'    -- PROJECT_STATUS (foreign key)',
'    if nvl(:old.project_status,-999) != nvl(:new.project_status,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select status_short_desc val from eba_proj_status_codes t where t.id = :old.project_status) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select status_short_desc val from eba_proj_status_codes t where t.id = :new.project_status) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_STATUS'', ov, nv);',
'    end if;',
'    -- TAGS (default)',
'    if nvl(:old.tags, ''0'') != nvl(:new.tags,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''TAGS'', substr(:old.tags,0,4000), substr(:new.tags,0,4000) ); ',
'    end if;',
'    -- NEXT_MILESTONE_NAME (default)',
'    if nvl(:old.next_milestone_name, ''0'') != nvl(:new.next_milestone_name,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''NEXT_MILESTONE_NAME'', substr(:old.next_milestone_name,0,4000), substr(:new.next_milestone_name,0,4000) ); ',
'    end if;',
'    -- NEXT_MILESTONE_DATE (date/timestamp)',
'    if (:old.next_milestone_date is null and :new.next_milestone_date is not null) or ',
'        (:old.next_milestone_date is not null and :new.next_milestone_date is null) or ',
'        (:old.next_milestone_date != :new.next_milestone_date) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''NEXT_MILESTONE_DATE'', to_char(:old.next_milestone_date, ''DD-MON-YYYY''), to_char(:new.next_milestone_date, ''DD-MON-YYYY'') );',
'    end if;',
'    -- GOAL (default)',
'    if nvl(:old.goal, ''0'') != nvl(:new.goal,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''GOAL'', substr(:old.goal,0,4000), substr(:new.goal,0,4000) ); ',
'    end if;',
'    -- WHAT_IS_SUCCESS (default)',
'    if nvl(:old.what_is_success, ''0'') != nvl(:new.what_is_success,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''WHAT_IS_SUCCESS'', substr(:old.what_is_success,0,4000), substr(:new.what_is_success,0,4000) ); ',
'    end if;',
'    -- URL (default)',
'    if nvl(:old.url, ''0'') != nvl(:new.url,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''URL'', substr(:old.url,0,4000), substr(:new.url,0,4000) ); ',
'    end if;',
'    -- INCLUDE_BY_DEFAULT_YN (default)',
'    if nvl(:old.include_by_default_yn, ''0'') != nvl(:new.include_by_default_yn,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''INCLUDE_BY_DEFAULT_YN'', substr(:old.include_by_default_yn,0,4000), substr(:new.include_by_default_yn,0,4000) ); ',
'    end if;',
'    -- DESCRIPTION (default)',
'    if nvl(:old.description, ''0'') != nvl(:new.description,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''DESCRIPTION'', substr(:old.description,0,4000), substr(:new.description,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_01 (default)',
'    if nvl(:old.project_flex_01, ''0'') != nvl(:new.project_flex_01,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_01'', substr(:old.project_flex_01,0,4000), substr(:new.project_flex_01,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_02 (default)',
'    if nvl(:old.project_flex_02, ''0'') != nvl(:new.project_flex_02,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_02'', substr(:old.project_flex_02,0,4000), substr(:new.project_flex_02,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_03 (default)',
'    if nvl(:old.project_flex_03, ''0'') != nvl(:new.project_flex_03,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_03'', substr(:old.project_flex_03,0,4000), substr(:new.project_flex_03,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_04 (default)',
'    if nvl(:old.project_flex_04, ''0'') != nvl(:new.project_flex_04,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_04'', substr(:old.project_flex_04,0,4000), substr(:new.project_flex_04,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_05 (default)',
'    if nvl(:old.project_flex_05, ''0'') != nvl(:new.project_flex_05,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_05'', substr(:old.project_flex_05,0,4000), substr(:new.project_flex_05,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_06 (default)',
'    if nvl(:old.project_flex_06, ''0'') != nvl(:new.project_flex_06,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_06'', substr(:old.project_flex_06,0,4000), substr(:new.project_flex_06,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_07 (default)',
'    if nvl(:old.project_flex_07, ''0'') != nvl(:new.project_flex_07,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_07'', substr(:old.project_flex_07,0,4000), substr(:new.project_flex_07,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_08 (default)',
'    if nvl(:old.project_flex_08, ''0'') != nvl(:new.project_flex_08,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_08'', substr(:old.project_flex_08,0,4000), substr(:new.project_flex_08,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_N01 (default)',
'    if nvl(:old.project_flex_n01, ''0'') != nvl(:new.project_flex_n01,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_N01'', substr(:old.project_flex_n01,0,4000), substr(:new.project_flex_n01,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_N02 (default)',
'    if nvl(:old.project_flex_n02, ''0'') != nvl(:new.project_flex_n02,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_N02'', substr(:old.project_flex_n02,0,4000), substr(:new.project_flex_n02,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_N03 (default)',
'    if nvl(:old.project_flex_n03, ''0'') != nvl(:new.project_flex_n03,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_N03'', substr(:old.project_flex_n03,0,4000), substr(:new.project_flex_n03,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_N04 (default)',
'    if nvl(:old.project_flex_n04, ''0'') != nvl(:new.project_flex_n04,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_N04'', substr(:old.project_flex_n04,0,4000), substr(:new.project_flex_n04,0,4000) ); ',
'    end if;',
'    -- PROJECT_FLEX_D01 (date/timestamp)',
'    if (:old.project_flex_d01 is null and :new.project_flex_d01 is not null) or ',
'        (:old.project_flex_d01 is not null and :new.project_flex_d01 is null) or ',
'        (:old.project_flex_d01 != :new.project_flex_d01) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D01'', to_char(:old.project_flex_d01, ''DD-MON-YYYY''), to_char(:new.project_flex_d01, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D02 (date/timestamp)',
'    if (:old.project_flex_d02 is null and :new.project_flex_d02 is not null) or ',
'        (:old.project_flex_d02 is not null and :new.project_flex_d02 is null) or ',
'        (:old.project_flex_d02 != :new.project_flex_d02) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D02'', to_char(:old.project_flex_d02, ''DD-MON-YYYY''), to_char(:new.project_flex_d02, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D03 (date/timestamp)',
'    if (:old.project_flex_d03 is null and :new.project_flex_d03 is not null) or ',
'        (:old.project_flex_d03 is not null and :new.project_flex_d03 is null) or ',
'        (:old.project_flex_d03 != :new.project_flex_d03) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D03'', to_char(:old.project_flex_d03, ''DD-MON-YYYY''), to_char(:new.project_flex_d03, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D04 (date/timestamp)',
'    if (:old.project_flex_d04 is null and :new.project_flex_d04 is not null) or ',
'        (:old.project_flex_d04 is not null and :new.project_flex_d04 is null) or ',
'        (:old.project_flex_d04 != :new.project_flex_d04) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D04'', to_char(:old.project_flex_d04, ''DD-MON-YYYY''), to_char(:new.project_flex_d04, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D05 (date/timestamp)',
'    if (:old.project_flex_d05 is null and :new.project_flex_d05 is not null) or ',
'        (:old.project_flex_d05 is not null and :new.project_flex_d05 is null) or ',
'        (:old.project_flex_d05 != :new.project_flex_d05) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D05'', to_char(:old.project_flex_d05, ''DD-MON-YYYY''), to_char(:new.project_flex_d05, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D06 (date/timestamp)',
'    if (:old.project_flex_d06 is null and :new.project_flex_d06 is not null) or ',
'        (:old.project_flex_d06 is not null and :new.project_flex_d06 is null) or ',
'        (:old.project_flex_d06 != :new.project_flex_d06) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D06'', to_char(:old.project_flex_d06, ''DD-MON-YYYY''), to_char(:new.project_flex_d06, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D07 (date/timestamp)',
'    if (:old.project_flex_d07 is null and :new.project_flex_d07 is not null) or ',
'        (:old.project_flex_d07 is not null and :new.project_flex_d07 is null) or ',
'        (:old.project_flex_d07 != :new.project_flex_d07) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D07'', to_char(:old.project_flex_d07, ''DD-MON-YYYY''), to_char(:new.project_flex_d07, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D08 (date/timestamp)',
'    if (:old.project_flex_d08 is null and :new.project_flex_d08 is not null) or ',
'        (:old.project_flex_d08 is not null and :new.project_flex_d08 is null) or ',
'        (:old.project_flex_d08 != :new.project_flex_d08) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D08'', to_char(:old.project_flex_d08, ''DD-MON-YYYY''), to_char(:new.project_flex_d08, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D09 (date/timestamp)',
'    if (:old.project_flex_d09 is null and :new.project_flex_d09 is not null) or ',
'        (:old.project_flex_d09 is not null and :new.project_flex_d09 is null) or ',
'        (:old.project_flex_d09 != :new.project_flex_d09) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D09'', to_char(:old.project_flex_d09, ''DD-MON-YYYY''), to_char(:new.project_flex_d09, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D10 (date/timestamp)',
'    if (:old.project_flex_d10 is null and :new.project_flex_d10 is not null) or ',
'        (:old.project_flex_d10 is not null and :new.project_flex_d10 is null) or ',
'        (:old.project_flex_d10 != :new.project_flex_d10) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D10'', to_char(:old.project_flex_d10, ''DD-MON-YYYY''), to_char(:new.project_flex_d10, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D11 (date/timestamp)',
'    if (:old.project_flex_d11 is null and :new.project_flex_d11 is not null) or ',
'        (:old.project_flex_d11 is not null and :new.project_flex_d11 is null) or ',
'        (:old.project_flex_d11 != :new.project_flex_d11) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D11'', to_char(:old.project_flex_d11, ''DD-MON-YYYY''), to_char(:new.project_flex_d11, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_D12 (date/timestamp)',
'    if (:old.project_flex_d12 is null and :new.project_flex_d12 is not null) or ',
'        (:old.project_flex_d12 is not null and :new.project_flex_d12 is null) or ',
'        (:old.project_flex_d12 != :new.project_flex_d12) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_D12'', to_char(:old.project_flex_d12, ''DD-MON-YYYY''), to_char(:new.project_flex_d12, ''DD-MON-YYYY'') );',
'    end if;',
'    -- PROJECT_FLEX_CLOB (default)',
'    if nvl(:old.project_flex_clob, ''0'') != nvl(:new.project_flex_clob,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''PROJECT_FLEX_CLOB'', substr(:old.project_flex_clob,0,4000), substr(:new.project_flex_clob,0,4000) ); ',
'    end if;',
'    -- IS_DELETED_YN (default)',
'    if nvl(:old.is_deleted_yn, ''0'') != nvl(:new.is_deleted_yn,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''IS_DELETED_YN'', substr(:old.is_deleted_yn,0,4000), substr(:new.is_deleted_yn,0,4000) ); ',
'    end if;',
'    -- ACL_STATUS_LEVEL (default)',
'    if nvl(:old.acl_status_level, ''0'') != nvl(:new.acl_status_level,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''ACL_STATUS_LEVEL'', substr(:old.acl_status_level,0,4000), substr(:new.acl_status_level,0,4000) ); ',
'    end if;',
'    -- SIZE_ID (foreign key)',
'    if nvl(:old.size_id,-999) != nvl(:new.size_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select project_size val from eba_proj_status_sizes t where t.id = :old.size_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select project_size val from eba_proj_status_sizes t where t.id = :new.size_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS'', :new.row_key, :new.id, ''SIZE_ID'', ov, nv);',
'    end if;',
'    -- RESTRICT_MS_AI_MANAGEMENT (default)',
'    if nvl(:old.restrict_ms_ai_management, ''0'') != nvl(:new.restrict_ms_ai_management,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''RESTRICT_MS_AI_MANAGEMENT'', substr(:old.restrict_ms_ai_management,0,4000), substr(:new.restrict_ms_ai_management,0,4000) ); ',
'    end if;',
'    -- TEMPLATE_ID (foreign key)',
'    if nvl(:old.template_id,-999) != nvl(:new.template_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select name val from eba_proj_templates t where t.id = :old.template_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select name val from eba_proj_templates t where t.id = :new.template_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS'', :new.row_key, :new.id, ''TEMPLATE_ID'', ov, nv);',
'    end if;',
'    -- CODE_NAME (default)',
'    if nvl(:old.code_name, ''0'') != nvl(:new.code_name,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''CODE_NAME'', substr(:old.code_name,0,4000), substr(:new.code_name,0,4000) ); ',
'    end if;',
'    -- HEADLINE (default)',
'    if nvl(:old.headline, ''0'') != nvl(:new.headline,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS'', :new.row_key, :new.id, ''HEADLINE'', :old.headline, :new.headline ); ',
'    end if;',
'    -- DEAL_TYPE_ID (foreign key)',
'    if nvl(:old.deal_type_id,-999) != nvl(:new.deal_type_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select deal_type val from eba_proj_deal_types t where t.id = :old.deal_type_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select deal_type val from eba_proj_deal_types t where t.id = :new.deal_type_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS'', :new.row_key, :new.id, ''DEAL_TYPE_ID'', ov, nv);',
'    end if;',
'    commit;',
'end au_eba_proj_status;',
'/',
'alter trigger au_eba_proj_status enable',
'/',
'',
'create or replace trigger au_eba_proj_status_ais',
'    after update on eba_proj_status_ais$',
'    for each row',
'declare',
'    pragma autonomous_transaction;',
'    ov varchar2(4000) := null;',
'    nv varchar2(4000) := null;',
'begin',
'    -- PROJECT_ID (foreign key)',
'    if nvl(:old.project_id,-999) != nvl(:new.project_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select row_key val from eba_proj_status$ t where t.id = :old.project_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select row_key val from eba_proj_status$ t where t.id = :new.project_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''PROJECT_ID'', ov, nv);',
'    end if;',
'    -- ACTION_OWNER_01 (default)',
'    if nvl(:old.action_owner_01, ''0'') != nvl(:new.action_owner_01,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_OWNER_01'', substr(:old.action_owner_01,0,4000), substr(:new.action_owner_01,0,4000) ); ',
'    end if;',
'    -- ACTION_OWNER_02 (default)',
'    if nvl(:old.action_owner_02, ''0'') != nvl(:new.action_owner_02,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_OWNER_02'', substr(:old.action_owner_02,0,4000), substr(:new.action_owner_02,0,4000) ); ',
'    end if;',
'    -- ACTION_OWNER_03 (default)',
'    if nvl(:old.action_owner_03, ''0'') != nvl(:new.action_owner_03,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_OWNER_03'', substr(:old.action_owner_03,0,4000), substr(:new.action_owner_03,0,4000) ); ',
'    end if;',
'    -- ACTION_OWNER_04 (default)',
'    if nvl(:old.action_owner_04, ''0'') != nvl(:new.action_owner_04,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_OWNER_04'', substr(:old.action_owner_04,0,4000), substr(:new.action_owner_04,0,4000) ); ',
'    end if;',
'    -- ACTION (default)',
'    if nvl(:old.action, ''0'') != nvl(:new.action,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION'', substr(:old.action,0,4000), substr(:new.action,0,4000) ); ',
'    end if;',
'    -- ACTION_DESCRIPTION (default)',
'    if nvl(:old.action_description, ''0'') != nvl(:new.action_description,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_DESCRIPTION'', substr(:old.action_description,0,4000), substr(:new.action_description,0,4000) ); ',
'    end if;',
'    -- DUE_DATE (date/timestamp)',
'    if (:old.due_date is null and :new.due_date is not null) or ',
'        (:old.due_date is not null and :new.due_date is null) or ',
'        (:old.due_date != :new.due_date) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''DUE_DATE'', to_char(:old.due_date, ''DD-MON-YYYY''), to_char(:new.due_date, ''DD-MON-YYYY'') );',
'    end if;',
'    -- ACTION_STATUS (default)',
'    if nvl(:old.action_status, ''0'') != nvl(:new.action_status,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_STATUS'', substr(:old.action_status,0,4000), substr(:new.action_status,0,4000) ); ',
'    end if;',
'    -- IS_DELIVERABLE_YN (default)',
'    if nvl(:old.is_deliverable_yn, ''0'') != nvl(:new.is_deliverable_yn,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''IS_DELIVERABLE_YN'', substr(:old.is_deliverable_yn,0,4000), substr(:new.is_deliverable_yn,0,4000) ); ',
'    end if;',
'    -- TYPE_ID (foreign key)',
'    if nvl(:old.type_id,-999) != nvl(:new.type_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select ai_type val from eba_proj_status_ais_types t where t.id = :old.type_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select ai_type val from eba_proj_status_ais_types t where t.id = :new.type_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''TYPE_ID'', ov, nv);',
'    end if;',
'    -- TAGS (default)',
'    if nvl(:old.tags, ''0'') != nvl(:new.tags,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''TAGS'', substr(:old.tags,0,4000), substr(:new.tags,0,4000) ); ',
'    end if;',
'    -- MILESTONE_ID (foreign key)',
'    if nvl(:old.milestone_id,-999) != nvl(:new.milestone_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select row_key val from eba_proj_status_ms$ t where t.id = :old.milestone_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select row_key val from eba_proj_status_ms$ t where t.id = :new.milestone_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''MILESTONE_ID'', ov, nv);',
'    end if;',
'    -- ACTION_FLEX_01 (default)',
'    if nvl(:old.action_flex_01, ''0'') != nvl(:new.action_flex_01,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_FLEX_01'', substr(:old.action_flex_01,0,4000), substr(:new.action_flex_01,0,4000) ); ',
'    end if;',
'    -- ACTION_FLEX_02 (default)',
'    if nvl(:old.action_flex_02, ''0'') != nvl(:new.action_flex_02,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_FLEX_02'', substr(:old.action_flex_02,0,4000), substr(:new.action_flex_02,0,4000) ); ',
'    end if;',
'    -- ACTION_FLEX_03 (default)',
'    if nvl(:old.action_flex_03, ''0'') != nvl(:new.action_flex_03,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_FLEX_03'', substr(:old.action_flex_03,0,4000), substr(:new.action_flex_03,0,4000) ); ',
'    end if;',
'    -- ACTION_FLEX_04 (default)',
'    if nvl(:old.action_flex_04, ''0'') != nvl(:new.action_flex_04,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_FLEX_04'', substr(:old.action_flex_04,0,4000), substr(:new.action_flex_04,0,4000) ); ',
'    end if;',
'    -- ACTION_FLEX_05 (default)',
'    if nvl(:old.action_flex_05, ''0'') != nvl(:new.action_flex_05,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_FLEX_05'', substr(:old.action_flex_05,0,4000), substr(:new.action_flex_05,0,4000) ); ',
'    end if;',
'    -- ACTION_FLEX_06 (default)',
'    if nvl(:old.action_flex_06, ''0'') != nvl(:new.action_flex_06,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name,'))
);
wwv_flow_api.component_end;
end;
/
begin
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9008156634332785
,p_default_application_id=>134
,p_default_id_offset=>172493832712964115
,p_default_owner=>'MISO'
);
wwv_flow_api.append_to_install_script(
 p_id=>wwv_flow_api.id(6078560079632305966)
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
' old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_FLEX_06'', substr(:old.action_flex_06,0,4000), substr(:new.action_flex_06,0,4000) ); ',
'    end if;',
'    -- ACTION_FLEX_07 (default)',
'    if nvl(:old.action_flex_07, ''0'') != nvl(:new.action_flex_07,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_FLEX_07'', substr(:old.action_flex_07,0,4000), substr(:new.action_flex_07,0,4000) ); ',
'    end if;',
'    -- ACTION_FLEX_08 (default)',
'    if nvl(:old.action_flex_08, ''0'') != nvl(:new.action_flex_08,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_FLEX_08'', substr(:old.action_flex_08,0,4000), substr(:new.action_flex_08,0,4000) ); ',
'    end if;',
'    -- ACTION_FLEX_N01 (default)',
'    if nvl(:old.action_flex_n01, ''0'') != nvl(:new.action_flex_n01,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_FLEX_N01'', substr(:old.action_flex_n01,0,4000), substr(:new.action_flex_n01,0,4000) ); ',
'    end if;',
'    -- ACTION_FLEX_N02 (default)',
'    if nvl(:old.action_flex_n02, ''0'') != nvl(:new.action_flex_n02,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_FLEX_N02'', substr(:old.action_flex_n02,0,4000), substr(:new.action_flex_n02,0,4000) ); ',
'    end if;',
'    -- ACTION_FLEX_N03 (default)',
'    if nvl(:old.action_flex_n03, ''0'') != nvl(:new.action_flex_n03,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_FLEX_N03'', substr(:old.action_flex_n03,0,4000), substr(:new.action_flex_n03,0,4000) ); ',
'    end if;',
'    -- ACTION_FLEX_N04 (default)',
'    if nvl(:old.action_flex_n04, ''0'') != nvl(:new.action_flex_n04,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_FLEX_N04'', substr(:old.action_flex_n04,0,4000), substr(:new.action_flex_n04,0,4000) ); ',
'    end if;',
'    -- ACTION_FLEX_D01 (date/timestamp)',
'    if (:old.action_flex_d01 is null and :new.action_flex_d01 is not null) or ',
'        (:old.action_flex_d01 is not null and :new.action_flex_d01 is null) or ',
'        (:old.action_flex_d01 != :new.action_flex_d01) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_FLEX_D01'', to_char(:old.action_flex_d01, ''DD-MON-YYYY''), to_char(:new.action_flex_d01, ''DD-MON-YYYY'') );',
'    end if;',
'    -- ACTION_FLEX_D02 (date/timestamp)',
'    if (:old.action_flex_d02 is null and :new.action_flex_d02 is not null) or ',
'        (:old.action_flex_d02 is not null and :new.action_flex_d02 is null) or ',
'        (:old.action_flex_d02 != :new.action_flex_d02) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_FLEX_D02'', to_char(:old.action_flex_d02, ''DD-MON-YYYY''), to_char(:new.action_flex_d02, ''DD-MON-YYYY'') );',
'    end if;',
'    -- ACTION_FLEX_D03 (date/timestamp)',
'    if (:old.action_flex_d03 is null and :new.action_flex_d03 is not null) or ',
'        (:old.action_flex_d03 is not null and :new.action_flex_d03 is null) or ',
'        (:old.action_flex_d03 != :new.action_flex_d03) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_FLEX_D03'', to_char(:old.action_flex_d03, ''DD-MON-YYYY''), to_char(:new.action_flex_d03, ''DD-MON-YYYY'') );',
'    end if;',
'    -- ACTION_FLEX_D04 (date/timestamp)',
'    if (:old.action_flex_d04 is null and :new.action_flex_d04 is not null) or ',
'        (:old.action_flex_d04 is not null and :new.action_flex_d04 is null) or ',
'        (:old.action_flex_d04 != :new.action_flex_d04) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_FLEX_D04'', to_char(:old.action_flex_d04, ''DD-MON-YYYY''), to_char(:new.action_flex_d04, ''DD-MON-YYYY'') );',
'    end if;',
'    -- ACTION_FLEX_CLOB (default)',
'    if nvl(:old.action_flex_clob, ''0'') != nvl(:new.action_flex_clob,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ACTION_FLEX_CLOB'', substr(:old.action_flex_clob,0,4000), substr(:new.action_flex_clob,0,4000) ); ',
'    end if;',
'    -- OWNER_ROLE_ID (default)',
'    if nvl(:old.owner_role_id, ''0'') != nvl(:new.owner_role_id,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''OWNER_ROLE_ID'', substr(:old.owner_role_id,0,4000), substr(:new.owner_role_id,0,4000) ); ',
'    end if;',
'    -- TEMPLATE_ID (foreign key)',
'    if nvl(:old.template_id,-999) != nvl(:new.template_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select name val from eba_proj_template_ai t where t.id = :old.template_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select name val from eba_proj_template_ai t where t.id = :new.template_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''TEMPLATE_ID'', ov, nv);',
'    end if;',
'    -- RESOLUTION (default)',
'    if nvl(:old.resolution, ''0'') != nvl(:new.resolution,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''RESOLUTION'', substr(:old.resolution,0,4000), substr(:new.resolution,0,4000) ); ',
'    end if;',
'    -- ORIGINAL_DUE_DATE (date/timestamp)',
'    if (:old.original_due_date is null and :new.original_due_date is not null) or ',
'        (:old.original_due_date is not null and :new.original_due_date is null) or ',
'        (:old.original_due_date != :new.original_due_date) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''ORIGINAL_DUE_DATE'', to_char(:old.original_due_date, ''DD-MON-YYYY''), to_char(:new.original_due_date, ''DD-MON-YYYY'') );',
'    end if;',
'    -- INC_IN_STATUS_EML_YN (default)',
'    if nvl(:old.inc_in_status_eml_yn, ''0'') != nvl(:new.inc_in_status_eml_yn,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''INC_IN_STATUS_EML_YN'', substr(:old.inc_in_status_eml_yn,0,4000), substr(:new.inc_in_status_eml_yn,0,4000) ); ',
'    end if;',
'    -- LINK_URL (default)',
'    if nvl(:old.link_url, ''0'') != nvl(:new.link_url,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''LINK_URL'', substr(:old.link_url,0,4000), substr(:new.link_url,0,4000) ); ',
'    end if;',
'    -- LINK_TEXT (default)',
'    if nvl(:old.link_text, ''0'') != nvl(:new.link_text,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''LINK_TEXT'', substr(:old.link_text,0,4000), substr(:new.link_text,0,4000) ); ',
'    end if;',
'    -- COMPLETED_DATE (date/timestamp)',
'    if (:old.completed_date is null and :new.completed_date is not null) or ',
'        (:old.completed_date is not null and :new.completed_date is null) or ',
'        (:old.completed_date != :new.completed_date) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_AIS'', :new.row_key, :new.id, ''COMPLETED_DATE'', to_char(:old.completed_date, ''DD-MON-YYYY''), to_char(:new.completed_date, ''DD-MON-YYYY'') );',
'    end if;',
'    commit;',
'end au_eba_proj_status_ais;',
'/',
'alter trigger au_eba_proj_status_ais enable',
'/',
'',
'create or replace trigger au_eba_proj_status_ms',
'    after update on eba_proj_status_ms$',
'    for each row',
'declare',
'    pragma autonomous_transaction;',
'    ov varchar2(4000) := null;',
'    nv varchar2(4000) := null;',
'begin',
'    -- PROJECT_ID (foreign key)',
'    if nvl(:old.project_id,-999) != nvl(:new.project_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select row_key val from eba_proj_status$ t where t.id = :old.project_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select row_key val from eba_proj_status$ t where t.id = :new.project_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS_MS'', :new.row_key, :new.id, ''PROJECT_ID'', ov, nv);',
'    end if;',
'    -- MILESTONE_NAME (default)',
'    if nvl(:old.milestone_name, ''0'') != nvl(:new.milestone_name,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_NAME'', substr(:old.milestone_name,0,4000), substr(:new.milestone_name,0,4000) ); ',
'    end if;',
'    -- MILESTONE_DESCRIPTION (default)',
'    if nvl(:old.milestone_description, ''0'') != nvl(:new.milestone_description,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_DESCRIPTION'', substr(:old.milestone_description,0,4000), substr(:new.milestone_description,0,4000) ); ',
'    end if;',
'    -- MILESTONE_DATE (date/timestamp)',
'    if (:old.milestone_date is null and :new.milestone_date is not null) or ',
'        (:old.milestone_date is not null and :new.milestone_date is null) or ',
'        (:old.milestone_date != :new.milestone_date) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_DATE'', to_char(:old.milestone_date, ''DD-MON-YYYY''), to_char(:new.milestone_date, ''DD-MON-YYYY'') );',
'    end if;',
'    -- MILESTONE_START_DATE (date/timestamp)',
'    if (:old.milestone_start_date is null and :new.milestone_start_date is not null) or ',
'        (:old.milestone_start_date is not null and :new.milestone_start_date is null) or ',
'        (:old.milestone_start_date != :new.milestone_start_date) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_START_DATE'', to_char(:old.milestone_start_date, ''DD-MON-YYYY''), to_char(:new.milestone_start_date, ''DD-MON-YYYY'') );',
'    end if;',
'    -- MILESTONE_STATUS (default)',
'    if nvl(:old.milestone_status, ''0'') != nvl(:new.milestone_status,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_STATUS'', substr(:old.milestone_status,0,4000), substr(:new.milestone_status,0,4000) ); ',
'    end if;',
'    -- MILESTONE_OWNER (default)',
'    if nvl(:old.milestone_owner, ''0'') != nvl(:new.milestone_owner,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_OWNER'', substr(:old.milestone_owner,0,4000), substr(:new.milestone_owner,0,4000) ); ',
'    end if;',
'    -- IS_MAJOR_YN (default)',
'    if nvl(:old.is_major_yn, ''0'') != nvl(:new.is_major_yn,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''IS_MAJOR_YN'', substr(:old.is_major_yn,0,4000), substr(:new.is_major_yn,0,4000) ); ',
'    end if;',
'    -- TAGS (default)',
'    if nvl(:old.tags, ''0'') != nvl(:new.tags,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''TAGS'', substr(:old.tags,0,4000), substr(:new.tags,0,4000) ); ',
'    end if;',
'    -- MILESTONE_FLEX_01 (default)',
'    if nvl(:old.milestone_flex_01, ''0'') != nvl(:new.milestone_flex_01,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_FLEX_01'', substr(:old.milestone_flex_01,0,4000), substr(:new.milestone_flex_01,0,4000) ); ',
'    end if;',
'    -- MILESTONE_FLEX_02 (default)',
'    if nvl(:old.milestone_flex_02, ''0'') != nvl(:new.milestone_flex_02,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_FLEX_02'', substr(:old.milestone_flex_02,0,4000), substr(:new.milestone_flex_02,0,4000) ); ',
'    end if;',
'    -- MILESTONE_FLEX_03 (default)',
'    if nvl(:old.milestone_flex_03, ''0'') != nvl(:new.milestone_flex_03,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_FLEX_03'', substr(:old.milestone_flex_03,0,4000), substr(:new.milestone_flex_03,0,4000) ); ',
'    end if;',
'    -- MILESTONE_FLEX_04 (default)',
'    if nvl(:old.milestone_flex_04, ''0'') != nvl(:new.milestone_flex_04,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_FLEX_04'', substr(:old.milestone_flex_04,0,4000), substr(:new.milestone_flex_04,0,4000) ); ',
'    end if;',
'    -- MILESTONE_FLEX_05 (default)',
'    if nvl(:old.milestone_flex_05, ''0'') != nvl(:new.milestone_flex_05,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_FLEX_05'', substr(:old.milestone_flex_05,0,4000), substr(:new.milestone_flex_05,0,4000) ); ',
'    end if;',
'    -- MILESTONE_FLEX_06 (default)',
'    if nvl(:old.milestone_flex_06, ''0'') != nvl(:new.milestone_flex_06,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_FLEX_06'', substr(:old.milestone_flex_06,0,4000), substr(:new.milestone_flex_06,0,4000) ); ',
'    end if;',
'    -- MILESTONE_FLEX_07 (default)',
'    if nvl(:old.milestone_flex_07, ''0'') != nvl(:new.milestone_flex_07,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_FLEX_07'', substr(:old.milestone_flex_07,0,4000), substr(:new.milestone_flex_07,0,4000) ); ',
'    end if;',
'    -- MILESTONE_FLEX_08 (default)',
'    if nvl(:old.milestone_flex_08, ''0'') != nvl(:new.milestone_flex_08,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_FLEX_08'', substr(:old.milestone_flex_08,0,4000), substr(:new.milestone_flex_08,0,4000) ); ',
'    end if;',
'    -- MILESTONE_FLEX_N01 (default)',
'    if nvl(:old.milestone_flex_n01, ''0'') != nvl(:new.milestone_flex_n01,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_FLEX_N01'', substr(:old.milestone_flex_n01,0,4000), substr(:new.milestone_flex_n01,0,4000) ); ',
'    end if;',
'    -- MILESTONE_FLEX_N02 (default)',
'    if nvl(:old.milestone_flex_n02, ''0'') != nvl(:new.milestone_flex_n02,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_FLEX_N02'', substr(:old.milestone_flex_n02,0,4000), substr(:new.milestone_flex_n02,0,4000) ); ',
'    end if;',
'    -- MILESTONE_FLEX_N03 (default)',
'    if nvl(:old.milestone_flex_n03, ''0'') != nvl(:new.milestone_flex_n03,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_FLEX_N03'', substr(:old.milestone_flex_n03,0,4000), substr(:new.milestone_flex_n03,0,4000) ); ',
'    end if;',
'    -- MILESTONE_FLEX_N04 (default)',
'    if nvl(:old.milestone_flex_n04, ''0'') != nvl(:new.milestone_flex_n04,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_FLEX_N04'', substr(:old.milestone_flex_n04,0,4000), substr(:new.milestone_flex_n04,0,4000) ); ',
'    end if;',
'    -- MILESTONE_FLEX_D01 (date/timestamp)',
'    if (:old.milestone_flex_d01 is null and :new.milestone_flex_d01 is not null) or ',
'        (:old.milestone_flex_d01 is not null and :new.milestone_flex_d01 is null) or ',
'        (:old.milestone_flex_d01 != :new.milestone_flex_d01) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_FLEX_D01'', to_char(:old.milestone_flex_d01, ''DD-MON-YYYY''), to_char(:new.milestone_flex_d01, ''DD-MON-YYYY'') );',
'    end if;',
'    -- MILESTONE_FLEX_D02 (date/timestamp)',
'    if (:old.milestone_flex_d02 is null and :new.milestone_flex_d02 is not null) or ',
'        (:old.milestone_flex_d02 is not null and :new.milestone_flex_d02 is null) or ',
'        (:old.milestone_flex_d02 != :new.milestone_flex_d02) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_FLEX_D02'', to_char(:old.milestone_flex_d02, ''DD-MON-YYYY''), to_char(:new.milestone_flex_d02, ''DD-MON-YYYY'') );',
'    end if;',
'    -- MILESTONE_FLEX_D03 (date/timestamp)',
'    if (:old.milestone_flex_d03 is null and :new.milestone_flex_d03 is not null) or ',
'        (:old.milestone_flex_d03 is not null and :new.milestone_flex_d03 is null) or ',
'        (:old.milestone_flex_d03 != :new.milestone_flex_d03) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_FLEX_D03'', to_char(:old.milestone_flex_d03, ''DD-MON-YYYY''), to_char(:new.milestone_flex_d03, ''DD-MON-YYYY'') );',
'    end if;',
'    -- MILESTONE_FLEX_D04 (date/timestamp)',
'    if (:old.milestone_flex_d04 is null and :new.milestone_flex_d04 is not null) or ',
'        (:old.milestone_flex_d04 is not null and :new.milestone_flex_d04 is null) or ',
'        (:old.milestone_flex_d04 != :new.milestone_flex_d04) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_FLEX_D04'', to_char(:old.milestone_flex_d04, ''DD-MON-YYYY''), to_char(:new.milestone_flex_d04, ''DD-MON-YYYY'') );',
'    end if;',
'    -- MILESTONE_FLEX_CLOB (default)',
'    if nvl(:old.milestone_flex_clob, ''0'') != nvl(:new.milestone_flex_clob,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''MILESTONE_FLEX_CLOB'', substr(:old.milestone_flex_clob,0,4000), substr(:new.milestone_flex_clob,0,4000) ); ',
'    end if;',
'    -- OWNER_ROLE_ID (default)',
'    if nvl(:old.owner_role_id, ''0'') != nvl(:new.owner_role_id,''0'') then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''OWNER_ROLE_ID'', substr(:old.owner_role_id,0,4000), substr(:new.owner_role_id,0,4000) ); ',
'    end if;',
'    -- TEMPLATE_ID (foreign key)',
'    if nvl(:old.template_id,-999) != nvl(:new.template_id,-999) then',
'        ov := null; nv := null;',
'        for c1 in (select name val from eba_proj_template_ms t where t.id = :old.template_id) loop',
'            ov := c1.val;',
'        end loop;',
'        for c1 in (select name val from eba_proj_template_ms t where t.id = :new.template_id) loop',
'            nv := c1.val;',
'        end loop;',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values',
'            (''STATUS_MS'', :new.row_key, :new.id, ''TEMPLATE_ID'', ov, nv);',
'    end if;',
'    -- ORIGINAL_DUE_DATE (date/timestamp)',
'    if (:old.original_due_date is null and :new.original_due_date is not null) or ',
'        (:old.original_due_date is not null and :new.original_due_date is null) or ',
'        (:old.original_due_date != :new.original_due_date) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''ORIGINAL_DUE_DATE'', to_char(:old.original_due_date, ''DD-MON-YYYY''), to_char(:new.original_due_date, ''DD-MON-YYYY'') );',
'    end if;',
'    -- COMPLETED_DATE (date/timestamp)',
'    if (:old.completed_date is null and :new.completed_date is not null) or ',
'        (:old.completed_date is not null and :new.completed_date is null) or ',
'        (:old.completed_date != :new.completed_date) then ',
'        insert into eba_proj_history$ (table_name, component_rowkey, component_id, column_name, old_value, new_value) values ',
'            (''STATUS_MS'', :new.row_key, :new.id, ''COMPLETED_DATE'', to_char(:old.completed_date, ''DD-MON-YYYY''), to_char(:new.completed_date, ''DD-MON-YYYY'') );',
'    end if;',
'    commit;',
'end au_eba_proj_status_ms;',
'/',
'alter trigger au_eba_proj_status_ms enable',
'/',
'',
'show errors'))
);
null;
wwv_flow_api.component_end;
end;
/
